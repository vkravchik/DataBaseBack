{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/dialogs/add/add-auto/add-auto.component.css","webpack:///./src/app/dialogs/add/add-auto/add-auto.component.html","webpack:///./src/app/dialogs/add/add-auto/add-auto.component.ts","webpack:///./src/app/dialogs/add/add-brigada/add-brigada.component.css","webpack:///./src/app/dialogs/add/add-brigada/add-brigada.component.html","webpack:///./src/app/dialogs/add/add-brigada/add-brigada.component.ts","webpack:///./src/app/dialogs/add/add-brigadir/add-brigadir.component.css","webpack:///./src/app/dialogs/add/add-brigadir/add-brigadir.component.html","webpack:///./src/app/dialogs/add/add-brigadir/add-brigadir.component.ts","webpack:///./src/app/dialogs/add/add-category-personal/add-category-personal.component.css","webpack:///./src/app/dialogs/add/add-category-personal/add-category-personal.component.html","webpack:///./src/app/dialogs/add/add-category-personal/add-category-personal.component.ts","webpack:///./src/app/dialogs/add/add-category/add-category.component.css","webpack:///./src/app/dialogs/add/add-category/add-category.component.html","webpack:///./src/app/dialogs/add/add-category/add-category.component.ts","webpack:///./src/app/dialogs/add/add-driver/add-driver.component.css","webpack:///./src/app/dialogs/add/add-driver/add-driver.component.html","webpack:///./src/app/dialogs/add/add-driver/add-driver.component.ts","webpack:///./src/app/dialogs/add/add-group/add-group.component.css","webpack:///./src/app/dialogs/add/add-group/add-group.component.html","webpack:///./src/app/dialogs/add/add-group/add-group.component.ts","webpack:///./src/app/dialogs/add/add-har-route/add-har-route.component.css","webpack:///./src/app/dialogs/add/add-har-route/add-har-route.component.html","webpack:///./src/app/dialogs/add/add-har-route/add-har-route.component.ts","webpack:///./src/app/dialogs/add/add-infrastruct/add-infrastruct.component.css","webpack:///./src/app/dialogs/add/add-infrastruct/add-infrastruct.component.html","webpack:///./src/app/dialogs/add/add-infrastruct/add-infrastruct.component.ts","webpack:///./src/app/dialogs/add/add-marka/add-marka.component.css","webpack:///./src/app/dialogs/add/add-marka/add-marka.component.html","webpack:///./src/app/dialogs/add/add-marka/add-marka.component.ts","webpack:///./src/app/dialogs/add/add-personal/add-personal.component.css","webpack:///./src/app/dialogs/add/add-personal/add-personal.component.html","webpack:///./src/app/dialogs/add/add-personal/add-personal.component.ts","webpack:///./src/app/dialogs/add/add-problem/add-problem.component.css","webpack:///./src/app/dialogs/add/add-problem/add-problem.component.html","webpack:///./src/app/dialogs/add/add-problem/add-problem.component.ts","webpack:///./src/app/dialogs/add/add-repair/add-repair.component.css","webpack:///./src/app/dialogs/add/add-repair/add-repair.component.html","webpack:///./src/app/dialogs/add/add-repair/add-repair.component.ts","webpack:///./src/app/dialogs/add/add-route/add-route.component.css","webpack:///./src/app/dialogs/add/add-route/add-route.component.html","webpack:///./src/app/dialogs/add/add-route/add-route.component.ts","webpack:///./src/app/dialogs/add/add-sale-buy/add-sale-buy.component.css","webpack:///./src/app/dialogs/add/add-sale-buy/add-sale-buy.component.html","webpack:///./src/app/dialogs/add/add-sale-buy/add-sale-buy.component.ts","webpack:///./src/app/dialogs/add/add-street/add-street.component.css","webpack:///./src/app/dialogs/add/add-street/add-street.component.html","webpack:///./src/app/dialogs/add/add-street/add-street.component.ts","webpack:///./src/app/dialogs/add/add-user/add-user.component.css","webpack:///./src/app/dialogs/add/add-user/add-user.component.html","webpack:///./src/app/dialogs/add/add-user/add-user.component.ts","webpack:///./src/app/dialogs/dialogs-route/dialogs-route.component.css","webpack:///./src/app/dialogs/dialogs-route/dialogs-route.component.html","webpack:///./src/app/dialogs/dialogs-route/dialogs-route.component.ts","webpack:///./src/app/dialogs/dialogs-street/dialogs-street.component.css","webpack:///./src/app/dialogs/dialogs-street/dialogs-street.component.html","webpack:///./src/app/dialogs/dialogs-street/dialogs-street.component.ts","webpack:///./src/app/dialogs/edit/edit-auto/edit-auto.component.css","webpack:///./src/app/dialogs/edit/edit-auto/edit-auto.component.html","webpack:///./src/app/dialogs/edit/edit-auto/edit-auto.component.ts","webpack:///./src/app/dialogs/edit/edit-brigada/edit-brigada.component.css","webpack:///./src/app/dialogs/edit/edit-brigada/edit-brigada.component.html","webpack:///./src/app/dialogs/edit/edit-brigada/edit-brigada.component.ts","webpack:///./src/app/dialogs/edit/edit-brigadir/edit-brigadir.component.css","webpack:///./src/app/dialogs/edit/edit-brigadir/edit-brigadir.component.html","webpack:///./src/app/dialogs/edit/edit-brigadir/edit-brigadir.component.ts","webpack:///./src/app/dialogs/edit/edit-category-personal/edit-category-personal.component.css","webpack:///./src/app/dialogs/edit/edit-category-personal/edit-category-personal.component.html","webpack:///./src/app/dialogs/edit/edit-category-personal/edit-category-personal.component.ts","webpack:///./src/app/dialogs/edit/edit-category/edit-category.component.css","webpack:///./src/app/dialogs/edit/edit-category/edit-category.component.html","webpack:///./src/app/dialogs/edit/edit-category/edit-category.component.ts","webpack:///./src/app/dialogs/edit/edit-driver/edit-driver.component.css","webpack:///./src/app/dialogs/edit/edit-driver/edit-driver.component.html","webpack:///./src/app/dialogs/edit/edit-driver/edit-driver.component.ts","webpack:///./src/app/dialogs/edit/edit-group/edit-group.component.css","webpack:///./src/app/dialogs/edit/edit-group/edit-group.component.html","webpack:///./src/app/dialogs/edit/edit-group/edit-group.component.ts","webpack:///./src/app/dialogs/edit/edit-hard-route/edit-hard-route.component.css","webpack:///./src/app/dialogs/edit/edit-hard-route/edit-hard-route.component.html","webpack:///./src/app/dialogs/edit/edit-hard-route/edit-hard-route.component.ts","webpack:///./src/app/dialogs/edit/edit-infrastruct/edit-infrastruct.component.css","webpack:///./src/app/dialogs/edit/edit-infrastruct/edit-infrastruct.component.html","webpack:///./src/app/dialogs/edit/edit-infrastruct/edit-infrastruct.component.ts","webpack:///./src/app/dialogs/edit/edit-marka/edit-marka.component.css","webpack:///./src/app/dialogs/edit/edit-marka/edit-marka.component.html","webpack:///./src/app/dialogs/edit/edit-marka/edit-marka.component.ts","webpack:///./src/app/dialogs/edit/edit-personal/edit-personal.component.css","webpack:///./src/app/dialogs/edit/edit-personal/edit-personal.component.html","webpack:///./src/app/dialogs/edit/edit-personal/edit-personal.component.ts","webpack:///./src/app/dialogs/edit/edit-problem/edit-problem.component.css","webpack:///./src/app/dialogs/edit/edit-problem/edit-problem.component.html","webpack:///./src/app/dialogs/edit/edit-problem/edit-problem.component.ts","webpack:///./src/app/dialogs/edit/edit-repair/edit-repair.component.css","webpack:///./src/app/dialogs/edit/edit-repair/edit-repair.component.html","webpack:///./src/app/dialogs/edit/edit-repair/edit-repair.component.ts","webpack:///./src/app/dialogs/edit/edit-route/edit-route.component.css","webpack:///./src/app/dialogs/edit/edit-route/edit-route.component.html","webpack:///./src/app/dialogs/edit/edit-route/edit-route.component.ts","webpack:///./src/app/dialogs/edit/edit-sale-buy/edit-sale-buy.component.css","webpack:///./src/app/dialogs/edit/edit-sale-buy/edit-sale-buy.component.html","webpack:///./src/app/dialogs/edit/edit-sale-buy/edit-sale-buy.component.ts","webpack:///./src/app/dialogs/edit/edit-street/edit-street.component.css","webpack:///./src/app/dialogs/edit/edit-street/edit-street.component.html","webpack:///./src/app/dialogs/edit/edit-street/edit-street.component.ts","webpack:///./src/app/dialogs/edit/edit-user/edit-user.component.css","webpack:///./src/app/dialogs/edit/edit-user/edit-user.component.html","webpack:///./src/app/dialogs/edit/edit-user/edit-user.component.ts","webpack:///./src/app/model/AutoRoute.ts","webpack:///./src/app/model/AutoStreet.ts","webpack:///./src/app/page/api-table/api-table.component.css","webpack:///./src/app/page/api-table/api-table.component.html","webpack:///./src/app/page/api-table/api-table.component.ts","webpack:///./src/app/page/auto/auto.component.css","webpack:///./src/app/page/auto/auto.component.html","webpack:///./src/app/page/auto/auto.component.ts","webpack:///./src/app/page/brigada/brigada.component.css","webpack:///./src/app/page/brigada/brigada.component.html","webpack:///./src/app/page/brigada/brigada.component.ts","webpack:///./src/app/page/brigadir/brigadir.component.css","webpack:///./src/app/page/brigadir/brigadir.component.html","webpack:///./src/app/page/brigadir/brigadir.component.ts","webpack:///./src/app/page/category-personal/category-personal.component.css","webpack:///./src/app/page/category-personal/category-personal.component.html","webpack:///./src/app/page/category-personal/category-personal.component.ts","webpack:///./src/app/page/category/category.component.css","webpack:///./src/app/page/category/category.component.html","webpack:///./src/app/page/category/category.component.ts","webpack:///./src/app/page/drivers/drivers.component.css","webpack:///./src/app/page/drivers/drivers.component.html","webpack:///./src/app/page/drivers/drivers.component.ts","webpack:///./src/app/page/group/group.component.css","webpack:///./src/app/page/group/group.component.html","webpack:///./src/app/page/group/group.component.ts","webpack:///./src/app/page/hard-route/hard-route.component.css","webpack:///./src/app/page/hard-route/hard-route.component.html","webpack:///./src/app/page/hard-route/hard-route.component.ts","webpack:///./src/app/page/infrastruct/infrastruct.component.css","webpack:///./src/app/page/infrastruct/infrastruct.component.html","webpack:///./src/app/page/infrastruct/infrastruct.component.ts","webpack:///./src/app/page/marka/marka.component.css","webpack:///./src/app/page/marka/marka.component.html","webpack:///./src/app/page/marka/marka.component.ts","webpack:///./src/app/page/personal/personal.component.css","webpack:///./src/app/page/personal/personal.component.html","webpack:///./src/app/page/personal/personal.component.ts","webpack:///./src/app/page/problem/problem.component.css","webpack:///./src/app/page/problem/problem.component.html","webpack:///./src/app/page/problem/problem.component.ts","webpack:///./src/app/page/prop/prop.component.css","webpack:///./src/app/page/prop/prop.component.html","webpack:///./src/app/page/prop/prop.component.ts","webpack:///./src/app/page/repair/repair.component.css","webpack:///./src/app/page/repair/repair.component.html","webpack:///./src/app/page/repair/repair.component.ts","webpack:///./src/app/page/route/route.component.css","webpack:///./src/app/page/route/route.component.html","webpack:///./src/app/page/route/route.component.ts","webpack:///./src/app/page/sale-buy/sale-buy.component.css","webpack:///./src/app/page/sale-buy/sale-buy.component.html","webpack:///./src/app/page/sale-buy/sale-buy.component.ts","webpack:///./src/app/page/street/street.component.css","webpack:///./src/app/page/street/street.component.html","webpack:///./src/app/page/street/street.component.ts","webpack:///./src/app/page/user/user.component.css","webpack:///./src/app/page/user/user.component.html","webpack:///./src/app/page/user/user.component.ts","webpack:///./src/app/query/query1/query1.component.css","webpack:///./src/app/query/query1/query1.component.html","webpack:///./src/app/query/query1/query1.component.ts","webpack:///./src/app/query/query10/q10d/q10d.component.css","webpack:///./src/app/query/query10/q10d/q10d.component.html","webpack:///./src/app/query/query10/q10d/q10d.component.ts","webpack:///./src/app/query/query10/query10.component.css","webpack:///./src/app/query/query10/query10.component.html","webpack:///./src/app/query/query10/query10.component.ts","webpack:///./src/app/query/query11/q11d/q11d.component.css","webpack:///./src/app/query/query11/q11d/q11d.component.html","webpack:///./src/app/query/query11/q11d/q11d.component.ts","webpack:///./src/app/query/query11/query11.component.css","webpack:///./src/app/query/query11/query11.component.html","webpack:///./src/app/query/query11/query11.component.ts","webpack:///./src/app/query/query12/q12d/q12d.component.css","webpack:///./src/app/query/query12/q12d/q12d.component.html","webpack:///./src/app/query/query12/q12d/q12d.component.ts","webpack:///./src/app/query/query12/query12.component.css","webpack:///./src/app/query/query12/query12.component.html","webpack:///./src/app/query/query12/query12.component.ts","webpack:///./src/app/query/query13/q13d/q13d.component.css","webpack:///./src/app/query/query13/q13d/q13d.component.html","webpack:///./src/app/query/query13/q13d/q13d.component.ts","webpack:///./src/app/query/query13/query13.component.css","webpack:///./src/app/query/query13/query13.component.html","webpack:///./src/app/query/query13/query13.component.ts","webpack:///./src/app/query/query14/q14d/q14d.component.css","webpack:///./src/app/query/query14/q14d/q14d.component.html","webpack:///./src/app/query/query14/q14d/q14d.component.ts","webpack:///./src/app/query/query14/query14.component.css","webpack:///./src/app/query/query14/query14.component.html","webpack:///./src/app/query/query14/query14.component.ts","webpack:///./src/app/query/query2/q2d/q2d.component.css","webpack:///./src/app/query/query2/q2d/q2d.component.html","webpack:///./src/app/query/query2/q2d/q2d.component.ts","webpack:///./src/app/query/query2/query2.component.css","webpack:///./src/app/query/query2/query2.component.html","webpack:///./src/app/query/query2/query2.component.ts","webpack:///./src/app/query/query3/query3.component.css","webpack:///./src/app/query/query3/query3.component.html","webpack:///./src/app/query/query3/query3.component.ts","webpack:///./src/app/query/query4/query4.component.css","webpack:///./src/app/query/query4/query4.component.html","webpack:///./src/app/query/query4/query4.component.ts","webpack:///./src/app/query/query6/q6d/q6d.component.css","webpack:///./src/app/query/query6/q6d/q6d.component.html","webpack:///./src/app/query/query6/q6d/q6d.component.ts","webpack:///./src/app/query/query6/query6.component.css","webpack:///./src/app/query/query6/query6.component.html","webpack:///./src/app/query/query6/query6.component.ts","webpack:///./src/app/query/query7/query7.component.css","webpack:///./src/app/query/query7/query7.component.html","webpack:///./src/app/query/query7/query7.component.ts","webpack:///./src/app/query/query8/q8d/q8d.component.css","webpack:///./src/app/query/query8/q8d/q8d.component.html","webpack:///./src/app/query/query8/q8d/q8d.component.ts","webpack:///./src/app/query/query8/query8.component.css","webpack:///./src/app/query/query8/query8.component.html","webpack:///./src/app/query/query8/query8.component.ts","webpack:///./src/app/query/query9/query9.component.css","webpack:///./src/app/query/query9/query9.component.html","webpack:///./src/app/query/query9/query9.component.ts","webpack:///./src/app/services/api-service.service.ts","webpack:///./src/app/services/auto.service.ts","webpack:///./src/app/services/brigada.service.ts","webpack:///./src/app/services/brigadir.service.ts","webpack:///./src/app/services/category-personal.service.ts","webpack:///./src/app/services/category.service.ts","webpack:///./src/app/services/dialog.service.ts","webpack:///./src/app/services/driver.service.ts","webpack:///./src/app/services/error.service.ts","webpack:///./src/app/services/group.service.ts","webpack:///./src/app/services/hard-route.service.ts","webpack:///./src/app/services/infrastruct.service.ts","webpack:///./src/app/services/marka.service.ts","webpack:///./src/app/services/personal.service.ts","webpack:///./src/app/services/problem.service.ts","webpack:///./src/app/services/query.service.ts","webpack:///./src/app/services/repair.service.ts","webpack:///./src/app/services/route.service.ts","webpack:///./src/app/services/sale-buy.service.ts","webpack:///./src/app/services/street.service.ts","webpack:///./src/app/services/user.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \":host >>>table {\\r\\n  width: 100%;\\r\\n}\\r\\n:host >>> tr {\\r\\n  background-color: white;\\r\\n  cursor: pointer;\\r\\n}\\r\\n:host >>> .mat-table .mat-row:hover {\\r\\n  background: rgba(0, 0, 0, 0.04);\\r\\n}\\r\\n:host >>> button:hover {\\r\\n  background-color: #d4d8db;\\r\\n}\\r\\n:host >>> .before-table {\\r\\n  width: 100%;\\r\\n  display: flex;\\r\\n  justify-content: flex-end;\\r\\n}\\r\\n:host >>> .mat-cell {\\r\\n  justify-content: flex-end;\\r\\n}\\r\\n:host >>> .modal {\\r\\n  width: 400px;\\r\\n  height: auto;\\r\\n}\\r\\n:host >>> .mat-header-cell {\\r\\n  justify-content: flex-end;\\r\\n}\\r\\n.hideItem {\\r\\n  display: none !important;\\r\\n}\\r\\n.example-container {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  /*position: absolute;*/\\r\\n  top: 0;\\r\\n  bottom: 0;\\r\\n  left: 0;\\r\\n  right: 0;\\r\\n}\\r\\n.example-is-mobile .example-toolbar {\\r\\n  position: fixed;\\r\\n  /* Make sure the toolbar will stay on top of the content as it scrolls past. */\\r\\n  z-index: 2;\\r\\n}\\r\\nh1.example-app-name {\\r\\n  margin-left: 8px;\\r\\n}\\r\\n.example-sidenav-container {\\r\\n  /* When the sidenav is not fixed, stretch the sidenav container to fill the available space. This\\r\\n     causes `<mat-sidenav-content>` to act as our scrolling element for desktop layouts. */\\r\\n  flex: 1;\\r\\n}\\r\\n.example-is-mobile .example-sidenav-container {\\r\\n  /* When the sidenav is fixed, don't constrain the height of the sidenav container. This allows the\\r\\n     `<body>` to be our scrolling element for mobile layouts. */\\r\\n  flex: 1 0 auto;\\r\\n}\\r\\n#container {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  top: 64px !important;\\r\\n\\r\\n  bottom: 0;\\r\\n  left: 0;\\r\\n  right: 0;\\r\\n}\\r\\n@media(max-width: 599px) {\\r\\n  #container {\\r\\n    top: 56px !important;\\r\\n  }\\r\\n}\\r\\n\"","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\r\\n  <mat-toolbar-row>\\r\\n    <button type=\\\"button\\\" aria-label=\\\"Toggle sidenav\\\" mat-icon-button (click)=\\\"drawer.toggle()\\\" color=\\\"white\\\">\\r\\n      <mat-icon aria-label=\\\"Side nav toggle icon\\\">{{drawer.opened ? 'close' : 'menu'}}</mat-icon>\\r\\n    </button>\\r\\n    <span>Course Work DB</span>\\r\\n    <span class=\\\"spacer\\\"></span>\\r\\n    <button type=\\\"button\\\" aria-label=\\\"Toggle sidenav\\\" mat-icon-button (click)=\\\"sidenavright.toggle()\\\" color=\\\"white\\\">\\r\\n      <mat-icon aria-label=\\\"Side nav toggle icon\\\">{{sidenavright.opened ? 'close' : 'menu'}}</mat-icon>\\r\\n    </button>\\r\\n  </mat-toolbar-row>\\r\\n</mat-toolbar>\\r\\n\\r\\n<mat-sidenav-container id=\\\"container\\\" fullscreen >\\r\\n  <mat-sidenav #drawer mode=\\\"side\\\" opened role=\\\"navigation\\\" [opened]=\\\"false\\\">\\r\\n    <mat-nav-list>\\r\\n      <a mat-list-item *ngFor=\\\"let item of items\\\" [routerLink]=\\\"item.path\\\"> {{item.title}} </a>\\r\\n    </mat-nav-list>\\r\\n  </mat-sidenav>\\r\\n  <mat-sidenav #sidenavright position=\\\"end\\\" mode=\\\"side\\\" opened [opened]=\\\"false\\\">\\r\\n    <mat-nav-list>\\r\\n      <a mat-list-item *ngFor=\\\"let item of queries\\\" [routerLink]=\\\"item.path\\\"> {{item.title}} </a>\\r\\n    </mat-nav-list>\\r\\n  </mat-sidenav>\\r\\n  <mat-sidenav-content>\\r\\n    <div>\\r\\n      <router-outlet></router-outlet>\\r\\n    </div>\\r\\n  </mat-sidenav-content>\\r\\n</mat-sidenav-container>\\r\\n\\r\\n\\r\\n\\r\\n\"","import {Component} from '@angular/core';\r\nimport {Router} from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  styleUrls: ['app.component.css'],\r\n  templateUrl: 'app.component.html',\r\n})\r\nexport class AppComponent {\r\n  queryFlag = false;\r\n\r\n  items = [\r\n    // {title: 'Користувачі', path: '/user', rols: ['admin']},\r\n\r\n    {title: 'Car Type', path: '/category', rols: ['admin', 'manager']},\r\n    {title: 'Car Model', path: '/marka', rols: ['admin', 'manager']},\r\n\r\n    {title: 'Drivers', path: '/drivers', rols: ['admin', 'driver']},\r\n    {title: 'Autos', path: '/auto', rols: ['admin', 'driver']},\r\n\r\n    {title: 'Brigade', path: '/brigada', rols: ['admin', 'brigadir']},\r\n    {title: 'Brigadier', path: '/brigadir', rols: ['admin', 'brigadir']},\r\n    {title: 'Groups', path: '/group', rols: ['admin', 'brigadir']},\r\n\r\n    {title: 'Personal Type', path: '/categoryPersonal', rols: ['admin', 'brigadir']},\r\n    {title: 'Personals', path: '/personal', rols: ['admin', 'brigadir']},\r\n\r\n    {title: 'Hard Routes', path: '/hardRoute', rols: ['admin', 'brigadir']},\r\n    {title: 'Routes', path: '/route', rols: ['admin', 'brigadir']},\r\n\r\n    {title: 'Infrastructs', path: '/infrastruct', rols: ['admin', 'brigadir']},\r\n    {title: 'Streets', path: '/street', rols: ['admin', 'brigadir']},\r\n\r\n    {title: 'Problems', path: '/problem', rols: ['admin', 'brigadir']},\r\n    {title: 'Repairs', path: '/repair', rols: ['admin', 'brigadir']},\r\n    {title: 'Sale/Buy', path: '/saleBuy', rols: ['admin', 'brigadir']},\r\n\r\n\r\n  ];\r\n\r\n  queries = [\r\n    {title: 'Query_1', path: '/query1', rols: ['admin']},\r\n    {title: 'Query_2', path: '/query2', rols: ['admin']},\r\n    {title: 'Query_3', path: '/query3', rols: ['admin']},\r\n    {title: 'Query_4', path: '/query4', rols: ['admin']},\r\n    {title: 'Query_6', path: '/query6', rols: ['admin']},\r\n    {title: 'Query_7', path: '/query7', rols: ['admin']},\r\n    {title: 'Query_8', path: '/query8', rols: ['admin']},\r\n    {title: 'Query_9', path: '/query9', rols: ['admin']},\r\n    {title: 'Query_10', path: '/query10', rols: ['admin']},\r\n    {title: 'Query_11', path: '/query11', rols: ['admin']},\r\n    {title: 'Query_12', path: '/query12', rols: ['admin']},\r\n    {title: 'Query_13', path: '/query13', rols: ['admin']},\r\n    {title: 'Query_14', path: '/query14', rols: ['admin']},\r\n  ];\r\n\r\n  constructor(private router: Router) {\r\n    console.log(this.router.url);\r\n  }\r\n}\r\n\r\n","import {BrowserModule} from '@angular/platform-browser';\r\nimport {NgModule} from '@angular/core';\r\n\r\nimport {AppComponent} from './app.component';\r\nimport {HttpClientModule} from \"@angular/common/http\";\r\nimport {BrowserAnimationsModule} from \"@angular/platform-browser/animations\";\r\nimport {\r\n  MatButtonModule,\r\n  MatCheckboxModule,\r\n  MatDatepickerModule,\r\n  MatDialogModule,\r\n  MatFormFieldModule,\r\n  MatGridListModule,\r\n  MatIconModule,\r\n  MatInputModule,\r\n  MatListModule,\r\n  MatNativeDateModule,\r\n  MatPaginatorModule,\r\n  MatSelectModule,\r\n  MatSidenavModule,\r\n  MatSlideToggleModule,\r\n  MatSortModule,\r\n  MatTableModule,\r\n  MatToolbarModule\r\n} from \"@angular/material\";\r\nimport {CdkTableModule} from \"@angular/cdk/table\";\r\nimport {UserComponent} from './page/user/user.component';\r\nimport {RouterModule, Routes} from \"@angular/router\";\r\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\r\nimport {ToastrModule} from \"ngx-toastr\";\r\nimport {EditUserComponent} from './dialogs/edit/edit-user/edit-user.component';\r\nimport {AutoComponent} from './page/auto/auto.component';\r\nimport {BrigadaComponent} from './page/brigada/brigada.component';\r\nimport {BrigadirComponent} from './page/brigadir/brigadir.component';\r\nimport {CategoryComponent} from \"./page/category/category.component\";\r\nimport {CategoryPersonalComponent} from './page/category-personal/category-personal.component';\r\nimport {GroupComponent} from './page/group/group.component';\r\nimport {DriversComponent} from './page/drivers/drivers.component';\r\nimport {HardRouteComponent} from './page/hard-route/hard-route.component';\r\nimport {InfrastructComponent} from './page/infrastruct/infrastruct.component';\r\nimport {MarkaComponent} from './page/marka/marka.component';\r\nimport {PropComponent} from \"./page/prop/prop.component\";\r\nimport {PersonalComponent} from './page/personal/personal.component';\r\nimport {ProblemComponent} from './page/problem/problem.component';\r\nimport {RepairComponent} from './page/repair/repair.component';\r\nimport {RouteComponent} from './page/route/route.component';\r\nimport {SaleBuyComponent} from './page/sale-buy/sale-buy.component';\r\nimport {StreetComponent} from './page/street/street.component';\r\nimport {EditCategoryComponent} from './dialogs/edit/edit-category/edit-category.component';\r\nimport {AddUserComponent} from './dialogs/add/add-user/add-user.component';\r\nimport {AddDriverComponent} from './dialogs/add/add-driver/add-driver.component';\r\nimport {EditDriverComponent} from './dialogs/edit/edit-driver/edit-driver.component';\r\nimport {AddCategoryComponent} from './dialogs/add/add-category/add-category.component';\r\nimport {AddMarkaComponent} from './dialogs/add/add-marka/add-marka.component';\r\nimport {EditMarkaComponent} from './dialogs/edit/edit-marka/edit-marka.component';\r\nimport {AddAutoComponent} from './dialogs/add/add-auto/add-auto.component';\r\nimport {EditAutoComponent} from './dialogs/edit/edit-auto/edit-auto.component';\r\nimport {AddBrigadaComponent} from './dialogs/add/add-brigada/add-brigada.component';\r\nimport {EditBrigadaComponent} from './dialogs/edit/edit-brigada/edit-brigada.component';\r\nimport {AddBrigadirComponent} from './dialogs/add/add-brigadir/add-brigadir.component';\r\nimport {EditBrigadirComponent} from './dialogs/edit/edit-brigadir/edit-brigadir.component';\r\nimport {AddCategoryPersonalComponent} from './dialogs/add/add-category-personal/add-category-personal.component';\r\nimport {EditCategoryPersonalComponent} from './dialogs/edit/edit-category-personal/edit-category-personal.component';\r\nimport {AddSaleBuyComponent} from './dialogs/add/add-sale-buy/add-sale-buy.component';\r\nimport {EditSaleBuyComponent} from './dialogs/edit/edit-sale-buy/edit-sale-buy.component';\r\nimport {DatePipe} from \"@angular/common\";\r\nimport {AddHarRouteComponent} from './dialogs/add/add-har-route/add-har-route.component';\r\nimport {EditHardRouteComponent} from './dialogs/edit/edit-hard-route/edit-hard-route.component';\r\nimport {AddInfrastructComponent} from './dialogs/add/add-infrastruct/add-infrastruct.component';\r\nimport {EditInfrastructComponent} from './dialogs/edit/edit-infrastruct/edit-infrastruct.component';\r\nimport {AddPersonalComponent} from './dialogs/add/add-personal/add-personal.component';\r\nimport {EditPersonalComponent} from './dialogs/edit/edit-personal/edit-personal.component';\r\nimport {AddRepairComponent} from './dialogs/add/add-repair/add-repair.component';\r\nimport {EditRepairComponent} from './dialogs/edit/edit-repair/edit-repair.component';\r\nimport {EditProblemComponent} from './dialogs/edit/edit-problem/edit-problem.component';\r\nimport {AddProblemComponent} from './dialogs/add/add-problem/add-problem.component';\r\nimport {AddGroupComponent} from './dialogs/add/add-group/add-group.component';\r\nimport {EditGroupComponent} from './dialogs/edit/edit-group/edit-group.component';\r\nimport {EditStreetComponent} from './dialogs/edit/edit-street/edit-street.component';\r\nimport {AddStreetComponent} from './dialogs/add/add-street/add-street.component';\r\nimport {AddRouteComponent} from './dialogs/add/add-route/add-route.component';\r\nimport {EditRouteComponent} from \"./dialogs/edit/edit-route/edit-route.component\";\r\nimport {DialogsStreetComponent} from './dialogs/dialogs-street/dialogs-street.component';\r\nimport {ApiTableComponent} from './page/api-table/api-table.component';\r\nimport {DialogsRouteComponent} from './dialogs/dialogs-route/dialogs-route.component';\r\nimport {Query1Component} from './query/query1/query1.component';\r\nimport {Query2Component} from './query/query2/query2.component';\r\nimport {Q2dComponent} from './query/query2/q2d/q2d.component';\r\nimport {Query3Component} from './query/query3/query3.component';\r\nimport {Query10Component} from './query/query10/query10.component';\r\nimport {Q10dComponent} from './query/query10/q10d/q10d.component';\r\nimport { Query4Component } from './query/query4/query4.component';\r\nimport { Query6Component } from './query/query6/query6.component';\r\nimport { Q6dComponent } from './query/query6/q6d/q6d.component';\r\nimport { Query7Component } from './query/query7/query7.component';\r\nimport { Query8Component } from './query/query8/query8.component';\r\nimport { Q8dComponent } from './query/query8/q8d/q8d.component';\r\nimport { Query9Component } from './query/query9/query9.component';\r\nimport { Query11Component } from './query/query11/query11.component';\r\nimport { Query12Component } from './query/query12/query12.component';\r\nimport { Query13Component } from './query/query13/query13.component';\r\nimport { Query14Component } from './query/query14/query14.component';\r\nimport { Q11dComponent } from './query/query11/q11d/q11d.component';\r\nimport { Q12dComponent } from './query/query12/q12d/q12d.component';\r\nimport { Q13dComponent } from './query/query13/q13d/q13d.component';\r\nimport { Q14dComponent } from './query/query14/q14d/q14d.component';\r\n\r\nconst appRoutes: Routes = [\r\n  {path: '', component: AutoComponent, data: {title: 'Auto'}},\r\n  {path: 'auto', component: AutoComponent},\r\n  {path: 'brigada', component: BrigadaComponent},\r\n  {path: 'brigadir', component: BrigadirComponent},\r\n  {path: 'category', component: CategoryComponent},\r\n  {path: 'categoryPersonal', component: CategoryPersonalComponent},\r\n  {path: 'drivers', component: DriversComponent},\r\n  {path: 'group', component: GroupComponent},\r\n  {path: 'hardRoute', component: HardRouteComponent},\r\n  {path: 'infrastruct', component: InfrastructComponent},\r\n  {path: 'marka', component: MarkaComponent},\r\n  {path: 'prop', component: PropComponent},\r\n  {path: 'personal', component: PersonalComponent},\r\n  {path: 'problem', component: ProblemComponent},\r\n  {path: 'repair', component: RepairComponent},\r\n  {path: 'route', component: RouteComponent},\r\n  {path: 'saleBuy', component: SaleBuyComponent},\r\n  {path: 'street', component: StreetComponent},\r\n  //QUERY\r\n  {path: 'query1', component: Query1Component},\r\n  {path: 'query2', component: Query2Component},\r\n  {path: 'query3', component: Query3Component},\r\n  {path: 'query4', component: Query4Component},\r\n  {path: 'query6', component: Query6Component},\r\n  {path: 'query7', component: Query7Component},\r\n  {path: 'query8', component: Query8Component},\r\n  {path: 'query9', component: Query9Component},\r\n  {path: 'query10', component: Query10Component},\r\n  {path: 'query11', component: Query11Component},\r\n  {path: 'query12', component: Query12Component},\r\n  {path: 'query13', component: Query13Component},\r\n  {path: 'query14', component: Query14Component},\r\n\r\n  // { path: 'street', component: ApiTableComponent },\r\n  {path: '**', component: UserComponent},\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    UserComponent,\r\n    EditUserComponent,\r\n    AutoComponent,\r\n    BrigadaComponent,\r\n    BrigadirComponent,\r\n    CategoryComponent,\r\n    CategoryPersonalComponent,\r\n    GroupComponent,\r\n    DriversComponent,\r\n    HardRouteComponent,\r\n    InfrastructComponent,\r\n    MarkaComponent,\r\n    PropComponent,\r\n    PersonalComponent,\r\n    ProblemComponent,\r\n    RepairComponent,\r\n    RouteComponent,\r\n    SaleBuyComponent,\r\n    StreetComponent,\r\n    EditCategoryComponent,\r\n    AddUserComponent,\r\n    AddDriverComponent,\r\n    EditDriverComponent,\r\n    AddCategoryComponent,\r\n    AddMarkaComponent,\r\n    EditMarkaComponent,\r\n    AddAutoComponent,\r\n    EditAutoComponent,\r\n    AddBrigadaComponent,\r\n    EditBrigadaComponent,\r\n    AddBrigadirComponent,\r\n    EditBrigadirComponent,\r\n    AddCategoryPersonalComponent,\r\n    EditCategoryPersonalComponent,\r\n    AddSaleBuyComponent,\r\n    EditSaleBuyComponent,\r\n    AddHarRouteComponent,\r\n    EditHardRouteComponent,\r\n    AddInfrastructComponent,\r\n    EditInfrastructComponent,\r\n    AddPersonalComponent,\r\n    EditPersonalComponent,\r\n    AddRepairComponent,\r\n    EditRepairComponent,\r\n    EditProblemComponent,\r\n    AddProblemComponent,\r\n    AddGroupComponent,\r\n    EditGroupComponent,\r\n    EditStreetComponent,\r\n    AddStreetComponent,\r\n    AddRouteComponent,\r\n    EditRouteComponent,\r\n    DialogsStreetComponent,\r\n    ApiTableComponent,\r\n    DialogsRouteComponent,\r\n    Query1Component,\r\n    Query2Component,\r\n    Q2dComponent,\r\n    Query3Component,\r\n    Query10Component,\r\n    Q10dComponent,\r\n    Query4Component,\r\n    Query6Component,\r\n    Q6dComponent,\r\n    Query7Component,\r\n    Query8Component,\r\n    Q8dComponent,\r\n    Query9Component,\r\n    Query11Component,\r\n    Query12Component,\r\n    Query13Component,\r\n    Query14Component,\r\n    Q11dComponent,\r\n    Q12dComponent,\r\n    Q13dComponent,\r\n    Q14dComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    CdkTableModule,\r\n\r\n    ReactiveFormsModule.withConfig({warnOnNgModelWithFormControl: 'never'}),\r\n    ToastrModule.forRoot(), // ToastrModule added\r\n    RouterModule.forRoot(appRoutes), // Routes\r\n\r\n    //  MATERIAL\r\n    MatButtonModule,\r\n    MatGridListModule,\r\n    MatTableModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatDialogModule,\r\n    MatIconModule,\r\n    MatToolbarModule,\r\n    MatPaginatorModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSidenavModule,\r\n    MatListModule,\r\n    MatCheckboxModule,\r\n    MatSlideToggleModule,\r\n    MatSortModule,\r\n    MatSelectModule,\r\n  ],\r\n  providers: [MatDatepickerModule, DatePipe],\r\n  entryComponents: [\r\n    // ADD\r\n    AddUserComponent,\r\n    AddDriverComponent,\r\n    AddCategoryComponent,\r\n    AddMarkaComponent,\r\n    AddAutoComponent,\r\n    AddBrigadaComponent,\r\n    AddBrigadirComponent,\r\n    AddCategoryPersonalComponent,\r\n    AddSaleBuyComponent,\r\n    AddHarRouteComponent,\r\n    AddInfrastructComponent,\r\n    AddPersonalComponent,\r\n    AddProblemComponent,\r\n    AddRepairComponent,\r\n    AddGroupComponent,\r\n    AddStreetComponent,\r\n    AddRouteComponent,\r\n    // EDIT\r\n    EditCategoryComponent,\r\n    EditDriverComponent,\r\n    EditUserComponent,\r\n    EditMarkaComponent,\r\n    EditAutoComponent,\r\n    EditBrigadaComponent,\r\n    EditBrigadirComponent,\r\n    EditCategoryPersonalComponent,\r\n    EditSaleBuyComponent,\r\n    EditHardRouteComponent,\r\n    EditInfrastructComponent,\r\n    EditPersonalComponent,\r\n    EditProblemComponent,\r\n    EditRepairComponent,\r\n    EditGroupComponent,\r\n    EditStreetComponent,\r\n    EditRouteComponent,\r\n    // DIALOGS\r\n    DialogsStreetComponent,\r\n    DialogsRouteComponent,\r\n    //  QUERY\r\n    Q2dComponent,\r\n    Q6dComponent,\r\n    Q8dComponent,\r\n    Q10dComponent,\r\n    Q11dComponent,\r\n    Q12dComponent,\r\n    Q13dComponent,\r\n    Q14dComponent,\r\n\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"modal\\\">\\r\\n  <form class=\\\"form\\\" (ngSubmit)=\\\"submit\\\" #formControl=\\\"ngForm\\\" [formGroup]=\\\"form\\\">\\r\\n    <div class=\\\"form\\\">\\r\\n\\r\\n      <mat-form-field>\\r\\n        <mat-label>Category</mat-label>\\r\\n        <mat-select (selectionChange)=\\\"selectedCategory($event.value)\\\">\\r\\n          <mat-option *ngFor=\\\"let item of categorys\\\" [value]=\\\"item.id\\\">\\r\\n            {{item.name}}\\r\\n          </mat-option>\\r\\n        </mat-select>\\r\\n      </mat-form-field>\\r\\n      &nbsp;\\r\\n      <mat-form-field>\\r\\n        <mat-label>Marka</mat-label>\\r\\n        <mat-select (selectionChange)=\\\"selectedMarka($event.value)\\\">\\r\\n          <mat-option *ngFor=\\\"let item of markas\\\" [value]=\\\"item.id\\\">\\r\\n            {{item.name}}\\r\\n          </mat-option>\\r\\n        </mat-select>\\r\\n      </mat-form-field>\\r\\n\\r\\n      <div class=\\\"button\\\">\\r\\n        <button mat-button color=\\\"primary\\\" [type]=\\\"submit\\\" [disabled]=\\\"!formControl.valid\\\" [mat-dialog-close]=\\\"1\\\" (click)=\\\"stopAdd()\\\">Save</button>\\r\\n        <button mat-button color=\\\"warn\\\" (click)=\\\"onNoClick()\\\" tabindex=\\\"-1\\\">Cancel</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n</div>\\r\\n\"","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup} from \"@angular/forms\";\r\nimport {DialogService} from \"../../../services/dialog.service\";\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material\";\r\nimport {AutoCategory} from \"../../../model/AutoCategory\";\r\nimport {CategoryService} from \"../../../services/category.service\";\r\nimport {MarkaService} from \"../../../services/marka.service\";\r\nimport {AutoMarka} from \"../../../model/AutoMarka\";\r\n\r\n@Component({\r\n  selector: 'app-add-auto',\r\n  templateUrl: './add-auto.component.html',\r\n  styleUrls: ['./add-auto.component.css']\r\n})\r\nexport class AddAutoComponent implements OnInit {\r\n\r\n  form: FormGroup;\r\n  categorys: AutoCategory[];\r\n  markas: AutoMarka[];\r\n\r\n  constructor(private _dialog: DialogService,\r\n              private _category: CategoryService,\r\n              private _marka: MarkaService,\r\n              private formBuilder: FormBuilder,\r\n              private dialogRef: MatDialogRef<AddAutoComponent>,\r\n              @Inject(MAT_DIALOG_DATA) private data: any) {\r\n    this._category.getAll().subscribe(res => {\r\n      this.categorys = res;\r\n    });\r\n\r\n    this._marka.getAll().subscribe(res => {\r\n      this.markas = res;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.form = this.formBuilder.group({\r\n      id: null,\r\n      autoCategory: {\r\n        id: null,\r\n        name: null,\r\n      },\r\n      autoMarka: {\r\n        id: null,\r\n        name: null,\r\n      }\r\n    });\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  stopAdd(): void {\r\n    this._dialog.dialogAdd(this.form.value);\r\n  }\r\n  selectedCategory(event) {\r\n    this._category.getSingle(event).subscribe(res => {\r\n      this.form.getRawValue().autoCategory.id = res.id;\r\n      this.form.getRawValue().autoCategory.name = res.name;\r\n    });\r\n  }\r\n\r\n  selectedMarka(event) {\r\n    this._marka.getSingle(event).subscribe(res => {\r\n      this.form.getRawValue().autoMarka.id = res.id;\r\n      this.form.getRawValue().autoMarka.name = res.name;\r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \".modal {\\r\\n  width: 400px;\\r\\n  height: auto;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"modal\\\">\\r\\n  <mat-grid-list cols=\\\"2\\\" rowHeight=\\\"fit\\\">\\r\\n    <form class=\\\"form\\\" #formControl=\\\"ngForm\\\" [formGroup]=\\\"form\\\">\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field class=\\\"example-full-width\\\">\\r\\n          <input matInput\\r\\n                 formControlName=\\\"name\\\"\\r\\n                 placeholder=\\\"Name\\\">\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <button mat-button\\r\\n                color=\\\"primary\\\"\\r\\n                [disabled]=\\\"!formControl.valid\\\"\\r\\n                [mat-dialog-close]=\\\"1\\\"\\r\\n                (click)=\\\"stopAdd()\\\">\\r\\n          Save\\r\\n        </button>\\r\\n        <button mat-button\\r\\n                color=\\\"warn\\\"\\r\\n                (click)=\\\"onNoClick()\\\"\\r\\n                tabindex=\\\"-1\\\">\\r\\n          Cancel\\r\\n        </button>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n    </form>\\r\\n  </mat-grid-list>\\r\\n</div>\\r\\n\"","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\r\nimport {DialogService} from \"../../../services/dialog.service\";\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material\";\r\n\r\n@Component({\r\n  selector: 'app-add-brigada',\r\n  templateUrl: './add-brigada.component.html',\r\n  styleUrls: ['./add-brigada.component.css']\r\n})\r\nexport class AddBrigadaComponent implements OnInit {\r\n\r\n  form: FormGroup;\r\n\r\n  constructor(private _dialog: DialogService,\r\n              private formBuilder: FormBuilder, private dialogRef: MatDialogRef<AddBrigadaComponent>,\r\n              @Inject(MAT_DIALOG_DATA) private data: any) {  }\r\n\r\n  ngOnInit() {\r\n    this.form = this.formBuilder.group({\r\n      id: null,\r\n      name: ['', Validators.required],\r\n    });\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  stopAdd(): void {\r\n    this._dialog.dialogAdd(this.form.value);\r\n  }\r\n\r\n}\r\n","module.exports = \".modal {\\r\\n  width: 400px;\\r\\n  height: auto;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"modal\\\">\\r\\n  <mat-grid-list cols=\\\"1\\\" rowHeight=\\\"100px\\\">\\r\\n    <form class=\\\"form\\\" #formControl=\\\"ngForm\\\" [formGroup]=\\\"form\\\">\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field class=\\\"example-full-width\\\">\\r\\n          <input matInput\\r\\n                 formControlName=\\\"name\\\"\\r\\n                 placeholder=\\\"Name\\\">\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field class=\\\"example-full-width\\\">\\r\\n          <input matInput\\r\\n                 formControlName=\\\"surname\\\"\\r\\n                 placeholder=\\\"Surname\\\">\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <button mat-button\\r\\n                color=\\\"primary\\\"\\r\\n                [disabled]=\\\"!formControl.valid\\\"\\r\\n                [mat-dialog-close]=\\\"1\\\"\\r\\n                (click)=\\\"stopAdd()\\\">\\r\\n          Save\\r\\n        </button>\\r\\n        <button mat-button\\r\\n                color=\\\"warn\\\"\\r\\n                (click)=\\\"onNoClick()\\\"\\r\\n                tabindex=\\\"-1\\\">\\r\\n          Cancel\\r\\n        </button>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n    </form>\\r\\n  </mat-grid-list>\\r\\n</div>\\r\\n\"","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\r\nimport {DialogService} from \"../../../services/dialog.service\";\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material\";\r\n\r\n@Component({\r\n  selector: 'app-add-brigadir',\r\n  templateUrl: './add-brigadir.component.html',\r\n  styleUrls: ['./add-brigadir.component.css']\r\n})\r\nexport class AddBrigadirComponent implements OnInit {\r\n\r\n  form: FormGroup;\r\n\r\n  constructor(private _dialog: DialogService,\r\n              private formBuilder: FormBuilder, private dialogRef: MatDialogRef<AddBrigadirComponent>,\r\n              @Inject(MAT_DIALOG_DATA) private data: any) {  }\r\n\r\n  ngOnInit() {\r\n    this.form = this.formBuilder.group({\r\n      id: null,\r\n      name: ['', Validators.required],\r\n      surname: ['', Validators.required],\r\n    });\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  stopAdd(): void {\r\n    this._dialog.dialogAdd(this.form.value);\r\n  }\r\n\r\n}\r\n","module.exports = \".modal {\\r\\n  width: 400px;\\r\\n  height: auto;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"modal\\\">\\r\\n  <mat-grid-list cols=\\\"2\\\" rowHeight=\\\"fit\\\">\\r\\n    <form class=\\\"form\\\" #formControl=\\\"ngForm\\\" [formGroup]=\\\"form\\\">\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field class=\\\"example-full-width\\\">\\r\\n          <input matInput\\r\\n                 formControlName=\\\"name\\\"\\r\\n                 placeholder=\\\"Name\\\">\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <button mat-button\\r\\n                color=\\\"primary\\\"\\r\\n                [disabled]=\\\"!formControl.valid\\\"\\r\\n                [mat-dialog-close]=\\\"1\\\"\\r\\n                (click)=\\\"stopAdd()\\\">\\r\\n          Save\\r\\n        </button>\\r\\n        <button mat-button\\r\\n                color=\\\"warn\\\"\\r\\n                (click)=\\\"onNoClick()\\\"\\r\\n                tabindex=\\\"-1\\\">\\r\\n          Cancel\\r\\n        </button>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n    </form>\\r\\n  </mat-grid-list>\\r\\n</div>\\r\\n\"","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\r\nimport {DialogService} from \"../../../services/dialog.service\";\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material\";\r\n\r\n@Component({\r\n  selector: 'app-add-category-personal',\r\n  templateUrl: './add-category-personal.component.html',\r\n  styleUrls: ['./add-category-personal.component.css']\r\n})\r\nexport class AddCategoryPersonalComponent implements OnInit {\r\n\r\n  form: FormGroup;\r\n\r\n  constructor(private _dialog: DialogService,\r\n              private formBuilder: FormBuilder, private dialogRef: MatDialogRef<AddCategoryPersonalComponent>,\r\n              @Inject(MAT_DIALOG_DATA) private data: any) {  }\r\n\r\n  ngOnInit() {\r\n    this.form = this.formBuilder.group({\r\n      id: null,\r\n      name: ['', Validators.required],\r\n    });\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  stopAdd(): void {\r\n    this._dialog.dialogAdd(this.form.value);\r\n  }\r\n\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"modal\\\">\\r\\n  <form class=\\\"form\\\" (ngSubmit)=\\\"submit\\\" #formControl=\\\"ngForm\\\" [formGroup]=\\\"form\\\">\\r\\n    <div class=\\\"form\\\">\\r\\n      <mat-form-field class=\\\"example-full-width\\\">\\r\\n        <input matInput\\r\\n               formControlName=\\\"name\\\"\\r\\n               placeholder=\\\"Name\\\">\\r\\n      </mat-form-field>\\r\\n\\r\\n      <div class=\\\"button\\\">\\r\\n        <button mat-button color=\\\"primary\\\" [type]=\\\"submit\\\" [disabled]=\\\"!formControl.valid\\\" [mat-dialog-close]=\\\"1\\\" (click)=\\\"stopAdd()\\\">Save</button>\\r\\n        <button mat-button color=\\\"warn\\\" (click)=\\\"onNoClick()\\\" tabindex=\\\"-1\\\">Cancel</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n</div>\\r\\n\"","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\r\nimport {DialogService} from \"../../../services/dialog.service\";\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material\";\r\n\r\n@Component({\r\n  selector: 'app-add-category',\r\n  templateUrl: './add-category.component.html',\r\n  styleUrls: ['./add-category.component.css']\r\n})\r\nexport class AddCategoryComponent implements OnInit {\r\n  form: FormGroup;\r\n\r\n  constructor(private _dialog: DialogService,\r\n              private formBuilder: FormBuilder, private dialogRef: MatDialogRef<AddCategoryComponent>,\r\n              @Inject(MAT_DIALOG_DATA) private data: any) {  }\r\n\r\n  ngOnInit() {\r\n    this.form = this.formBuilder.group({\r\n      id: null,\r\n      name: ['', Validators.required],\r\n    });\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  stopAdd(): void {\r\n    this._dialog.dialogAdd(this.form.value);\r\n  }\r\n\r\n}\r\n","module.exports = \".modal {\\r\\n  width: 400px;\\r\\n  height: auto;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"modal\\\">\\r\\n  <mat-grid-list cols=\\\"2\\\" rowHeight=\\\"100px\\\">\\r\\n    <form class=\\\"form\\\" #formControl=\\\"ngForm\\\" [formGroup]=\\\"form\\\">\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field class=\\\"example-full-width\\\">\\r\\n          <input matInput\\r\\n                 formControlName=\\\"name\\\"\\r\\n                 placeholder=\\\"Name\\\">\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field class=\\\"example-full-width\\\">\\r\\n          <input matInput\\r\\n                 formControlName=\\\"surname\\\"\\r\\n                 placeholder=\\\"SurName\\\">\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <mat-label>Auto</mat-label>\\r\\n          <mat-select (selectionChange)=\\\"selectedAuto($event.value)\\\">\\r\\n            <mat-option *ngFor=\\\"let item of auto\\\" [value]=\\\"item.id\\\">\\r\\n              {{item.autoCategory.name}} - {{item.autoMarka.name}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <button mat-button\\r\\n                color=\\\"primary\\\"\\r\\n                [disabled]=\\\"!formControl.valid\\\"\\r\\n                [mat-dialog-close]=\\\"1\\\"\\r\\n                (click)=\\\"stopAdd()\\\">\\r\\n          Save\\r\\n        </button>\\r\\n        <button mat-button\\r\\n                color=\\\"warn\\\"\\r\\n                (click)=\\\"onNoClick()\\\"\\r\\n                tabindex=\\\"-1\\\">\\r\\n          Cancel\\r\\n        </button>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n    </form>\\r\\n  </mat-grid-list>\\r\\n</div>\\r\\n\"","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material\";\r\nimport {DialogService} from \"../../../services/dialog.service\";\r\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\r\nimport {AutoService} from \"../../../services/auto.service\";\r\nimport {Auto} from \"../../../model/Auto\";\r\n\r\n@Component({\r\n  selector: 'app-add-driver',\r\n  templateUrl: './add-driver.component.html',\r\n  styleUrls: ['./add-driver.component.css']\r\n})\r\nexport class AddDriverComponent implements OnInit {\r\n\r\n  form: FormGroup;\r\n  auto: Auto[];\r\n\r\n  constructor(private _dialog: DialogService,\r\n              private _auto: AutoService,\r\n              private formBuilder: FormBuilder,\r\n              private dialogRef: MatDialogRef<AddDriverComponent>,\r\n              @Inject(MAT_DIALOG_DATA) private data: any) {\r\n    this._auto.getAll().subscribe(res => {\r\n      this.auto = res;\r\n    })\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.form = this.formBuilder.group({\r\n      id: null,\r\n      name: ['', Validators.required],\r\n      surname: ['', Validators.required],\r\n      auto: {\r\n        id: null,\r\n        autoCategory: {\r\n          id: null,\r\n          name: null,\r\n        },\r\n        autoMarka: {\r\n          id: null,\r\n          name: null,\r\n        }\r\n      },\r\n    });\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  stopAdd(): void {\r\n    this._dialog.dialogAdd(this.form.value);\r\n  }\r\n  selectedAuto(event) {\r\n    this._auto.getSingle(event).subscribe(res => {\r\n      this.form.getRawValue().auto.id = res.id;\r\n\r\n      this.form.getRawValue().auto.autoCategory.id = res.autoCategory.id;\r\n      this.form.getRawValue().auto.autoCategory.name = res.autoCategory.name;\r\n\r\n      this.form.getRawValue().auto.autoMarka.id = res.autoMarka.id;\r\n      this.form.getRawValue().auto.autoMarka.name = res.autoMarka.name;\r\n    });\r\n  }\r\n}\r\n","module.exports = \".modal {\\r\\n  width: 400px;\\r\\n  height: auto;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"modal\\\">\\r\\n  <mat-grid-list cols=\\\"1\\\" rowHeight=\\\"60px\\\">\\r\\n    <form class=\\\"form\\\" #formControl=\\\"ngForm\\\" [formGroup]=\\\"form\\\">\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <mat-label>Personal</mat-label>\\r\\n          <mat-select (selectionChange)=\\\"selectedPersonal($event.value)\\\">\\r\\n            <mat-option *ngFor=\\\"let item of personals\\\" [value]=\\\"item.id\\\">\\r\\n              {{item.name}} - {{item.surname}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <mat-label>Driver</mat-label>\\r\\n          <mat-select (selectionChange)=\\\"selectedDriver($event.value)\\\">\\r\\n            <mat-option *ngFor=\\\"let item of drivers\\\" [value]=\\\"item.id\\\">\\r\\n              {{item.name}} - {{item.surname}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <mat-label>Brigada</mat-label>\\r\\n          <mat-select (selectionChange)=\\\"selectedBrigada($event.value)\\\">\\r\\n            <mat-option *ngFor=\\\"let item of brigads\\\" [value]=\\\"item.id\\\">\\r\\n              {{item.name}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <mat-label>Brigadir</mat-label>\\r\\n          <mat-select (selectionChange)=\\\"selectedBrigadir($event.value)\\\">\\r\\n            <mat-option *ngFor=\\\"let item of brigadirs\\\" [value]=\\\"item.id\\\">\\r\\n              {{item.name}} - {{item.surname}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <button mat-button\\r\\n                color=\\\"primary\\\"\\r\\n                [disabled]=\\\"!formControl.valid\\\"\\r\\n                [mat-dialog-close]=\\\"1\\\"\\r\\n                (click)=\\\"stopAdd()\\\">\\r\\n          Save\\r\\n        </button>\\r\\n        <button mat-button\\r\\n                color=\\\"warn\\\"\\r\\n                (click)=\\\"onNoClick()\\\"\\r\\n                tabindex=\\\"-1\\\">\\r\\n          Cancel\\r\\n        </button>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n    </form>\\r\\n  </mat-grid-list>\\r\\n</div>\\r\\n\"","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup} from \"@angular/forms\";\r\nimport {DialogService} from \"../../../services/dialog.service\";\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material\";\r\nimport {AutoPersonal} from \"../../../model/AutoPersonal\";\r\nimport {AutoDrivers} from \"../../../model/AutoDrivers\";\r\nimport {AutoBrigada} from \"../../../model/AutoBrigada\";\r\nimport {AutoBrigadir} from \"../../../model/AutoBrigadir\";\r\nimport {PersonalService} from \"../../../services/personal.service\";\r\nimport {DriverService} from \"../../../services/driver.service\";\r\nimport {BrigadaService} from \"../../../services/brigada.service\";\r\nimport {BrigadirService} from \"../../../services/brigadir.service\";\r\n\r\n@Component({\r\n  selector: 'app-add-group',\r\n  templateUrl: './add-group.component.html',\r\n  styleUrls: ['./add-group.component.css']\r\n})\r\nexport class AddGroupComponent implements OnInit {\r\n\r\n  form: FormGroup;\r\n  personals: AutoPersonal[];\r\n  drivers: AutoDrivers[];\r\n  brigads: AutoBrigada[];\r\n  brigadirs: AutoBrigadir[];\r\n\r\n  constructor(private _dialog: DialogService,\r\n              private formBuilder: FormBuilder,\r\n              private _personal: PersonalService,\r\n              private _driver: DriverService,\r\n              private _brigada: BrigadaService,\r\n              private _brigadir: BrigadirService,\r\n              private dialogRef: MatDialogRef<AddGroupComponent>,\r\n              @Inject(MAT_DIALOG_DATA) private data: any) {\r\n\r\n    this._personal.getAll().subscribe(res => {\r\n      this.personals = res;\r\n    });\r\n\r\n    this._driver.getAll().subscribe(res => {\r\n      this.drivers = res;\r\n    });\r\n\r\n    this._brigada.getAll().subscribe(res => {\r\n      this.brigads = res;\r\n    });\r\n\r\n    this._brigadir.getAll().subscribe(res => {\r\n      this.brigadirs = res;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.form = this.formBuilder.group({\r\n      id: null,\r\n      autoPersonal: {\r\n        id: null,\r\n        name: null,\r\n        surname: null,\r\n        autoCategoryPersonal: {\r\n          id: null,\r\n          name: null\r\n        }\r\n      },\r\n      autoDrivers: {\r\n        id: null,\r\n        name: null,\r\n        surname: null,\r\n        auto: {\r\n          id: null,\r\n          autoCategory: {\r\n            id: null,\r\n            name: null\r\n          },\r\n          autoMarka: {\r\n            id: null,\r\n            name: null\r\n          }\r\n        }\r\n      },\r\n      autoBrigada: {\r\n        id: null,\r\n        name: null\r\n      },\r\n      autoBrigadir: {\r\n        id: null,\r\n        name: null,\r\n        surname: null\r\n      }\r\n    });\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  stopAdd(): void {\r\n    this._dialog.dialogAdd(this.form.value);\r\n  }\r\n\r\n  selectedPersonal(event) {\r\n    this._personal.getSingle(event).subscribe(res => {\r\n      this.form.getRawValue().autoPersonal.id = res.id;\r\n\r\n      this.form.getRawValue().autoPersonal.name = res.name;\r\n      this.form.getRawValue().autoPersonal.surname = res.surname;\r\n    });\r\n  }\r\n\r\n  selectedBrigada(event) {\r\n    this._brigada.getSingle(event).subscribe(res => {\r\n      this.form.getRawValue().autoBrigada.id = res.id;\r\n\r\n      this.form.getRawValue().autoBrigada.name = res.name;\r\n    });\r\n  }\r\n\r\n  selectedBrigadir(event) {\r\n    this._brigadir.getSingle(event).subscribe(res => {\r\n      this.form.getRawValue().autoBrigadir.id = res.id;\r\n\r\n      this.form.getRawValue().autoBrigadir.name = res.name;\r\n      this.form.getRawValue().autoBrigadir.surname = res.surname;\r\n    });\r\n  }\r\n\r\n  selectedDriver(event) {\r\n    this._driver.getSingle(event).subscribe(res => {\r\n      this.form.getRawValue().autoDrivers.id = res.id;\r\n\r\n      this.form.getRawValue().autoDrivers.name = res.name;\r\n      this.form.getRawValue().autoDrivers.surname = res.surname;\r\n    });\r\n  }\r\n}\r\n","module.exports = \".modal {\\r\\n  width: 400px;\\r\\n  height: auto;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"modal\\\">\\r\\n  <mat-grid-list cols=\\\"1\\\" rowHeight=\\\"60px\\\">\\r\\n    <form class=\\\"form\\\" #formControl=\\\"ngForm\\\" [formGroup]=\\\"form\\\">\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <input matInput\\r\\n                 type=\\\"text\\\"\\r\\n                 formControlName=\\\"point_start\\\"\\r\\n                 placeholder=\\\"Point of Start\\\">\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <input matInput\\r\\n                 type=\\\"text\\\"\\r\\n                 formControlName=\\\"point_finish\\\"\\r\\n                 placeholder=\\\"Point of Finish\\\">\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <input matInput [matDatepicker]=\\\"firstPicker\\\" placeholder=\\\"Choose a start date\\\" formControlName=\\\"date_start\\\">\\r\\n          <mat-datepicker-toggle matSuffix [for]=\\\"firstPicker\\\"></mat-datepicker-toggle>\\r\\n          <mat-datepicker #firstPicker></mat-datepicker>\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <input matInput [matDatepicker]=\\\"secondPicker\\\" placeholder=\\\"Choose a finish date\\\" formControlName=\\\"date_finish\\\">\\r\\n          <mat-datepicker-toggle matSuffix [for]=\\\"secondPicker\\\"></mat-datepicker-toggle>\\r\\n          <mat-datepicker #secondPicker></mat-datepicker>\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <mat-label>Auto</mat-label>\\r\\n          <mat-select (selectionChange)=\\\"selectedAuto($event.value)\\\">\\r\\n            <mat-option *ngFor=\\\"let item of auto\\\" [value]=\\\"item.id\\\">\\r\\n              {{item.autoCategory.name}} - {{item.autoMarka.name}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <button mat-button\\r\\n                color=\\\"primary\\\"\\r\\n                [disabled]=\\\"!formControl.valid\\\"\\r\\n                [mat-dialog-close]=\\\"1\\\"\\r\\n                (click)=\\\"stopAdd()\\\">\\r\\n          Save\\r\\n        </button>\\r\\n        <button mat-button\\r\\n                color=\\\"warn\\\"\\r\\n                (click)=\\\"onNoClick()\\\"\\r\\n                tabindex=\\\"-1\\\">\\r\\n          Cancel\\r\\n        </button>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n    </form>\\r\\n  </mat-grid-list>\\r\\n</div>\\r\\n\"","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\r\nimport {Auto} from \"../../../model/Auto\";\r\nimport {DialogService} from \"../../../services/dialog.service\";\r\nimport {AutoService} from \"../../../services/auto.service\";\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material\";\r\n\r\n@Component({\r\n  selector: 'app-add-har-route',\r\n  templateUrl: './add-har-route.component.html',\r\n  styleUrls: ['./add-har-route.component.css']\r\n})\r\nexport class AddHarRouteComponent implements OnInit {\r\n  form: FormGroup;\r\n  auto: Auto[];\r\n  toggle: boolean;\r\n\r\n  constructor(private _dialog: DialogService,\r\n              private _auto: AutoService,\r\n              private formBuilder: FormBuilder,\r\n              private dialogRef: MatDialogRef<AddHarRouteComponent>,\r\n              @Inject(MAT_DIALOG_DATA) private data: any) {\r\n    this._auto.getAll().subscribe(res => {\r\n      this.auto = res;\r\n    })\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.form = this.formBuilder.group({\r\n      id: null,\r\n      point_start: [null, Validators.required],\r\n      point_finish: [null, Validators.required],\r\n      date_start: [null, Validators.required],\r\n      date_finish: null,\r\n      auto: [{\r\n        id: null,\r\n        autoCategory: {\r\n          id: null,\r\n          name: null,\r\n        },\r\n        autoMarka: {\r\n          id: null,\r\n          name: null,\r\n        }\r\n      }, Validators.required],\r\n    });\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  stopAdd(): void {\r\n    this._dialog.dialogAdd(this.form.value);\r\n  }\r\n\r\n  selectedAuto(event) {\r\n    this._auto.getSingle(event).subscribe(res => {\r\n      this.form.getRawValue().auto.id = res.id;\r\n\r\n      this.form.getRawValue().auto.autoCategory.id = res.autoCategory.id;\r\n      this.form.getRawValue().auto.autoCategory.name = res.autoCategory.name;\r\n\r\n      this.form.getRawValue().auto.autoMarka.id = res.autoMarka.id;\r\n      this.form.getRawValue().auto.autoMarka.name = res.autoMarka.name;\r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \".modal {\\r\\n  width: 400px;\\r\\n  height: auto;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"modal\\\">\\r\\n  <mat-grid-list cols=\\\"1\\\" rowHeight=\\\"60px\\\">\\r\\n    <form class=\\\"form\\\" #formControl=\\\"ngForm\\\" [formGroup]=\\\"form\\\">\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <input matInput\\r\\n                 type=\\\"text\\\"\\r\\n                 formControlName=\\\"name\\\"\\r\\n                 placeholder=\\\"Name of Object\\\">\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <input matInput\\r\\n                 type=\\\"text\\\"\\r\\n                 formControlName=\\\"street\\\"\\r\\n                 placeholder=\\\"Streey\\\">\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <mat-label>Category</mat-label>\\r\\n          <mat-select (selectionChange)=\\\"selectedAuto($event.value)\\\">\\r\\n            <mat-option *ngFor=\\\"let item of category\\\" [value]=\\\"item.id\\\">\\r\\n              {{item.name}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <button mat-button\\r\\n                color=\\\"primary\\\"\\r\\n                [disabled]=\\\"!formControl.valid\\\"\\r\\n                [mat-dialog-close]=\\\"1\\\"\\r\\n                (click)=\\\"stopAdd()\\\">\\r\\n          Save\\r\\n        </button>\\r\\n        <button mat-button\\r\\n                color=\\\"warn\\\"\\r\\n                (click)=\\\"onNoClick()\\\"\\r\\n                tabindex=\\\"-1\\\">\\r\\n          Cancel\\r\\n        </button>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n    </form>\\r\\n  </mat-grid-list>\\r\\n</div>\\r\\n\"","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\r\nimport {Auto} from \"../../../model/Auto\";\r\nimport {DialogService} from \"../../../services/dialog.service\";\r\nimport {AutoService} from \"../../../services/auto.service\";\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material\";\r\nimport {CategoryService} from \"../../../services/category.service\";\r\nimport {AutoCategory} from \"../../../model/AutoCategory\";\r\n\r\n@Component({\r\n  selector: 'app-add-infrastruct',\r\n  templateUrl: './add-infrastruct.component.html',\r\n  styleUrls: ['./add-infrastruct.component.css']\r\n})\r\nexport class AddInfrastructComponent implements OnInit {\r\n\r\n  form: FormGroup;\r\n  category: AutoCategory[];\r\n\r\n  constructor(private _dialog: DialogService,\r\n              private _category: CategoryService,\r\n              private formBuilder: FormBuilder,\r\n              private dialogRef: MatDialogRef<AddInfrastructComponent>,\r\n              @Inject(MAT_DIALOG_DATA) private data: any) {\r\n    this._category.getAll().subscribe(res => {\r\n      this.category = res;\r\n    })\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.form = this.formBuilder.group({\r\n      id: null,\r\n      name: [null, Validators.required],\r\n      street: [null, Validators.required],\r\n      autoCategory: [{\r\n        id: null,\r\n        name: null,\r\n      }, Validators.required],\r\n    });\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  stopAdd(): void {\r\n    this._dialog.dialogAdd(this.form.value);\r\n  }\r\n\r\n  selectedAuto(event) {\r\n    this._category.getSingle(event).subscribe(res => {\r\n      this.form.getRawValue().autoCategory.id = res.id;\r\n\r\n      this.form.getRawValue().autoCategory.name = res.name;\r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"modal\\\">\\r\\n  <form class=\\\"form\\\" (ngSubmit)=\\\"submit\\\" #formControl=\\\"ngForm\\\" [formGroup]=\\\"form\\\">\\r\\n    <div class=\\\"form\\\">\\r\\n      <mat-form-field class=\\\"example-full-width\\\">\\r\\n        <input matInput\\r\\n               formControlName=\\\"name\\\"\\r\\n               placeholder=\\\"Name\\\">\\r\\n      </mat-form-field>\\r\\n\\r\\n      <div class=\\\"button\\\">\\r\\n        <button mat-button color=\\\"primary\\\" [type]=\\\"submit\\\" [disabled]=\\\"!formControl.valid\\\" [mat-dialog-close]=\\\"1\\\" (click)=\\\"stopAdd()\\\">Save</button>\\r\\n        <button mat-button color=\\\"warn\\\" (click)=\\\"onNoClick()\\\" tabindex=\\\"-1\\\">Cancel</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n</div>\\r\\n\"","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\r\nimport {DialogService} from \"../../../services/dialog.service\";\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material\";\r\n\r\n@Component({\r\n  selector: 'app-add-marka',\r\n  templateUrl: './add-marka.component.html',\r\n  styleUrls: ['./add-marka.component.css']\r\n})\r\nexport class AddMarkaComponent implements OnInit {\r\n\r\n  form: FormGroup;\r\n\r\n  constructor(private _dialog: DialogService,\r\n              private formBuilder: FormBuilder, private dialogRef: MatDialogRef<AddMarkaComponent>,\r\n              @Inject(MAT_DIALOG_DATA) private data: any) {  }\r\n\r\n  ngOnInit() {\r\n    this.form = this.formBuilder.group({\r\n      id: null,\r\n      name: ['', Validators.required],\r\n    });\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  stopAdd(): void {\r\n    this._dialog.dialogAdd(this.form.value);\r\n  }\r\n\r\n}\r\n","module.exports = \".modal {\\r\\n  width: 400px;\\r\\n  height: auto;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"modal\\\">\\r\\n  <mat-grid-list cols=\\\"1\\\" rowHeight=\\\"60px\\\">\\r\\n    <form class=\\\"form\\\" #formControl=\\\"ngForm\\\" [formGroup]=\\\"form\\\">\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <input matInput\\r\\n                 type=\\\"text\\\"\\r\\n                 formControlName=\\\"name\\\"\\r\\n                 placeholder=\\\"Name\\\">\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <input matInput\\r\\n                 type=\\\"text\\\"\\r\\n                 formControlName=\\\"surname\\\"\\r\\n                 placeholder=\\\"SurName\\\">\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <mat-label>Category</mat-label>\\r\\n          <mat-select (selectionChange)=\\\"selectedAuto($event.value)\\\">\\r\\n            <mat-option *ngFor=\\\"let item of category\\\" [value]=\\\"item.id\\\">\\r\\n              {{item.name}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <button mat-button\\r\\n                color=\\\"primary\\\"\\r\\n                [disabled]=\\\"!formControl.valid\\\"\\r\\n                [mat-dialog-close]=\\\"1\\\"\\r\\n                (click)=\\\"stopAdd()\\\">\\r\\n          Save\\r\\n        </button>\\r\\n        <button mat-button\\r\\n                color=\\\"warn\\\"\\r\\n                (click)=\\\"onNoClick()\\\"\\r\\n                tabindex=\\\"-1\\\">\\r\\n          Cancel\\r\\n        </button>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n    </form>\\r\\n  </mat-grid-list>\\r\\n</div>\\r\\n\"","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\r\nimport {DialogService} from \"../../../services/dialog.service\";\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material\";\r\nimport {CategoryPersonalService} from \"../../../services/category-personal.service\";\r\nimport {AutoCategoryPersonal} from \"../../../model/AutoCategoryPersonal\";\r\n\r\n@Component({\r\n  selector: 'app-add-personal',\r\n  templateUrl: './add-personal.component.html',\r\n  styleUrls: ['./add-personal.component.css']\r\n})\r\nexport class AddPersonalComponent implements OnInit {\r\n\r\n  form: FormGroup;\r\n  category: AutoCategoryPersonal[];\r\n\r\n  constructor(private _dialog: DialogService,\r\n              private _category: CategoryPersonalService,\r\n              private formBuilder: FormBuilder,\r\n              private dialogRef: MatDialogRef<AddPersonalComponent>,\r\n              @Inject(MAT_DIALOG_DATA) private data: any) {\r\n    this._category.getAll().subscribe(res => {\r\n      this.category = res;\r\n    })\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.form = this.formBuilder.group({\r\n      id: null,\r\n      name: [null, Validators.required],\r\n      surname: [null, Validators.required],\r\n      autoCategoryPersonal: [{\r\n        id: null,\r\n        name: null,\r\n      }, Validators.required],\r\n    });\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  stopAdd(): void {\r\n    this._dialog.dialogAdd(this.form.value);\r\n  }\r\n\r\n  selectedAuto(event) {\r\n    this._category.getSingle(event).subscribe(res => {\r\n      this.form.getRawValue().autoCategoryPersonal.id = res.id;\r\n\r\n      this.form.getRawValue().autoCategoryPersonal.name = res.name;\r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \".modal {\\r\\n  width: 400px;\\r\\n  height: auto;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"modal\\\">\\r\\n  <mat-grid-list cols=\\\"1\\\" rowHeight=\\\"60px\\\">\\r\\n    <form class=\\\"form\\\" #formControl=\\\"ngForm\\\" [formGroup]=\\\"form\\\">\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <input matInput\\r\\n                 type=\\\"text\\\"\\r\\n                 formControlName=\\\"name\\\"\\r\\n                 placeholder=\\\"Name\\\">\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <button mat-button\\r\\n                color=\\\"primary\\\"\\r\\n                [disabled]=\\\"!formControl.valid\\\"\\r\\n                [mat-dialog-close]=\\\"1\\\"\\r\\n                (click)=\\\"stopAdd()\\\">\\r\\n          Save\\r\\n        </button>\\r\\n        <button mat-button\\r\\n                color=\\\"warn\\\"\\r\\n                (click)=\\\"onNoClick()\\\"\\r\\n                tabindex=\\\"-1\\\">\\r\\n          Cancel\\r\\n        </button>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n    </form>\\r\\n  </mat-grid-list>\\r\\n</div>\\r\\n\"","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\r\nimport {AutoCategoryPersonal} from \"../../../model/AutoCategoryPersonal\";\r\nimport {DialogService} from \"../../../services/dialog.service\";\r\nimport {CategoryPersonalService} from \"../../../services/category-personal.service\";\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material\";\r\n\r\n@Component({\r\n  selector: 'app-add-problem',\r\n  templateUrl: './add-problem.component.html',\r\n  styleUrls: ['./add-problem.component.css']\r\n})\r\nexport class AddProblemComponent implements OnInit {\r\n\r\n  form: FormGroup;\r\n\r\n  constructor(private _dialog: DialogService,\r\n              private formBuilder: FormBuilder,\r\n              private dialogRef: MatDialogRef<AddProblemComponent>,\r\n              @Inject(MAT_DIALOG_DATA) private data: any) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.form = this.formBuilder.group({\r\n      id: null,\r\n      name: [null, Validators.required],\r\n    });\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  stopAdd(): void {\r\n    this._dialog.dialogAdd(this.form.value);\r\n  }\r\n\r\n}\r\n","module.exports = \".modal {\\r\\n  width: 400px;\\r\\n  height: auto;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"modal\\\">\\r\\n  <mat-grid-list cols=\\\"1\\\" rowHeight=\\\"60px\\\">\\r\\n    <form class=\\\"form\\\" #formControl=\\\"ngForm\\\" [formGroup]=\\\"form\\\">\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <mat-label>Problem</mat-label>\\r\\n          <mat-select (selectionChange)=\\\"selectedProblem($event.value)\\\">\\r\\n            <mat-option *ngFor=\\\"let item of problems\\\" [value]=\\\"item.id\\\">\\r\\n              {{item.name}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <mat-label>Auto</mat-label>\\r\\n          <mat-select (selectionChange)=\\\"selectedAuto($event.value)\\\">\\r\\n            <mat-option *ngFor=\\\"let item of auto\\\" [value]=\\\"item.id\\\">\\r\\n              {{item.autoCategory.name}} - {{item.autoMarka.name}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Choose a date\\\" formControlName=\\\"date\\\">\\r\\n          <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n          <mat-datepicker #picker></mat-datepicker>\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <mat-label>Personal</mat-label>\\r\\n          <mat-select (selectionChange)=\\\"selectedPersonal($event.value)\\\">\\r\\n            <mat-option *ngFor=\\\"let item of personals\\\" [value]=\\\"item.id\\\">\\r\\n              {{item.name}} {{item.surname}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <input matInput\\r\\n                 type=\\\"number\\\"\\r\\n                 formControlName=\\\"price\\\"\\r\\n                 placeholder=\\\"Price\\\">\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <button mat-button\\r\\n                color=\\\"primary\\\"\\r\\n                [disabled]=\\\"!formControl.valid\\\"\\r\\n                [mat-dialog-close]=\\\"1\\\"\\r\\n                (click)=\\\"stopAdd()\\\">\\r\\n          Save\\r\\n        </button>\\r\\n        <button mat-button\\r\\n                color=\\\"warn\\\"\\r\\n                (click)=\\\"onNoClick()\\\"\\r\\n                tabindex=\\\"-1\\\">\\r\\n          Cancel\\r\\n        </button>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n    </form>\\r\\n  </mat-grid-list>\\r\\n</div>\\r\\n\"","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\r\nimport {Auto} from \"../../../model/Auto\";\r\nimport {DialogService} from \"../../../services/dialog.service\";\r\nimport {AutoService} from \"../../../services/auto.service\";\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material\";\r\nimport {PersonalService} from \"../../../services/personal.service\";\r\nimport {AutoPersonal} from \"../../../model/AutoPersonal\";\r\nimport {AutoProblem} from \"../../../model/AutoProblem\";\r\nimport {ProblemService} from \"../../../services/problem.service\";\r\n\r\n@Component({\r\n  selector: 'app-add-repair',\r\n  templateUrl: './add-repair.component.html',\r\n  styleUrls: ['./add-repair.component.css']\r\n})\r\nexport class AddRepairComponent implements OnInit {\r\n\r\n  form: FormGroup;\r\n  auto: Auto[];\r\n  personals: AutoPersonal[];\r\n  problems: AutoProblem[];\r\n\r\n  constructor(private _dialog: DialogService,\r\n              private _auto: AutoService,\r\n              private _personal: PersonalService,\r\n              private _problem: ProblemService,\r\n              private formBuilder: FormBuilder,\r\n              private dialogRef: MatDialogRef<AddRepairComponent>,\r\n              @Inject(MAT_DIALOG_DATA) private data: any) {\r\n\r\n    this._auto.getAll().subscribe(res => {\r\n      this.auto = res;\r\n    });\r\n\r\n    this._personal.getAll().subscribe(res => {\r\n      this.personals = res;\r\n    });\r\n\r\n    this._problem.getAll().subscribe(res => {\r\n      this.problems = res;\r\n    })\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.form = this.formBuilder.group({\r\n      id: null,\r\n      autoProblem: [{\r\n        id: null,\r\n        name: null,\r\n      }, Validators.required],\r\n      auto: [{\r\n        id: null,\r\n        autoCategory: {\r\n          id: null,\r\n          name: null,\r\n        },\r\n        autoMarka: {\r\n          id: null,\r\n          name: null,\r\n        }\r\n      }, Validators.required],\r\n      date: null,\r\n      autoPersonal: [{\r\n        id: null,\r\n        name: null,\r\n        surname: null,\r\n        autoCategoryPersonal: {\r\n          id: null,\r\n          name: null,\r\n        }\r\n      }, Validators.required],\r\n      price: null,\r\n    });\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  stopAdd(): void {\r\n    this._dialog.dialogAdd(this.form.value);\r\n  }\r\n\r\n  selectedAuto(event) {\r\n    this._auto.getSingle(event).subscribe(res => {\r\n      this.form.getRawValue().auto.id = res.id;\r\n\r\n      this.form.getRawValue().auto.autoCategory.id = res.autoCategory.id;\r\n      this.form.getRawValue().auto.autoCategory.name = res.autoCategory.name;\r\n\r\n      this.form.getRawValue().auto.autoMarka.id = res.autoMarka.id;\r\n      this.form.getRawValue().auto.autoMarka.name = res.autoMarka.name;\r\n    });\r\n  }\r\n\r\n  selectedPersonal(event) {\r\n    this._personal.getSingle(event).subscribe(res => {\r\n      this.form.getRawValue().autoPersonal.id = res.id;\r\n      this.form.getRawValue().autoPersonal.name = res.name;\r\n      this.form.getRawValue().autoPersonal.surname = res.surname;\r\n\r\n      this.form.getRawValue().autoPersonal.autoCategoryPersonal.id = res.autoCategoryPersonal.id;\r\n      this.form.getRawValue().autoPersonal.autoCategoryPersonal.name = res.autoCategoryPersonal.name;\r\n    });\r\n  }\r\n\r\n  selectedProblem(event) {\r\n    this._problem.getSingle(event).subscribe(res => {\r\n      this.form.getRawValue().autoProblem.id = res.id;\r\n      this.form.getRawValue().autoProblem.name = res.name;\r\n    });\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<p>\\r\\n  add-route works!\\r\\n</p>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-add-route',\r\n  templateUrl: './add-route.component.html',\r\n  styleUrls: ['./add-route.component.css']\r\n})\r\nexport class AddRouteComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \".modal {\\r\\n  width: 400px;\\r\\n  height: auto;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"modal\\\">\\r\\n  <mat-grid-list cols=\\\"1\\\" rowHeight=\\\"60px\\\">\\r\\n    <form class=\\\"form\\\" #formControl=\\\"ngForm\\\" [formGroup]=\\\"form\\\">\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <mat-label>Auto</mat-label>\\r\\n          <mat-select (selectionChange)=\\\"selectedAuto($event.value)\\\">\\r\\n            <mat-option *ngFor=\\\"let item of auto\\\" [value]=\\\"item.id\\\">\\r\\n              {{item.autoCategory.name}} - {{item.autoMarka.name}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Choose a date\\\" formControlName=\\\"date\\\">\\r\\n          <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n          <mat-datepicker #picker></mat-datepicker>\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <input matInput\\r\\n                 type=\\\"number\\\"\\r\\n                 formControlName=\\\"price\\\"\\r\\n                 placeholder=\\\"Price\\\">\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-slide-toggle (toggleChange)=\\\"toggleButton()\\\" formControlName=\\\"sale_buy\\\">\\r\\n          <mat-label>{{toggle ? 'Buy' : 'Sale'}}</mat-label>\\r\\n        </mat-slide-toggle>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <button mat-button\\r\\n                color=\\\"primary\\\"\\r\\n                [disabled]=\\\"!formControl.valid\\\"\\r\\n                [mat-dialog-close]=\\\"1\\\"\\r\\n                (click)=\\\"stopAdd()\\\">\\r\\n          Save\\r\\n        </button>\\r\\n        <button mat-button\\r\\n                color=\\\"warn\\\"\\r\\n                (click)=\\\"onNoClick()\\\"\\r\\n                tabindex=\\\"-1\\\">\\r\\n          Cancel\\r\\n        </button>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n    </form>\\r\\n  </mat-grid-list>\\r\\n</div>\\r\\n\"","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\r\nimport {DialogService} from \"../../../services/dialog.service\";\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material\";\r\nimport {AutoService} from \"../../../services/auto.service\";\r\nimport {Auto} from \"../../../model/Auto\";\r\n\r\n@Component({\r\n  selector: 'app-add-sale-buy',\r\n  templateUrl: './add-sale-buy.component.html',\r\n  styleUrls: ['./add-sale-buy.component.css']\r\n})\r\nexport class AddSaleBuyComponent implements OnInit {\r\n\r\n  form: FormGroup;\r\n  auto: Auto[];\r\n  toggle: boolean;\r\n\r\n  constructor(private _dialog: DialogService,\r\n              private _auto: AutoService,\r\n              private formBuilder: FormBuilder,\r\n              private dialogRef: MatDialogRef<AddSaleBuyComponent>,\r\n              @Inject(MAT_DIALOG_DATA) private data: any) {\r\n    this._auto.getAll().subscribe(res => {\r\n      this.auto = res;\r\n    })\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.form = this.formBuilder.group({\r\n      id: null,\r\n      auto: [{\r\n        id: null,\r\n        autoCategory: {\r\n          id: null,\r\n          name: null,\r\n        },\r\n        autoMarka: {\r\n          id: null,\r\n          name: null,\r\n        }\r\n      }, Validators.required],\r\n      date: null,\r\n      sale_buy: null,\r\n      price: null,\r\n    });\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  stopAdd(): void {\r\n    this._dialog.dialogAdd(this.form.value);\r\n  }\r\n\r\n  selectedAuto(event) {\r\n    this._auto.getSingle(event).subscribe(res => {\r\n      this.form.getRawValue().auto.id = res.id;\r\n\r\n      this.form.getRawValue().auto.autoCategory.id = res.autoCategory.id;\r\n      this.form.getRawValue().auto.autoCategory.name = res.autoCategory.name;\r\n\r\n      this.form.getRawValue().auto.autoMarka.id = res.autoMarka.id;\r\n      this.form.getRawValue().auto.autoMarka.name = res.autoMarka.name;\r\n    });\r\n  }\r\n\r\n  toggleButton() {\r\n    this.toggle = !this.toggle;\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<p>\\r\\n  add-street works!\\r\\n</p>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-add-street',\r\n  templateUrl: './add-street.component.html',\r\n  styleUrls: ['./add-street.component.css']\r\n})\r\nexport class AddStreetComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<form class=\\\"user-form\\\" (ngSubmit)=\\\"submit\\\" #formControl=\\\"ngForm\\\">\\r\\n  <div class=\\\"form\\\">\\r\\n    <mat-form-field class=\\\"example-full-width\\\">\\r\\n      <input matInput\\r\\n             [(ngModel)]=\\\"user.email\\\"\\r\\n             name=\\\"email\\\"\\r\\n             placeholder=\\\"Email\\\"\\r\\n             [value]=\\\"user?.email\\\"\\r\\n             [formControl]=\\\"emailFormControl\\\">\\r\\n    </mat-form-field>\\r\\n\\r\\n    <mat-form-field class=\\\"example-full-width\\\">\\r\\n      <input matInput\\r\\n             [(ngModel)]=\\\"user.password\\\"\\r\\n             name=\\\"pass\\\"\\r\\n             placeholder=\\\"Password\\\"\\r\\n             [value]=\\\"user?.password\\\">\\r\\n    </mat-form-field>\\r\\n\\r\\n    <div class=\\\"button\\\">\\r\\n      <button mat-button [type]=\\\"submit\\\" [disabled]=\\\"!formControl.valid\\\" [mat-dialog-close]=\\\"1\\\" (click)=\\\"stopAdd()\\\">Save</button>\\r\\n      <button mat-button (click)=\\\"onNoClick()\\\" tabindex=\\\"-1\\\">Cancel</button>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\"","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {FormControl, Validators} from \"@angular/forms\";\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material\";\r\nimport {UserService} from \"../../../services/user.service\";\r\nimport {DialogService} from \"../../../services/dialog.service\";\r\n\r\n@Component({\r\n  selector: 'app-add-user',\r\n  templateUrl: './add-user.component.html',\r\n  styleUrls: ['./add-user.component.css']\r\n})\r\nexport class AddUserComponent implements OnInit {\r\n\r\n  user = {\r\n    email: '',\r\n    password: ''\r\n  };\r\n\r\n  emailFormControl = new FormControl('', [\r\n    Validators.required,\r\n    Validators.email,\r\n  ]);\r\n\r\n  constructor(private dialogRef: MatDialogRef<AddUserComponent>,\r\n              @Inject(MAT_DIALOG_DATA) private data: any,\r\n              private _user: UserService,\r\n              private _dialog: DialogService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  stopAdd(): void {\r\n    this._dialog.dialogAdd(this.user);\r\n  }\r\n\r\n}\r\n","module.exports = \".modal {\\r\\n  width: 400px;\\r\\n  height: auto;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"modal\\\">\\r\\n  <mat-grid-list cols=\\\"1\\\" rowHeight=\\\"60px\\\">\\r\\n    <form class=\\\"form\\\" #formControl=\\\"ngForm\\\" [formGroup]=\\\"form\\\">\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <mat-label>Street</mat-label>\\r\\n          <mat-select (selectionChange)=\\\"selectedStreet($event.value)\\\" formControlName=\\\"autoStreet\\\">\\r\\n            <mat-option *ngFor=\\\"let item of street\\\" [value]=\\\"item.id\\\">\\r\\n              {{item.street_start}} - {{item.street_finish}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <mat-label>Auto</mat-label>\\r\\n          <mat-select (selectionChange)=\\\"selectedAuto($event.value)\\\" formControlName=\\\"auto\\\">\\r\\n            <mat-option *ngFor=\\\"let item of auto\\\" [value]=\\\"item.id\\\">\\r\\n              {{item.autoCategory.name}} - {{item.autoMarka.name}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <input matInput\\r\\n                 type=\\\"number\\\"\\r\\n                 formControlName=\\\"passanger_count\\\"\\r\\n                 placeholder=\\\"Number of passengers\\\">\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <button mat-button\\r\\n                color=\\\"primary\\\"\\r\\n                [disabled]=\\\"!formControl.valid\\\"\\r\\n                [mat-dialog-close]=\\\"1\\\"\\r\\n                (click)=\\\"stop()\\\">\\r\\n          Save\\r\\n        </button>\\r\\n        <button mat-button\\r\\n                color=\\\"warn\\\"\\r\\n                (click)=\\\"onNoClick()\\\"\\r\\n                tabindex=\\\"-1\\\">\\r\\n          Cancel\\r\\n        </button>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n    </form>\\r\\n  </mat-grid-list>\\r\\n</div>\\r\\n\"","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup} from \"@angular/forms\";\r\nimport {DialogService} from \"../../services/dialog.service\";\r\nimport {StreetService} from \"../../services/street.service\";\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material\";\r\nimport {AutoStreet} from \"../../model/AutoStreet\";\r\nimport {RouteService} from \"../../services/route.service\";\r\nimport {AutoRoute} from \"../../model/AutoRoute\";\r\nimport {AutoService} from \"../../services/auto.service\";\r\nimport {Auto} from \"../../model/Auto\";\r\n\r\n@Component({\r\n  selector: 'app-dialogs-route',\r\n  templateUrl: './dialogs-route.component.html',\r\n  styleUrls: ['./dialogs-route.component.css']\r\n})\r\nexport class DialogsRouteComponent implements OnInit {\r\n\r\n  form: FormGroup;\r\n  private currentRow: any;\r\n  auto: Auto[];\r\n  street: AutoStreet[];\r\n  private selectStreet: AutoStreet;\r\n  private selectAuto: Auto;\r\n\r\n  constructor(private _dialog: DialogService,\r\n              private _route: RouteService,\r\n              private _auto: AutoService,\r\n              private _street: StreetService,\r\n              private formBuilder: FormBuilder,\r\n              private dialogRef: MatDialogRef<DialogsRouteComponent>,\r\n              @Inject(MAT_DIALOG_DATA) private data: any) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.form = this.formBuilder.group(new AutoRoute());\r\n\r\n    if (!this.data.status) {\r\n      this.getSingle();\r\n    }\r\n    this.getAutos();\r\n    this.getStreets();\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  stop(): void {\r\n    this.form.patchValue({\r\n      auto: this.selectAuto,\r\n      autoStreet: this.selectStreet,\r\n    });\r\n    if (!this.data.status) {\r\n      this.form.value.id = this.data.id;\r\n      console.log(this.form.value.id);\r\n    }\r\n    this._dialog.dialogUpdate(this.form.value);\r\n  }\r\n\r\n  private getSingle() {\r\n    this._route.getSingle(this.data.id).subscribe((res: AutoRoute) => {\r\n      this.currentRow = res;\r\n      this.form.patchValue({\r\n        passanger_count: res.passanger_count\r\n      });\r\n    });\r\n  }\r\n\r\n  private getStreets() {\r\n    this._street.getAll().subscribe(res => {\r\n      this.street = res;\r\n      if(!this.data.status) {\r\n        this.selectStreet = this.street.find(r => r.id == this.currentRow.autoStreet.id);\r\n        this.form.patchValue({\r\n          autoStreet: this.selectStreet.id\r\n        })\r\n      }\r\n    });\r\n  }\r\n\r\n  private getAutos() {\r\n    this._auto.getAll().subscribe(res => {\r\n      this.auto = res;\r\n      if(!this.data.status) {\r\n        this.selectAuto = this.auto.find(r => r.id == this.currentRow.auto.id);\r\n        this.form.patchValue({\r\n          auto: this.selectAuto.id,\r\n        })\r\n      }\r\n    });\r\n  }\r\n\r\n  selectedAuto(event) {\r\n    this._auto.getSingle(event).subscribe(res => {\r\n      this.selectAuto = res;\r\n    });\r\n  }\r\n\r\n  selectedStreet(event) {\r\n    this._street.getSingle(event).subscribe(res => {\r\n      this.selectStreet = res;\r\n    });\r\n  }\r\n}\r\n","module.exports = \".modal {\\r\\n  width: 400px;\\r\\n  height: auto;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"modal\\\">\\r\\n  <mat-grid-list cols=\\\"1\\\" rowHeight=\\\"60px\\\">\\r\\n    <form class=\\\"form\\\" #formControl=\\\"ngForm\\\" [formGroup]=\\\"form\\\">\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <input matInput\\r\\n                 type=\\\"text\\\"\\r\\n                 formControlName=\\\"street_start\\\"\\r\\n                 placeholder=\\\"Street of Start\\\">\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <input matInput\\r\\n                 type=\\\"text\\\"\\r\\n                 formControlName=\\\"street_finish\\\"\\r\\n                 placeholder=\\\"Street of Finish\\\">\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <input matInput\\r\\n                 type=\\\"number\\\"\\r\\n                 formControlName=\\\"intervall\\\"\\r\\n                 placeholder=\\\"Intervall in minutes\\\">\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <button mat-button\\r\\n                color=\\\"primary\\\"\\r\\n                [disabled]=\\\"!formControl.valid\\\"\\r\\n                [mat-dialog-close]=\\\"1\\\"\\r\\n                (click)=\\\"stop()\\\">\\r\\n          Save\\r\\n        </button>\\r\\n        <button mat-button\\r\\n                color=\\\"warn\\\"\\r\\n                (click)=\\\"onNoClick()\\\"\\r\\n                tabindex=\\\"-1\\\">\\r\\n          Cancel\\r\\n        </button>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n    </form>\\r\\n  </mat-grid-list>\\r\\n</div>\\r\\n\"","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup} from \"@angular/forms\";\r\nimport {DialogService} from \"../../services/dialog.service\";\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material\";\r\nimport {AutoStreet} from \"../../model/AutoStreet\";\r\nimport {AutoSaleBuy} from \"../../model/AutoSaleBuy\";\r\nimport {StreetService} from \"../../services/street.service\";\r\n\r\n@Component({\r\n  selector: 'app-dialogs-street',\r\n  templateUrl: './dialogs-street.component.html',\r\n  styleUrls: ['./dialogs-street.component.css']\r\n})\r\nexport class DialogsStreetComponent implements OnInit {\r\n\r\n  form: FormGroup;\r\n  private currentRow: any;\r\n\r\n  constructor(private _dialog: DialogService,\r\n              private _street: StreetService,\r\n              private formBuilder: FormBuilder,\r\n              private dialogRef: MatDialogRef<DialogsStreetComponent>,\r\n              @Inject(MAT_DIALOG_DATA) private data: any) {  }\r\n\r\n  ngOnInit() {\r\n    this.form = this.formBuilder.group(new AutoStreet());\r\n\r\n    if(!this.data.status) {\r\n      this.getSingle();\r\n    }\r\n\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  stop(): void {\r\n    if(!this.data.status) {\r\n      this.form.value.id = this.data.id;\r\n    }\r\n    this._dialog.dialogUpdate(this.form.value);\r\n  }\r\n\r\n  getSingle() {\r\n    this._street.getSingle(this.data.id).subscribe((res: AutoStreet) => {\r\n      this.currentRow = res;\r\n      this.form.patchValue({\r\n        street_start: res.street_start,\r\n        street_finish: res.street_finish,\r\n        intervall: res.intervall\r\n      });\r\n    });\r\n  }\r\n\r\n\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"modal\\\">\\r\\n  <form class=\\\"form\\\" (ngSubmit)=\\\"submit\\\" #formControl=\\\"ngForm\\\" [formGroup]=\\\"form\\\">\\r\\n    <div class=\\\"form\\\">\\r\\n\\r\\n      <mat-form-field>\\r\\n        <mat-label>Category</mat-label>\\r\\n        <mat-select formControlName=\\\"autoCategory\\\" (selectionChange)=\\\"selectedCategory($event.value)\\\">\\r\\n          <mat-option *ngFor=\\\"let item of categorys\\\" [value]=\\\"item.id\\\">\\r\\n            {{item.name}}\\r\\n          </mat-option>\\r\\n        </mat-select>\\r\\n      </mat-form-field>\\r\\n      &nbsp;\\r\\n      <mat-form-field>\\r\\n        <mat-label>Marka</mat-label>\\r\\n        <mat-select formControlName=\\\"autoMarka\\\" (selectionChange)=\\\"selectedMarka($event.value)\\\">\\r\\n          <mat-option *ngFor=\\\"let item of markas\\\" [value]=\\\"item.id\\\">\\r\\n            {{item.name}}\\r\\n          </mat-option>\\r\\n        </mat-select>\\r\\n      </mat-form-field>\\r\\n\\r\\n      <div class=\\\"button\\\">\\r\\n        <button mat-button color=\\\"primary\\\" [type]=\\\"submit\\\" [disabled]=\\\"!formControl.valid\\\" [mat-dialog-close]=\\\"1\\\" (click)=\\\"stopEdit()\\\">Save</button>\\r\\n        <button mat-button color=\\\"warn\\\" (click)=\\\"onNoClick()\\\" tabindex=\\\"-1\\\">Cancel</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n</div>\\r\\n\"","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup} from \"@angular/forms\";\r\nimport {Auto} from \"../../../model/Auto\";\r\nimport {DialogService} from \"../../../services/dialog.service\";\r\nimport {AutoService} from \"../../../services/auto.service\";\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material\";\r\nimport {AutoCategory} from \"../../../model/AutoCategory\";\r\nimport {AutoMarka} from \"../../../model/AutoMarka\";\r\nimport {CategoryService} from \"../../../services/category.service\";\r\nimport {MarkaService} from \"../../../services/marka.service\";\r\n\r\n@Component({\r\n  selector: 'app-edit-auto',\r\n  templateUrl: './edit-auto.component.html',\r\n  styleUrls: ['./edit-auto.component.css']\r\n})\r\nexport class EditAutoComponent implements OnInit {\r\n\r\n  form: FormGroup;\r\n  auto: Auto;\r\n  currentAuto: Auto;\r\n  categorys: AutoCategory[];\r\n  markas: AutoMarka[];\r\n  selectCategory: AutoCategory;\r\n  selectMarka: AutoMarka;\r\n\r\n  constructor(private _dialog: DialogService,\r\n              private _category: CategoryService,\r\n              private _marka: MarkaService,\r\n              private _auto: AutoService,\r\n              private formBuilder: FormBuilder,\r\n              private dialogRef: MatDialogRef<EditAutoComponent>,\r\n              @Inject(MAT_DIALOG_DATA) private data: any) { }\r\n\r\n  ngOnInit() {\r\n    this.form = this.formBuilder.group({\r\n      id: null,\r\n      autoCategory: {\r\n        id: null,\r\n        name: null,\r\n      },\r\n      autoMarka: {\r\n        id: null,\r\n        name: null,\r\n      }\r\n    });\r\n\r\n    this.getSingle();\r\n\r\n    this._category.getAll().subscribe(res => {\r\n      this.categorys = res;\r\n      if(this.categorys) {\r\n        const toSelect = this.categorys.find(r => r.id == this.currentAuto.autoCategory.id);\r\n        this.form.patchValue({\r\n          autoCategory: toSelect.id,\r\n        })\r\n      }\r\n    });\r\n\r\n    this._marka.getAll().subscribe(res => {\r\n      this.markas = res;\r\n      if(this.markas) {\r\n        const toSelect = this.markas.find(r => r.id == this.currentAuto.autoMarka.id);\r\n        this.form.patchValue({\r\n          autoMarka: toSelect.id,\r\n        })\r\n      }\r\n    });\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  stopEdit(): void {\r\n    this.form.patchValue({\r\n      autoCategory: this.selectCategory,\r\n      autoMarka: this.selectMarka,\r\n    });\r\n    this.form.value.id = this.data.id;\r\n    this._dialog.dialogUpdate(this.form.value);\r\n  }\r\n\r\n  selectedCategory(event) {\r\n    this._category.getSingle(event).subscribe(res => {\r\n      this.selectCategory = res;\r\n      this.form.patchValue({\r\n        autoCategory: res.id\r\n      });\r\n    });\r\n  }\r\n\r\n  selectedMarka(event) {\r\n    this._marka.getSingle(event).subscribe(res => {\r\n      this.selectMarka = res;\r\n      this.form.patchValue({\r\n        autoMarka: res.id\r\n      });\r\n    });\r\n  }\r\n\r\n  getSingle() {\r\n    this._auto.getSingle(this.data.id).subscribe((res: Auto) => {\r\n      this.currentAuto = res;\r\n\r\n      this.form.patchValue({\r\n        autoCategory: res.autoCategory,\r\n        autoMarka: res.autoMarka,\r\n      });\r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \".modal {\\r\\n  width: 400px;\\r\\n  height: auto;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"modal\\\">\\r\\n  <mat-grid-list cols=\\\"2\\\" rowHeight=\\\"fit\\\">\\r\\n    <form class=\\\"form\\\" #formControl=\\\"ngForm\\\" [formGroup]=\\\"form\\\">\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field class=\\\"example-full-width\\\">\\r\\n          <input matInput\\r\\n                 formControlName=\\\"name\\\"\\r\\n                 placeholder=\\\"Name\\\">\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <button mat-button\\r\\n                color=\\\"primary\\\"\\r\\n                [disabled]=\\\"!formControl.valid\\\"\\r\\n                [mat-dialog-close]=\\\"1\\\"\\r\\n                (click)=\\\"stopEdit()\\\">\\r\\n          Save\\r\\n        </button>\\r\\n        <button mat-button\\r\\n                color=\\\"warn\\\"\\r\\n                (click)=\\\"onNoClick()\\\"\\r\\n                tabindex=\\\"-1\\\">\\r\\n          Cancel\\r\\n        </button>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n    </form>\\r\\n  </mat-grid-list>\\r\\n</div>\\r\\n\"","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\r\nimport {AutoDrivers} from \"../../../model/AutoDrivers\";\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material\";\r\nimport {DialogService} from \"../../../services/dialog.service\";\r\nimport {AutoBrigada} from \"../../../model/AutoBrigada\";\r\nimport {BrigadaService} from \"../../../services/brigada.service\";\r\n\r\n@Component({\r\n  selector: 'app-edit-brigada',\r\n  templateUrl: './edit-brigada.component.html',\r\n  styleUrls: ['./edit-brigada.component.css']\r\n})\r\nexport class EditBrigadaComponent implements OnInit {\r\n\r\n  form: FormGroup;\r\n  currentRow: AutoBrigada;\r\n\r\n  constructor(private dialogRef: MatDialogRef<EditBrigadaComponent>,\r\n              @Inject(MAT_DIALOG_DATA) private data: any,\r\n              private _dialog: DialogService,\r\n              private _brigada: BrigadaService,\r\n              private formBuilder: FormBuilder,) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.form = this.formBuilder.group({\r\n      id: null,\r\n      name: ['', Validators.required],\r\n    });\r\n\r\n    this.getSingle();\r\n\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  stopEdit(): void {\r\n    this.form.value.id = this.data.id;\r\n    console.log(this.form.value);\r\n    this._dialog.dialogUpdate(this.form.value);\r\n  }\r\n\r\n  getSingle() {\r\n    this._brigada.getSingle(this.data.id).subscribe((res: AutoBrigada) => {\r\n      this.form.patchValue({\r\n        name: res.name,\r\n      });\r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \".modal {\\r\\n  width: 400px;\\r\\n  height: auto;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"modal\\\">\\r\\n  <mat-grid-list cols=\\\"1\\\" rowHeight=\\\"100px\\\">\\r\\n    <form class=\\\"form\\\" #formControl=\\\"ngForm\\\" [formGroup]=\\\"form\\\">\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field class=\\\"example-full-width\\\">\\r\\n          <input matInput\\r\\n                 formControlName=\\\"name\\\"\\r\\n                 placeholder=\\\"Name\\\">\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field class=\\\"example-full-width\\\">\\r\\n          <input matInput\\r\\n                 formControlName=\\\"surname\\\"\\r\\n                 placeholder=\\\"Surname\\\">\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <button mat-button\\r\\n                color=\\\"primary\\\"\\r\\n                [disabled]=\\\"!formControl.valid\\\"\\r\\n                [mat-dialog-close]=\\\"1\\\"\\r\\n                (click)=\\\"stopEdit()\\\">\\r\\n          Save\\r\\n        </button>\\r\\n        <button mat-button\\r\\n                color=\\\"warn\\\"\\r\\n                (click)=\\\"onNoClick()\\\"\\r\\n                tabindex=\\\"-1\\\">\\r\\n          Cancel\\r\\n        </button>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n    </form>\\r\\n  </mat-grid-list>\\r\\n</div>\\r\\n\"","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material\";\r\nimport {DialogService} from \"../../../services/dialog.service\";\r\nimport {BrigadirService} from \"../../../services/brigadir.service\";\r\nimport {AutoBrigadir} from \"../../../model/AutoBrigadir\";\r\n\r\n@Component({\r\n  selector: 'app-edit-brigadir',\r\n  templateUrl: './edit-brigadir.component.html',\r\n  styleUrls: ['./edit-brigadir.component.css']\r\n})\r\nexport class EditBrigadirComponent implements OnInit {\r\n\r\n  form: FormGroup;\r\n  currentRow: AutoBrigadir;\r\n\r\n  constructor(private dialogRef: MatDialogRef<EditBrigadirComponent>,\r\n              @Inject(MAT_DIALOG_DATA) private data: any,\r\n              private _dialog: DialogService,\r\n              private _brigadir: BrigadirService,\r\n              private formBuilder: FormBuilder,) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.form = this.formBuilder.group({\r\n      id: null,\r\n      name: ['', Validators.required],\r\n      surname: ['', Validators.required],\r\n    });\r\n\r\n    this.getSingle();\r\n\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  stopEdit(): void {\r\n    this.form.value.id = this.data.id;\r\n    this._dialog.dialogUpdate(this.form.value);\r\n  }\r\n\r\n  getSingle() {\r\n    this._brigadir.getSingle(this.data.id).subscribe((res: AutoBrigadir) => {\r\n      this.form.patchValue({\r\n        name: res.name,\r\n        surname: res.surname,\r\n      });\r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \".modal {\\r\\n  width: 400px;\\r\\n  height: auto;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"modal\\\">\\r\\n  <mat-grid-list cols=\\\"2\\\" rowHeight=\\\"fit\\\">\\r\\n    <form class=\\\"form\\\" #formControl=\\\"ngForm\\\" [formGroup]=\\\"form\\\">\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field class=\\\"example-full-width\\\">\\r\\n          <input matInput\\r\\n                 formControlName=\\\"name\\\"\\r\\n                 placeholder=\\\"Name\\\">\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <button mat-button\\r\\n                color=\\\"primary\\\"\\r\\n                [disabled]=\\\"!formControl.valid\\\"\\r\\n                [mat-dialog-close]=\\\"1\\\"\\r\\n                (click)=\\\"stopEdit()\\\">\\r\\n          Save\\r\\n        </button>\\r\\n        <button mat-button\\r\\n                color=\\\"warn\\\"\\r\\n                (click)=\\\"onNoClick()\\\"\\r\\n                tabindex=\\\"-1\\\">\\r\\n          Cancel\\r\\n        </button>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n    </form>\\r\\n  </mat-grid-list>\\r\\n</div>\\r\\n\"","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material\";\r\nimport {DialogService} from \"../../../services/dialog.service\";\r\nimport {AutoCategoryPersonal} from \"../../../model/AutoCategoryPersonal\";\r\nimport {CategoryPersonalService} from \"../../../services/category-personal.service\";\r\n\r\n@Component({\r\n  selector: 'app-edit-category-personal',\r\n  templateUrl: './edit-category-personal.component.html',\r\n  styleUrls: ['./edit-category-personal.component.css']\r\n})\r\nexport class EditCategoryPersonalComponent implements OnInit {\r\n\r\n  form: FormGroup;\r\n  currentRow: AutoCategoryPersonal;\r\n\r\n  constructor(private dialogRef: MatDialogRef<EditCategoryPersonalComponent>,\r\n              @Inject(MAT_DIALOG_DATA) private data: any,\r\n              private _dialog: DialogService,\r\n              private _personal: CategoryPersonalService,\r\n              private formBuilder: FormBuilder,) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.form = this.formBuilder.group({\r\n      id: null,\r\n      name: ['', Validators.required],\r\n    });\r\n\r\n    this.getSingle();\r\n\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  stopEdit(): void {\r\n    this.form.value.id = this.data.id;\r\n    this._dialog.dialogUpdate(this.form.value);\r\n  }\r\n\r\n  getSingle() {\r\n    this._personal.getSingle(this.data.id).subscribe((res: AutoCategoryPersonal) => {\r\n      this.form.patchValue({\r\n        name: res.name,\r\n      });\r\n    });\r\n  }\r\n\r\n\r\n}\r\n","module.exports = \".container {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  min-width: 450px;\\r\\n}\\r\\n\\r\\n.container > * {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.form {\\r\\n  display: flex;\\r\\n  padding-top: 6px;\\r\\n}\\r\\n\\r\\n.mat-form-field {\\r\\n  font-size: 16px;\\r\\n  flex-grow: 1;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"modal\\\">\\r\\n  <form class=\\\"form\\\" (ngSubmit)=\\\"submit\\\" #formControl=\\\"ngForm\\\" [formGroup]=\\\"form\\\">\\r\\n    <div class=\\\"form\\\">\\r\\n      <mat-form-field class=\\\"example-full-width\\\">\\r\\n        <input matInput\\r\\n               formControlName=\\\"name\\\"\\r\\n               placeholder=\\\"Name\\\">\\r\\n      </mat-form-field>\\r\\n\\r\\n      <div class=\\\"button\\\">\\r\\n        <button mat-button color=\\\"primary\\\" [type]=\\\"submit\\\" [disabled]=\\\"!formControl.valid\\\" [mat-dialog-close]=\\\"1\\\" (click)=\\\"stopEdit()\\\">Save</button>\\r\\n        <button mat-button color=\\\"warn\\\" (click)=\\\"onNoClick()\\\" tabindex=\\\"-1\\\">Cancel</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n</div>\\r\\n\\r\\n\"","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material\";\r\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\r\nimport {DialogService} from \"../../../services/dialog.service\";\r\nimport {AutoDrivers} from \"../../../model/AutoDrivers\";\r\nimport {CategoryService} from \"../../../services/category.service\";\r\n\r\n@Component({\r\n  selector: 'app-edit-category',\r\n  templateUrl: './edit-category.component.html',\r\n  styleUrls: ['./edit-category.component.css']\r\n})\r\nexport class EditCategoryComponent implements OnInit {\r\n  form: FormGroup;\r\n  currentDriver: AutoDrivers;\r\n\r\n  constructor(private dialogRef: MatDialogRef<EditCategoryComponent>,\r\n              @Inject(MAT_DIALOG_DATA) private data: any,\r\n              private _dialog: DialogService,\r\n              private _category: CategoryService,\r\n              private formBuilder: FormBuilder,) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.form = this.formBuilder.group({\r\n      id: null,\r\n      name: ['', Validators.required],\r\n    });\r\n\r\n    this.getSingle();\r\n\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  stopEdit(): void {\r\n    this.form.value.id = this.data.id;\r\n    console.log(this.form.value);\r\n    this._dialog.dialogUpdate(this.form.value);\r\n  }\r\n\r\n  getSingle() {\r\n    this._category.getSingle(this.data.id).subscribe((res: AutoDrivers) => {\r\n      this.form.patchValue({\r\n        name: res.name,\r\n      });\r\n    });\r\n  }\r\n}\r\n","module.exports = \".modal {\\r\\n  width: 400px;\\r\\n  height: auto;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"modal\\\">\\r\\n  <mat-grid-list cols=\\\"2\\\" rowHeight=\\\"100px\\\">\\r\\n    <form class=\\\"form\\\" #formControl=\\\"ngForm\\\" [formGroup]=\\\"form\\\">\\r\\n\\r\\n    <mat-grid-tile>\\r\\n      <mat-form-field class=\\\"example-full-width\\\">\\r\\n        <input matInput\\r\\n               formControlName=\\\"name\\\"\\r\\n               placeholder=\\\"Name\\\">\\r\\n      </mat-form-field>\\r\\n    </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field class=\\\"example-full-width\\\">\\r\\n          <mat-label>SurName</mat-label>\\r\\n          <input matInput\\r\\n                 formControlName=\\\"surname\\\"\\r\\n                 placeholder=\\\"SurName\\\">\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <mat-label>Category</mat-label>\\r\\n          <mat-select formControlName=\\\"auto\\\" (selectionChange)=\\\"selectedAuto($event.value)\\\">\\r\\n            <mat-option *ngFor=\\\"let item of auto\\\" [value]=\\\"item.id\\\">\\r\\n              {{item.autoCategory.name}} - {{item.autoMarka.name}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <button mat-button\\r\\n                color=\\\"primary\\\"\\r\\n                [disabled]=\\\"!formControl.valid\\\"\\r\\n                [mat-dialog-close]=\\\"1\\\"\\r\\n                (click)=\\\"stopEdit()\\\">\\r\\n          Save\\r\\n        </button>\\r\\n        <button mat-button\\r\\n                color=\\\"warn\\\"\\r\\n                (click)=\\\"onNoClick()\\\"\\r\\n                tabindex=\\\"-1\\\">\\r\\n          Cancel\\r\\n        </button>\\r\\n      </mat-grid-tile>\\r\\n    </form>\\r\\n  </mat-grid-list>\\r\\n</div>\\r\\n\"","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\r\nimport {Auto} from \"../../../model/Auto\";\r\nimport {DialogService} from \"../../../services/dialog.service\";\r\nimport {AutoService} from \"../../../services/auto.service\";\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material\";\r\nimport {AutoDrivers} from \"../../../model/AutoDrivers\";\r\nimport {DriverService} from \"../../../services/driver.service\";\r\n\r\n@Component({\r\n  selector: 'app-edit-driver',\r\n  templateUrl: './edit-driver.component.html',\r\n  styleUrls: ['./edit-driver.component.css']\r\n})\r\nexport class EditDriverComponent implements OnInit {\r\n\r\n  form: FormGroup;\r\n  driver: AutoDrivers;\r\n  currentDriver: AutoDrivers;\r\n  auto: Auto[];\r\n  selectAuto: Auto;\r\n\r\n  flag = false;\r\n\r\n  constructor(private _dialog: DialogService,\r\n              private _auto: AutoService,\r\n              private _driver: DriverService,\r\n              private formBuilder: FormBuilder,\r\n              private dialogRef: MatDialogRef<EditDriverComponent>,\r\n              @Inject(MAT_DIALOG_DATA) private data: any) { }\r\n\r\n  ngOnInit() {\r\n    this.form = this.formBuilder.group({\r\n      id: null,\r\n      name: ['', Validators.required],\r\n      surname: ['', Validators.required],\r\n      auto: {\r\n        id: null,\r\n        autoCategory: {\r\n          id: null,\r\n          name: null,\r\n        },\r\n        autoMarka: {\r\n          id: null,\r\n          name: null,\r\n        }\r\n      },\r\n    });\r\n\r\n    this.getSingle();\r\n\r\n    this._auto.getAll().subscribe(res => {\r\n      this.auto = res;\r\n      if(this.auto) {\r\n        this.selectAuto = this.auto.find(r => r.id == this.currentDriver.auto.id);\r\n        this.form.patchValue({\r\n          auto: this.selectAuto.id,\r\n        })\r\n      }\r\n    });\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  stopEdit(): void {\r\n    this.form.patchValue({\r\n      auto: this.selectAuto,\r\n    });\r\n    this.form.value.id = this.data.id;\r\n    this._dialog.dialogUpdate(this.form.value);\r\n  }\r\n\r\n  selectedAuto(event) {\r\n    this._auto.getSingle(event).subscribe(res => {\r\n      this.selectAuto = res;\r\n      this.form.patchValue({\r\n        auto: res.id\r\n      });\r\n    });\r\n  }\r\n\r\n  getSingle() {\r\n    this._driver.getSingle(this.data.id).subscribe((res: AutoDrivers) => {\r\n      this.currentDriver = res;\r\n      this.form.patchValue({\r\n        name: res.name,\r\n        surname: res.surname,\r\n      });\r\n    });\r\n  }\r\n}\r\n","module.exports = \".modal {\\r\\n  width: 400px;\\r\\n  height: auto;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"modal\\\">\\r\\n  <mat-grid-list cols=\\\"1\\\" rowHeight=\\\"60px\\\">\\r\\n    <form class=\\\"form\\\" #formControl=\\\"ngForm\\\" [formGroup]=\\\"form\\\">\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <mat-label>Personal</mat-label>\\r\\n          <mat-select (selectionChange)=\\\"selectedPersonal($event.value)\\\" formControlName=\\\"autoPersonal\\\">\\r\\n            <mat-option *ngFor=\\\"let item of personals\\\" [value]=\\\"item.id\\\">\\r\\n              {{item.name}} - {{item.surname}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <mat-label>Driver</mat-label>\\r\\n          <mat-select (selectionChange)=\\\"selectedDriver($event.value)\\\" formControlName=\\\"autoDrivers\\\">\\r\\n            <mat-option *ngFor=\\\"let item of drivers\\\" [value]=\\\"item.id\\\">\\r\\n              {{item.name}} - {{item.surname}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <mat-label>Brigada</mat-label>\\r\\n          <mat-select (selectionChange)=\\\"selectedBrigada($event.value)\\\" formControlName=\\\"autoBrigada\\\">\\r\\n            <mat-option *ngFor=\\\"let item of brigads\\\" [value]=\\\"item.id\\\">\\r\\n              {{item.name}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <mat-label>Brigadir</mat-label>\\r\\n          <mat-select (selectionChange)=\\\"selectedBrigadir($event.value)\\\" formControlName=\\\"autoBrigadir\\\">\\r\\n            <mat-option *ngFor=\\\"let item of brigadirs\\\" [value]=\\\"item.id\\\">\\r\\n              {{item.name}} - {{item.surname}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <button mat-button\\r\\n                color=\\\"primary\\\"\\r\\n                [disabled]=\\\"!formControl.valid\\\"\\r\\n                [mat-dialog-close]=\\\"1\\\"\\r\\n                (click)=\\\"stopEdit()\\\">\\r\\n          Save\\r\\n        </button>\\r\\n        <button mat-button\\r\\n                color=\\\"warn\\\"\\r\\n                (click)=\\\"onNoClick()\\\"\\r\\n                tabindex=\\\"-1\\\">\\r\\n          Cancel\\r\\n        </button>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n    </form>\\r\\n  </mat-grid-list>\\r\\n</div>\\r\\n\"","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup} from \"@angular/forms\";\r\nimport {DialogService} from \"../../../services/dialog.service\";\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material\";\r\nimport {AutoPersonal} from \"../../../model/AutoPersonal\";\r\nimport {AutoDrivers} from \"../../../model/AutoDrivers\";\r\nimport {AutoBrigada} from \"../../../model/AutoBrigada\";\r\nimport {AutoBrigadir} from \"../../../model/AutoBrigadir\";\r\nimport {AutoGroup} from \"../../../model/AutoGroup\";\r\nimport {PersonalService} from \"../../../services/personal.service\";\r\nimport {DriverService} from \"../../../services/driver.service\";\r\nimport {BrigadaService} from \"../../../services/brigada.service\";\r\nimport {BrigadirService} from \"../../../services/brigadir.service\";\r\nimport {GroupService} from \"../../../services/group.service\";\r\n\r\n@Component({\r\n  selector: 'app-edit-group',\r\n  templateUrl: './edit-group.component.html',\r\n  styleUrls: ['./edit-group.component.css']\r\n})\r\nexport class EditGroupComponent implements OnInit {\r\n\r\n  form: FormGroup;\r\n  autoGroup: AutoGroup;\r\n  personals: AutoPersonal[];\r\n  selectPersonals: AutoPersonal;\r\n  drivers: AutoDrivers[];\r\n  selectDrivers: AutoDrivers;\r\n  brigads: AutoBrigada[];\r\n  selectBrigads: AutoBrigada;\r\n  brigadirs: AutoBrigadir[];\r\n  selectBrigadirs: AutoBrigadir;\r\n  currentRow: AutoGroup;\r\n\r\n\r\n  constructor(private _dialog: DialogService,\r\n              private _group: GroupService,\r\n              private _personal: PersonalService,\r\n              private _driver: DriverService,\r\n              private _brigada: BrigadaService,\r\n              private _brigadir: BrigadirService,\r\n              private formBuilder: FormBuilder,\r\n              private dialogRef: MatDialogRef<EditGroupComponent>,\r\n              @Inject(MAT_DIALOG_DATA) private data: any) { }\r\n\r\n  ngOnInit() {\r\n    this.form = this.formBuilder.group({\r\n      id: null,\r\n      autoPersonal: {\r\n        id: null,\r\n        name: null,\r\n        surname: null,\r\n        autoCategoryPersonal: {\r\n          id: null,\r\n          name: null\r\n        }\r\n      },\r\n      autoDrivers: {\r\n        id: null,\r\n        name: null,\r\n        surname: null,\r\n        auto: {\r\n          id: null,\r\n          autoCategory: {\r\n            id: null,\r\n            name: null\r\n          },\r\n          autoMarka: {\r\n            id: null,\r\n            name: null\r\n          }\r\n        }\r\n      },\r\n      autoBrigada: {\r\n        id: null,\r\n        name: null\r\n      },\r\n      autoBrigadir: {\r\n        id: null,\r\n        name: null,\r\n        surname: null\r\n      }\r\n    });\r\n\r\n    this.getSingle();\r\n\r\n    this._personal.getAll().subscribe(res => {\r\n      this.personals = res;\r\n      this.selectPersonals = this.personals.find(r => r.id == this.currentRow.autoPersonal.id);\r\n      this.form.patchValue({\r\n        autoPersonal: this.selectPersonals.id,\r\n      })\r\n    });\r\n\r\n    this._driver.getAll().subscribe(res => {\r\n      this.drivers = res;\r\n      this.selectDrivers = this.drivers.find(r => r.id == this.currentRow.autoDrivers.id);\r\n      this.form.patchValue({\r\n        autoDrivers: this.selectDrivers.id,\r\n      })\r\n    });\r\n\r\n    this._brigada.getAll().subscribe(res => {\r\n      this.brigads = res;\r\n      this.selectBrigads = this.brigads.find(r => r.id == this.currentRow.autoBrigada.id);\r\n      this.form.patchValue({\r\n        autoBrigada: this.selectBrigads.id,\r\n      })\r\n    });\r\n\r\n    this._brigadir.getAll().subscribe(res => {\r\n      this.brigadirs = res;\r\n      this.selectBrigadirs = this.brigadirs.find(r => r.id == this.currentRow.autoBrigadir.id);\r\n      this.form.patchValue({\r\n        autoBrigadir: this.selectBrigadirs.id,\r\n      })\r\n    });\r\n\r\n\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  stopEdit(): void {\r\n    this.form.patchValue({\r\n      autoPersonal: this.selectPersonals,\r\n      autoDrivers: this.selectDrivers,\r\n      autoBrigada: this.selectBrigads,\r\n      autoBrigadir: this.selectBrigadirs,\r\n    });\r\n    this.form.value.id = this.data.id;\r\n    this._dialog.dialogUpdate(this.form.value);\r\n  }\r\n\r\n  selectedPersonal(event) {\r\n    this._personal.getSingle(event).subscribe(res => {\r\n      this.selectPersonals = res;\r\n      this.form.patchValue({\r\n        autoPersonal: res.id\r\n      });\r\n    });\r\n  }\r\n\r\n  selectedBrigada(event) {\r\n    this._brigada.getSingle(event).subscribe(res => {\r\n      this.selectBrigads = res;\r\n      this.form.patchValue({\r\n        autoBrigada: res.id\r\n      });\r\n    });\r\n  }\r\n\r\n  selectedBrigadir(event) {\r\n    this._brigadir.getSingle(event).subscribe(res => {\r\n      this.selectBrigadirs = res;\r\n      this.form.patchValue({\r\n        autoBrigadir: res.id\r\n      });\r\n    });\r\n  }\r\n\r\n  selectedDriver(event) {\r\n    this._driver.getSingle(event).subscribe(res => {\r\n      this.selectDrivers = res;\r\n      this.form.patchValue({\r\n        autoDrivers: res.id\r\n      });\r\n    });\r\n  }\r\n\r\n  getSingle() {\r\n    this._group.getSingle(this.data.id).subscribe((res: AutoGroup) => {\r\n      this.currentRow = res;\r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \".modal {\\r\\n  width: 400px;\\r\\n  height: auto;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"modal\\\">\\r\\n  <mat-grid-list cols=\\\"1\\\" rowHeight=\\\"60px\\\">\\r\\n    <form class=\\\"form\\\" #formControl=\\\"ngForm\\\" [formGroup]=\\\"form\\\">\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <input matInput\\r\\n                 type=\\\"text\\\"\\r\\n                 formControlName=\\\"point_start\\\"\\r\\n                 placeholder=\\\"Point of Start\\\">\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <input matInput\\r\\n                 type=\\\"text\\\"\\r\\n                 formControlName=\\\"point_finish\\\"\\r\\n                 placeholder=\\\"Point of Finish\\\">\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <input matInput [matDatepicker]=\\\"firstPicker\\\" placeholder=\\\"Choose a start date\\\" formControlName=\\\"date_start\\\">\\r\\n          <mat-datepicker-toggle matSuffix [for]=\\\"firstPicker\\\"></mat-datepicker-toggle>\\r\\n          <mat-datepicker #firstPicker></mat-datepicker>\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <input matInput [matDatepicker]=\\\"secondPicker\\\" placeholder=\\\"Choose a finish date\\\" formControlName=\\\"date_finish\\\">\\r\\n          <mat-datepicker-toggle matSuffix [for]=\\\"secondPicker\\\"></mat-datepicker-toggle>\\r\\n          <mat-datepicker #secondPicker></mat-datepicker>\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <mat-label>Auto</mat-label>\\r\\n          <mat-select (selectionChange)=\\\"selectedAuto($event.value)\\\" formControlName=\\\"auto\\\">\\r\\n            <mat-option *ngFor=\\\"let item of auto\\\" [value]=\\\"item.id\\\">\\r\\n              {{item.autoCategory.name}} - {{item.autoMarka.name}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <button mat-button\\r\\n                color=\\\"primary\\\"\\r\\n                [disabled]=\\\"!formControl.valid\\\"\\r\\n                [mat-dialog-close]=\\\"1\\\"\\r\\n                (click)=\\\"stopEdit()\\\">\\r\\n          Save\\r\\n        </button>\\r\\n        <button mat-button\\r\\n                color=\\\"warn\\\"\\r\\n                (click)=\\\"onNoClick()\\\"\\r\\n                tabindex=\\\"-1\\\">\\r\\n          Cancel\\r\\n        </button>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n    </form>\\r\\n  </mat-grid-list>\\r\\n</div>\\r\\n\"","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material\";\r\nimport {DialogService} from \"../../../services/dialog.service\";\r\nimport {HardRouteService} from \"../../../services/hard-route.service\";\r\nimport {AutoHardRoute} from \"../../../model/AutoHardRoute\";\r\nimport {AutoService} from \"../../../services/auto.service\";\r\nimport {Auto} from \"../../../model/Auto\";\r\nimport {DatePipe} from \"@angular/common\";\r\n\r\n@Component({\r\n  selector: 'app-edit-hard-route',\r\n  templateUrl: './edit-hard-route.component.html',\r\n  styleUrls: ['./edit-hard-route.component.css']\r\n})\r\nexport class EditHardRouteComponent implements OnInit {\r\n\r\n  form: FormGroup;\r\n  rows: AutoHardRoute;\r\n  currentRow: AutoHardRoute;\r\n  auto: Auto[];\r\n  selectAuto: Auto;\r\n\r\n  constructor(private _dialog: DialogService,\r\n              private _auto: AutoService,\r\n              private _hardRoute: HardRouteService,\r\n              private formBuilder: FormBuilder,\r\n              private datepipe: DatePipe,\r\n              private dialogRef: MatDialogRef<EditHardRouteComponent>,\r\n              @Inject(MAT_DIALOG_DATA) private data: any) { }\r\n\r\n  ngOnInit() {\r\n    this.form = this.formBuilder.group({\r\n      id: null,\r\n      point_start: [null, Validators.required],\r\n      point_finish: [null, Validators.required],\r\n      date_start: [null, Validators.required],\r\n      date_finish: null,\r\n      auto: [{\r\n        id: null,\r\n        autoCategory: {\r\n          id: null,\r\n          name: null,\r\n        },\r\n        autoMarka: {\r\n          id: null,\r\n          name: null,\r\n        }\r\n      }, Validators.required],\r\n    });\r\n\r\n    this.getSingle();\r\n\r\n    this._auto.getAll().subscribe(res => {\r\n      this.auto = res;\r\n      if(this.auto) {\r\n        this.selectAuto = this.auto.find(r => r.id == this.currentRow.auto.id);\r\n        this.form.patchValue({\r\n          auto: this.selectAuto.id,\r\n        })\r\n      }\r\n    });\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  stopEdit(): void {\r\n    this.form.patchValue({\r\n      auto: this.selectAuto,\r\n    });\r\n    this.form.value.id = this.data.id;\r\n    this._dialog.dialogUpdate(this.form.value);\r\n  }\r\n\r\n  selectedAuto(event) {\r\n    this._auto.getSingle(event).subscribe(res => {\r\n      this.selectAuto = res;\r\n      this.form.patchValue({\r\n        auto: res.id\r\n      });\r\n    });\r\n  }\r\n\r\n  getSingle() {\r\n    this._hardRoute.getSingle(this.data.id).subscribe((res: AutoHardRoute) => {\r\n      this.currentRow = res;\r\n      this.form.patchValue({\r\n        point_start: res.point_start,\r\n        point_finish: res.point_finish,\r\n        date_start: this.datepipe.transform(res.date_start, 'yyyy-MM-dd'),\r\n        date_finish: this.datepipe.transform(res.date_finish, 'yyyy-MM-dd'),\r\n      });\r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \".modal {\\r\\n  width: 400px;\\r\\n  height: auto;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"modal\\\">\\r\\n  <mat-grid-list cols=\\\"1\\\" rowHeight=\\\"60px\\\">\\r\\n    <form class=\\\"form\\\" #formControl=\\\"ngForm\\\" [formGroup]=\\\"form\\\">\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <input matInput\\r\\n                 type=\\\"text\\\"\\r\\n                 formControlName=\\\"name\\\"\\r\\n                 placeholder=\\\"Name of Object\\\">\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <input matInput\\r\\n                 type=\\\"text\\\"\\r\\n                 formControlName=\\\"street\\\"\\r\\n                 placeholder=\\\"Streey\\\">\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <mat-label>Category</mat-label>\\r\\n          <mat-select (selectionChange)=\\\"selectedAuto($event.value)\\\" formControlName=\\\"autoCategory\\\">\\r\\n            <mat-option *ngFor=\\\"let item of category\\\" [value]=\\\"item.id\\\">\\r\\n              {{item.name}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <button mat-button\\r\\n                color=\\\"primary\\\"\\r\\n                [disabled]=\\\"!formControl.valid\\\"\\r\\n                [mat-dialog-close]=\\\"1\\\"\\r\\n                (click)=\\\"stopEdit()\\\">\\r\\n          Save\\r\\n        </button>\\r\\n        <button mat-button\\r\\n                color=\\\"warn\\\"\\r\\n                (click)=\\\"onNoClick()\\\"\\r\\n                tabindex=\\\"-1\\\">\\r\\n          Cancel\\r\\n        </button>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n    </form>\\r\\n  </mat-grid-list>\\r\\n</div>\\r\\n\"","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\r\nimport {DialogService} from \"../../../services/dialog.service\";\r\nimport {HardRouteService} from \"../../../services/hard-route.service\";\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material\";\r\nimport {AutoInfrastruct} from \"../../../model/AutoInfrastruct\";\r\nimport {AutoCategory} from \"../../../model/AutoCategory\";\r\nimport {CategoryService} from \"../../../services/category.service\";\r\nimport {InfrastructService} from \"../../../services/infrastruct.service\";\r\n\r\n@Component({\r\n  selector: 'app-edit-infrastruct',\r\n  templateUrl: './edit-infrastruct.component.html',\r\n  styleUrls: ['./edit-infrastruct.component.css']\r\n})\r\nexport class EditInfrastructComponent implements OnInit {\r\n\r\n  form: FormGroup;\r\n  currentRow: AutoInfrastruct;\r\n  category: AutoCategory[];\r\n  selectCategory: AutoCategory;\r\n\r\n  constructor(private _dialog: DialogService,\r\n              private _category: CategoryService,\r\n              private _infrastruct: InfrastructService,\r\n              private formBuilder: FormBuilder,\r\n              private dialogRef: MatDialogRef<EditInfrastructComponent>,\r\n              @Inject(MAT_DIALOG_DATA) private data: any) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.form = this.formBuilder.group({\r\n      id: null,\r\n      name: [null, Validators.required],\r\n      street: [null, Validators.required],\r\n      autoCategory: [{\r\n        id: null,\r\n        name: null,\r\n      }, Validators.required],\r\n    });\r\n\r\n    this.getSingle();\r\n\r\n    this._category.getAll().subscribe(res => {\r\n      this.category = res;\r\n      if(this.category) {\r\n        this.selectCategory = this.category.find(r => r.id == this.currentRow.autoCategory.id);\r\n        this.form.patchValue({\r\n          autoCategory: this.selectCategory.id,\r\n        })\r\n      }\r\n    });\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  stopEdit(): void {\r\n    this.form.patchValue({\r\n      autoCategory: this.selectCategory,\r\n    });\r\n    this.form.value.id = this.data.id;\r\n    this._dialog.dialogUpdate(this.form.value);\r\n  }\r\n\r\n  selectedAuto(event) {\r\n    this._category.getSingle(event).subscribe(res => {\r\n      this.selectCategory = res;\r\n      this.form.patchValue({\r\n        autoCategory: res.id\r\n      });\r\n    });\r\n  }\r\n\r\n  getSingle() {\r\n    this._infrastruct.getSingle(this.data.id).subscribe((res: AutoInfrastruct) => {\r\n      this.currentRow = res;\r\n      this.form.patchValue({\r\n        name: res.name,\r\n        street: res.street,\r\n      });\r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"modal\\\">\\r\\n  <form class=\\\"form\\\" (ngSubmit)=\\\"submit\\\" #formControl=\\\"ngForm\\\" [formGroup]=\\\"form\\\">\\r\\n    <div class=\\\"form\\\">\\r\\n      <mat-form-field class=\\\"example-full-width\\\">\\r\\n        <input matInput\\r\\n               formControlName=\\\"name\\\"\\r\\n               placeholder=\\\"Name\\\">\\r\\n      </mat-form-field>\\r\\n\\r\\n      <div class=\\\"button\\\">\\r\\n        <button mat-button color=\\\"primary\\\" [type]=\\\"submit\\\" [disabled]=\\\"!formControl.valid\\\" [mat-dialog-close]=\\\"1\\\" (click)=\\\"stopEdit()\\\">Save</button>\\r\\n        <button mat-button color=\\\"warn\\\" (click)=\\\"onNoClick()\\\" tabindex=\\\"-1\\\">Cancel</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n</div>\\r\\n\\r\\n\"","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\r\nimport {AutoDrivers} from \"../../../model/AutoDrivers\";\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material\";\r\nimport {DialogService} from \"../../../services/dialog.service\";\r\nimport {AutoMarka} from \"../../../model/AutoMarka\";\r\nimport {MarkaService} from \"../../../services/marka.service\";\r\n\r\n@Component({\r\n  selector: 'app-edit-marka',\r\n  templateUrl: './edit-marka.component.html',\r\n  styleUrls: ['./edit-marka.component.css']\r\n})\r\nexport class EditMarkaComponent implements OnInit {\r\n  form: FormGroup;\r\n  current: AutoMarka;\r\n\r\n  constructor(private dialogRef: MatDialogRef<EditMarkaComponent>,\r\n              @Inject(MAT_DIALOG_DATA) private data: any,\r\n              private _dialog: DialogService,\r\n              private _marka: MarkaService,\r\n              private formBuilder: FormBuilder,) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.form = this.formBuilder.group({\r\n      id: null,\r\n      name: ['', Validators.required],\r\n    });\r\n\r\n    this.getSingle();\r\n\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  stopEdit(): void {\r\n    this.form.value.id = this.data.id;\r\n    this._dialog.dialogUpdate(this.form.value);\r\n  }\r\n\r\n  getSingle() {\r\n    this._marka.getSingle(this.data.id).subscribe((res: AutoDrivers) => {\r\n      this.form.patchValue({\r\n        name: res.name,\r\n      });\r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \".modal {\\r\\n  width: 400px;\\r\\n  height: auto;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"modal\\\">\\r\\n  <mat-grid-list cols=\\\"1\\\" rowHeight=\\\"60px\\\">\\r\\n    <form class=\\\"form\\\" #formControl=\\\"ngForm\\\" [formGroup]=\\\"form\\\">\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <input matInput\\r\\n                 type=\\\"text\\\"\\r\\n                 formControlName=\\\"name\\\"\\r\\n                 placeholder=\\\"Name\\\">\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <input matInput\\r\\n                 type=\\\"text\\\"\\r\\n                 formControlName=\\\"surname\\\"\\r\\n                 placeholder=\\\"Surname\\\">\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <mat-label>Category</mat-label>\\r\\n          <mat-select (selectionChange)=\\\"selectedAuto($event.value)\\\" formControlName=\\\"autoCategoryPersonal\\\">\\r\\n            <mat-option *ngFor=\\\"let item of category\\\" [value]=\\\"item.id\\\">\\r\\n              {{item.name}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <button mat-button\\r\\n                color=\\\"primary\\\"\\r\\n                [disabled]=\\\"!formControl.valid\\\"\\r\\n                [mat-dialog-close]=\\\"1\\\"\\r\\n                (click)=\\\"stopEdit()\\\">\\r\\n          Save\\r\\n        </button>\\r\\n        <button mat-button\\r\\n                color=\\\"warn\\\"\\r\\n                (click)=\\\"onNoClick()\\\"\\r\\n                tabindex=\\\"-1\\\">\\r\\n          Cancel\\r\\n        </button>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n    </form>\\r\\n  </mat-grid-list>\\r\\n</div>\\r\\n\"","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\r\nimport {DialogService} from \"../../../services/dialog.service\";\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material\";\r\nimport {AutoPersonal} from \"../../../model/AutoPersonal\";\r\nimport {AutoCategoryPersonal} from \"../../../model/AutoCategoryPersonal\";\r\nimport {CategoryPersonalService} from \"../../../services/category-personal.service\";\r\nimport {PersonalService} from \"../../../services/personal.service\";\r\n\r\n@Component({\r\n  selector: 'app-edit-personal',\r\n  templateUrl: './edit-personal.component.html',\r\n  styleUrls: ['./edit-personal.component.css']\r\n})\r\nexport class EditPersonalComponent implements OnInit {\r\n\r\n  form: FormGroup;\r\n  currentRow: AutoPersonal;\r\n  category: AutoCategoryPersonal[];\r\n  selectCategory: AutoCategoryPersonal;\r\n\r\n  constructor(private _dialog: DialogService,\r\n              private _category: CategoryPersonalService,\r\n              private _personal: PersonalService,\r\n              private formBuilder: FormBuilder,\r\n              private dialogRef: MatDialogRef<EditPersonalComponent>,\r\n              @Inject(MAT_DIALOG_DATA) private data: any) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.form = this.formBuilder.group({\r\n      id: null,\r\n      name: [null, Validators.required],\r\n      surname: [null, Validators.required],\r\n      autoCategoryPersonal: [{\r\n        id: null,\r\n        name: null,\r\n      }, Validators.required],\r\n    });\r\n\r\n    this.getSingle();\r\n\r\n    this._category.getAll().subscribe(res => {\r\n      this.category = res;\r\n      if(this.category) {\r\n        this.selectCategory = this.category.find(r => r.id == this.currentRow.autoCategoryPersonal.id);\r\n        this.form.patchValue({\r\n          autoCategoryPersonal: this.selectCategory.id,\r\n        })\r\n      }\r\n    });\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  stopEdit(): void {\r\n    this.form.patchValue({\r\n      autoCategoryPersonal: this.selectCategory,\r\n    });\r\n    this.form.value.id = this.data.id;\r\n    this._dialog.dialogUpdate(this.form.value);\r\n  }\r\n\r\n  selectedAuto(event) {\r\n    this._category.getSingle(event).subscribe(res => {\r\n      this.selectCategory = res;\r\n      this.form.patchValue({\r\n        autoCategoryPersonal: res.id\r\n      });\r\n    });\r\n  }\r\n\r\n  getSingle() {\r\n    this._personal.getSingle(this.data.id).subscribe((res: AutoPersonal) => {\r\n      this.currentRow = res;\r\n      this.form.patchValue({\r\n        name: res.name,\r\n        surname: res.surname,\r\n      });\r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \".modal {\\r\\n  width: 400px;\\r\\n  height: auto;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"modal\\\">\\r\\n  <mat-grid-list cols=\\\"1\\\" rowHeight=\\\"60px\\\">\\r\\n    <form class=\\\"form\\\" #formControl=\\\"ngForm\\\" [formGroup]=\\\"form\\\">\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <input matInput\\r\\n                 type=\\\"text\\\"\\r\\n                 formControlName=\\\"name\\\"\\r\\n                 placeholder=\\\"Name\\\">\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <button mat-button\\r\\n                color=\\\"primary\\\"\\r\\n                [disabled]=\\\"!formControl.valid\\\"\\r\\n                [mat-dialog-close]=\\\"1\\\"\\r\\n                (click)=\\\"stopEdit()\\\">\\r\\n          Save\\r\\n        </button>\\r\\n        <button mat-button\\r\\n                color=\\\"warn\\\"\\r\\n                (click)=\\\"onNoClick()\\\"\\r\\n                tabindex=\\\"-1\\\">\\r\\n          Cancel\\r\\n        </button>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n    </form>\\r\\n  </mat-grid-list>\\r\\n</div>\\r\\n\"","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\r\nimport {AutoPersonal} from \"../../../model/AutoPersonal\";\r\nimport {DialogService} from \"../../../services/dialog.service\";\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material\";\r\nimport {AutoProblem} from \"../../../model/AutoProblem\";\r\nimport {ProblemService} from \"../../../services/problem.service\";\r\n\r\n@Component({\r\n  selector: 'app-edit-problem',\r\n  templateUrl: './edit-problem.component.html',\r\n  styleUrls: ['./edit-problem.component.css']\r\n})\r\nexport class EditProblemComponent implements OnInit {\r\n\r\n  form: FormGroup;\r\n  currentRow: AutoProblem;\r\n\r\n  constructor(private _dialog: DialogService,\r\n              private _problem: ProblemService,\r\n              private formBuilder: FormBuilder,\r\n              private dialogRef: MatDialogRef<EditProblemComponent>,\r\n              @Inject(MAT_DIALOG_DATA) private data: any) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.form = this.formBuilder.group({\r\n      id: null,\r\n      name: [null, Validators.required],\r\n    });\r\n\r\n    this.getSingle();\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  stopEdit(): void {\r\n    this.form.value.id = this.data.id;\r\n    this._dialog.dialogUpdate(this.form.value);\r\n  }\r\n\r\n  getSingle() {\r\n    this._problem.getSingle(this.data.id).subscribe((res: AutoProblem) => {\r\n      this.currentRow = res;\r\n      this.form.patchValue({\r\n        name: res.name,\r\n      });\r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \".modal {\\r\\n  width: 400px;\\r\\n  height: auto;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"modal\\\">\\r\\n  <mat-grid-list cols=\\\"1\\\" rowHeight=\\\"60px\\\">\\r\\n    <form class=\\\"form\\\" #formControl=\\\"ngForm\\\" [formGroup]=\\\"form\\\">\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <mat-label>Problem</mat-label>\\r\\n          <mat-select (selectionChange)=\\\"selectedProblem($event.value)\\\" formControlName=\\\"autoProblem\\\">\\r\\n            <mat-option *ngFor=\\\"let item of problem\\\" [value]=\\\"item.id\\\">\\r\\n              {{item.name}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <mat-label>Auto</mat-label>\\r\\n          <mat-select (selectionChange)=\\\"selectedAuto($event.value)\\\" formControlName=\\\"auto\\\">\\r\\n            <mat-option *ngFor=\\\"let item of auto\\\" [value]=\\\"item.id\\\">\\r\\n              {{item.autoCategory.name}} - {{item.autoMarka.name}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Choose a date\\\" formControlName=\\\"date\\\">\\r\\n          <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n          <mat-datepicker #picker></mat-datepicker>\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <mat-label>Personal</mat-label>\\r\\n          <mat-select (selectionChange)=\\\"selectedPersonal($event.value)\\\" formControlName=\\\"autoPersonal\\\">\\r\\n            <mat-option *ngFor=\\\"let item of personal\\\" [value]=\\\"item.id\\\">\\r\\n              {{item.name}} {{item.surname}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <input matInput\\r\\n                 type=\\\"number\\\"\\r\\n                 formControlName=\\\"price\\\"\\r\\n                 placeholder=\\\"Price\\\">\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <button mat-button\\r\\n                color=\\\"primary\\\"\\r\\n                [disabled]=\\\"!formControl.valid\\\"\\r\\n                [mat-dialog-close]=\\\"1\\\"\\r\\n                (click)=\\\"stopEdit()\\\">\\r\\n          Save\\r\\n        </button>\\r\\n        <button mat-button\\r\\n                color=\\\"warn\\\"\\r\\n                (click)=\\\"onNoClick()\\\"\\r\\n                tabindex=\\\"-1\\\">\\r\\n          Cancel\\r\\n        </button>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n    </form>\\r\\n  </mat-grid-list>\\r\\n</div>\\r\\n\"","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\r\nimport {Auto} from \"../../../model/Auto\";\r\nimport {DialogService} from \"../../../services/dialog.service\";\r\nimport {AutoService} from \"../../../services/auto.service\";\r\nimport {DatePipe} from \"@angular/common\";\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material\";\r\nimport {AutoRepair} from \"../../../model/AutoRepair\";\r\nimport {AutoPersonal} from \"../../../model/AutoPersonal\";\r\nimport {AutoProblem} from \"../../../model/AutoProblem\";\r\nimport {PersonalService} from \"../../../services/personal.service\";\r\nimport {ProblemService} from \"../../../services/problem.service\";\r\nimport {RepairService} from \"../../../services/repair.service\";\r\n\r\n@Component({\r\n  selector: 'app-edit-repair',\r\n  templateUrl: './edit-repair.component.html',\r\n  styleUrls: ['./edit-repair.component.css']\r\n})\r\nexport class EditRepairComponent implements OnInit {\r\n\r\n  form: FormGroup;\r\n  rows: AutoRepair;\r\n  currentRow: AutoRepair;\r\n\r\n\r\n  auto: Auto[];\r\n  selectAuto: Auto;\r\n\r\n  personal: AutoPersonal[];\r\n  selectPersonal: AutoPersonal;\r\n\r\n  problem: AutoProblem[];\r\n  selectProblem: AutoProblem;\r\n\r\n  constructor(private _dialog: DialogService,\r\n              private _auto: AutoService,\r\n              private _personal: PersonalService,\r\n              private _problem: ProblemService,\r\n              private _repair: RepairService,\r\n              private formBuilder: FormBuilder,\r\n              private datepipe: DatePipe,\r\n              private dialogRef: MatDialogRef<EditRepairComponent>,\r\n              @Inject(MAT_DIALOG_DATA) private data: any) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.form = this.formBuilder.group({\r\n      id: null,\r\n      autoProblem: [{\r\n        id: null,\r\n        name: null,\r\n      }, Validators.required],\r\n      auto: [{\r\n        id: null,\r\n        autoCategory: {\r\n          id: null,\r\n          name: null,\r\n        },\r\n        autoMarka: {\r\n          id: null,\r\n          name: null,\r\n        }\r\n      }, Validators.required],\r\n      date: null,\r\n      autoPersonal: [{\r\n        id: null,\r\n        name: null,\r\n        surname: null,\r\n        autoCategoryPersonal: {\r\n          id: null,\r\n          name: null,\r\n        }\r\n      }, Validators.required],\r\n      price: null,\r\n    });\r\n\r\n    this.getSingle();\r\n\r\n    this._auto.getAll().subscribe(res => {\r\n      this.auto = res;\r\n      if (this.auto) {\r\n        this.selectAuto = this.auto.find(r => r.id == this.currentRow.auto.id);\r\n        this.form.patchValue({\r\n          auto: this.selectAuto.id,\r\n        })\r\n      }\r\n    });\r\n\r\n    this._personal.getAll().subscribe(res => {\r\n      this.personal = res;\r\n      if (this.personal) {\r\n        this.selectPersonal = this.personal.find(r => r.id == this.currentRow.autoPersonal.id);\r\n        this.form.patchValue({\r\n          autoPersonal: this.selectPersonal.id,\r\n        })\r\n      }\r\n    });\r\n\r\n    this._problem.getAll().subscribe(res => {\r\n      this.problem = res;\r\n      if (this.problem) {\r\n        this.selectProblem = this.problem.find(r => r.id == this.currentRow.autoProblem.id);\r\n        this.form.patchValue({\r\n          autoProblem: this.selectProblem.id,\r\n        })\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  stopEdit(): void {\r\n    this.form.patchValue({\r\n      auto: this.selectAuto,\r\n      autoPersonal: this.selectPersonal,\r\n      autoProblem: this.selectProblem,\r\n    });\r\n    this.form.value.id = this.data.id;\r\n    this._dialog.dialogUpdate(this.form.value);\r\n  }\r\n\r\n  getSingle() {\r\n    this._repair.getSingle(this.data.id).subscribe((res: AutoRepair) => {\r\n      this.currentRow = res;\r\n      this.form.patchValue({\r\n        date: this.datepipe.transform(res.date, 'yyyy-MM-dd'),\r\n        price: res.price,\r\n      });\r\n    });\r\n  }\r\n\r\n  selectedAuto(event) {\r\n    this._auto.getSingle(event).subscribe(res => {\r\n      this.selectAuto = res;\r\n      this.form.patchValue({\r\n        auto: res.id\r\n      });\r\n    });\r\n  }\r\n\r\n  selectedPersonal(event) {\r\n    this._personal.getSingle(event).subscribe(res => {\r\n      this.selectPersonal = res;\r\n      this.form.patchValue({\r\n        autoPersonal: res.id\r\n      });\r\n    });\r\n  }\r\n\r\n  selectedProblem(event) {\r\n    this._problem.getSingle(event).subscribe(res => {\r\n      this.selectProblem = res;\r\n      this.form.patchValue({\r\n        autoProblem: res.id\r\n      });\r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<p>\\r\\n  edit-route works!\\r\\n</p>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-edit-route',\r\n  templateUrl: './edit-route.component.html',\r\n  styleUrls: ['./edit-route.component.css']\r\n})\r\nexport class EditRouteComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \".modal {\\r\\n  width: 400px;\\r\\n  height: auto;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"modal\\\">\\r\\n  <mat-grid-list cols=\\\"1\\\" rowHeight=\\\"60px\\\">\\r\\n    <form class=\\\"form\\\" #formControl=\\\"ngForm\\\" [formGroup]=\\\"form\\\">\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <mat-label>Auto</mat-label>\\r\\n          <mat-select (selectionChange)=\\\"selectedAuto($event.value)\\\" formControlName=\\\"auto\\\">\\r\\n            <mat-option *ngFor=\\\"let item of auto\\\" [value]=\\\"item.id\\\">\\r\\n              {{item.autoCategory.name}} - {{item.autoMarka.name}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Choose a date\\\" formControlName=\\\"date\\\">\\r\\n          <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n          <mat-datepicker #picker></mat-datepicker>\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <input matInput\\r\\n                 type=\\\"number\\\"\\r\\n                 formControlName=\\\"price\\\"\\r\\n                 placeholder=\\\"Price\\\">\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-slide-toggle (toggleChange)=\\\"toggleButton()\\\" formControlName=\\\"sale_buy\\\">\\r\\n          <mat-label>{{toggle ? 'Buy' : 'Sale'}}</mat-label>\\r\\n        </mat-slide-toggle>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <button mat-button\\r\\n                color=\\\"primary\\\"\\r\\n                [disabled]=\\\"!formControl.valid\\\"\\r\\n                [mat-dialog-close]=\\\"1\\\"\\r\\n                (click)=\\\"stopEdit()\\\">\\r\\n          Save\\r\\n        </button>\\r\\n        <button mat-button\\r\\n                color=\\\"warn\\\"\\r\\n                (click)=\\\"onNoClick()\\\"\\r\\n                tabindex=\\\"-1\\\">\\r\\n          Cancel\\r\\n        </button>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n    </form>\\r\\n  </mat-grid-list>\\r\\n</div>\\r\\n\"","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\r\nimport {Auto} from \"../../../model/Auto\";\r\nimport {DialogService} from \"../../../services/dialog.service\";\r\nimport {AutoService} from \"../../../services/auto.service\";\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material\";\r\nimport {AutoSaleBuy} from \"../../../model/AutoSaleBuy\";\r\nimport {SaleBuyService} from \"../../../services/sale-buy.service\";\r\nimport {DatePipe} from \"@angular/common\";\r\n\r\n@Component({\r\n  selector: 'app-edit-sale-buy',\r\n  templateUrl: './edit-sale-buy.component.html',\r\n  styleUrls: ['./edit-sale-buy.component.css']\r\n})\r\nexport class EditSaleBuyComponent implements OnInit {\r\n\r\n  form: FormGroup;\r\n  rows: AutoSaleBuy;\r\n  currentRow: AutoSaleBuy;\r\n  auto: Auto[];\r\n  selectAuto: Auto;\r\n\r\n  toggle: boolean;\r\n\r\n  constructor(private _dialog: DialogService,\r\n              private _auto: AutoService,\r\n              private _saleBuy: SaleBuyService,\r\n              private formBuilder: FormBuilder,\r\n              private datepipe: DatePipe,\r\n              private dialogRef: MatDialogRef<EditSaleBuyComponent>,\r\n              @Inject(MAT_DIALOG_DATA) private data: any) { }\r\n\r\n  ngOnInit() {\r\n    this.form = this.formBuilder.group({\r\n      id: null,\r\n      auto: [{\r\n        id: null,\r\n        autoCategory: {\r\n          id: null,\r\n          name: null,\r\n        },\r\n        autoMarka: {\r\n          id: null,\r\n          name: null,\r\n        }\r\n      }, Validators.required],\r\n      date: null,\r\n      sale_buy: null,\r\n      price: null,\r\n    });\r\n\r\n    this.getSingle();\r\n\r\n    this._auto.getAll().subscribe(res => {\r\n      this.auto = res;\r\n      if(this.auto) {\r\n        this.selectAuto = this.auto.find(r => r.id == this.currentRow.auto.id);\r\n        this.form.patchValue({\r\n          auto: this.selectAuto.id,\r\n        })\r\n      }\r\n    });\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  stopEdit(): void {\r\n    this.form.patchValue({\r\n      auto: this.selectAuto,\r\n    });\r\n    this.form.value.id = this.data.id;\r\n    this._dialog.dialogUpdate(this.form.value);\r\n  }\r\n\r\n  selectedAuto(event) {\r\n    this._auto.getSingle(event).subscribe(res => {\r\n      this.selectAuto = res;\r\n      this.form.patchValue({\r\n        auto: res.id\r\n      });\r\n    });\r\n  }\r\n\r\n  getSingle() {\r\n    this._saleBuy.getSingle(this.data.id).subscribe((res: AutoSaleBuy) => {\r\n      this.currentRow = res;\r\n      this.form.patchValue({\r\n        date: this.datepipe.transform(res.date, 'yyyy-MM-dd'),\r\n        sale_buy: res.sale_buy,\r\n        price: res.price,\r\n      });\r\n      this.toggle = this.form.getRawValue().sale_buy;\r\n    });\r\n  }\r\n\r\n  toggleButton() {\r\n    this.toggle = !this.toggle;\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<p>\\r\\n  edit-street works!\\r\\n</p>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-edit-street',\r\n  templateUrl: './edit-street.component.html',\r\n  styleUrls: ['./edit-street.component.css']\r\n})\r\nexport class EditStreetComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \".container {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  min-width: 450px;\\r\\n}\\r\\n\\r\\n.container > * {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.form {\\r\\n  display: flex;\\r\\n  padding-top: 6px;\\r\\n}\\r\\n\\r\\n.mat-form-field {\\r\\n  font-size: 16px;\\r\\n  flex-grow: 1;\\r\\n}\\r\\n\"","module.exports = \"<form class=\\\"user-form\\\" (ngSubmit)=\\\"submit\\\" #formControl=\\\"ngForm\\\">\\r\\n  <div class=\\\"form\\\">\\r\\n    <mat-form-field class=\\\"example-full-width\\\">\\r\\n      <input matInput\\r\\n             [(ngModel)]=\\\"user.email\\\"\\r\\n             name=\\\"email\\\"\\r\\n             placeholder=\\\"Email\\\"\\r\\n             [value]=\\\"currentUser?.email\\\"\\r\\n             [formControl]=\\\"emailFormControl\\\">\\r\\n    </mat-form-field>\\r\\n\\r\\n    <mat-form-field class=\\\"example-full-width\\\">\\r\\n      <input matInput\\r\\n             [(ngModel)]=\\\"user.password\\\"\\r\\n             name=\\\"pass\\\"\\r\\n             placeholder=\\\"Password\\\"\\r\\n             [value]=\\\"currentUser?.password\\\">\\r\\n    </mat-form-field>\\r\\n\\r\\n    <div class=\\\"button\\\">\\r\\n      <button mat-button [type]=\\\"submit\\\" [disabled]=\\\"!formControl.valid\\\" [mat-dialog-close]=\\\"1\\\" (click)=\\\"stopEdit()\\\">Save</button>\\r\\n      <button mat-button (click)=\\\"onNoClick()\\\" tabindex=\\\"-1\\\">Cancel</button>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\"","import {Component, EventEmitter, Inject, OnInit, Output} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material\";\r\nimport {User} from \"../../../model/User\";\r\nimport {UserService} from \"../../../services/user.service\";\r\nimport {FormControl, Validators} from \"@angular/forms\";\r\nimport {ToastrService} from \"ngx-toastr\";\r\nimport {DialogService} from \"../../../services/dialog.service\";\r\n\r\n@Component({\r\n  selector: 'app-edit-user',\r\n  templateUrl: './edit-user.component.html',\r\n  styleUrls: ['./edit-user.component.css']\r\n})\r\nexport class EditUserComponent implements OnInit {\r\n\r\n  currentUser: User;\r\n  errorUser: Boolean = false;\r\n\r\n  user = {\r\n    id: '',\r\n    email: '',\r\n    password: ''\r\n  };\r\n\r\n  emailFormControl = new FormControl('', [\r\n    Validators.required,\r\n    Validators.email,\r\n  ]);\r\n\r\n\r\n  constructor(private dialogRef: MatDialogRef<EditUserComponent>,\r\n              @Inject(MAT_DIALOG_DATA) private data: any,\r\n              private _user: UserService,\r\n              private _dialog: DialogService) { }\r\n\r\n  ngOnInit() {\r\n    this.getSingle();\r\n  }\r\n\r\n  getSingle() {\r\n    this._user.getSingle(this.data.id).subscribe((res: User) => {\r\n      this.currentUser = res;\r\n      this.user.email = this.currentUser.email;\r\n      this.user.password = this.currentUser.password;\r\n    });\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  stopEdit(): void {\r\n    this.user.id = this.data.id;\r\n    this._dialog.dialogUpdate(this.user);\r\n  }\r\n}\r\n","import {Auto} from \"./Auto\";\r\nimport {AutoStreet} from \"./AutoStreet\";\r\n\r\nexport class AutoRoute {\r\n  id: number;\r\n  autoStreet: AutoStreet;\r\n  auto: Auto;\r\n  passanger_count: number;\r\n\r\n  constructor() {\r\n    this.id = null;\r\n    this.autoStreet = null;\r\n    this.auto = null;\r\n    this.passanger_count= null;\r\n  }\r\n}\r\n","export class AutoStreet {\r\n  id: number;\r\n  street_start: string;\r\n  street_finish: string;\r\n  intervall: number;\r\n\r\n\r\n  constructor() {\r\n    this.id = null;\r\n    this.street_start = '';\r\n    this.street_finish = '';\r\n    this.intervall = null;\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<table mat-table #table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">\\r\\n\\r\\n  <!-- Position Column -->\\r\\n  <ng-container *ngFor=\\\"let item of displayedColumns; let last = last\\\" [matColumnDef]=\\\"item\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef>{{item}}</th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.id}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!--&lt;!&ndash; StreetStart Column &ndash;&gt;-->\\r\\n  <!--<ng-container matColumnDef=\\\"street_start\\\">-->\\r\\n    <!--<th mat-header-cell *matHeaderCellDef> StreetStart </th>-->\\r\\n    <!--<td mat-cell *matCellDef=\\\"let element\\\"> {{element.street_start}} </td>-->\\r\\n  <!--</ng-container>-->\\r\\n\\r\\n  <!--&lt;!&ndash; StreetFinish Column &ndash;&gt;-->\\r\\n  <!--<ng-container matColumnDef=\\\"street_finish\\\">-->\\r\\n    <!--<th mat-header-cell *matHeaderCellDef> StreetFinish </th>-->\\r\\n    <!--<td mat-cell *matCellDef=\\\"let element\\\"> {{element.street_finish}} </td>-->\\r\\n  <!--</ng-container>-->\\r\\n\\r\\n  <!--&lt;!&ndash; Intervall Column &ndash;&gt;-->\\r\\n  <!--<ng-container matColumnDef=\\\"intervall\\\">-->\\r\\n    <!--<th mat-header-cell *matHeaderCellDef> Intervall </th>-->\\r\\n    <!--<td mat-cell *matCellDef=\\\"let element\\\"> {{element.intervall}} </td>-->\\r\\n  <!--</ng-container>-->\\r\\n\\r\\n  <!-- actions -->\\r\\n  <div class=\\\"actions\\\">\\r\\n    <ng-container matColumnDef=\\\"actions\\\">\\r\\n      <mat-header-cell *matHeaderCellDef>\\r\\n        <button mat-icon-button color=\\\"primary\\\" (click)=\\\"addNew()\\\">\\r\\n          <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">add</mat-icon>\\r\\n        </button>\\r\\n      </mat-header-cell>\\r\\n\\r\\n      <mat-cell *matCellDef=\\\"let row; let i=index;\\\">\\r\\n        <button mat-icon-button color=\\\"primary\\\" (click)=\\\"startEdit(row.id)\\\">\\r\\n          <mat-icon aria-label=\\\"Edit\\\">edit</mat-icon>\\r\\n        </button>\\r\\n\\r\\n        <button mat-icon-button color=\\\"warn\\\" (click)=\\\"deleteItem(row.id)\\\">\\r\\n          <mat-icon aria-label=\\\"Delete\\\">delete</mat-icon>\\r\\n        </button>\\r\\n      </mat-cell>\\r\\n    </ng-container>\\r\\n  </div>\\r\\n\\r\\n\\r\\n  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n</table>\\r\\n\\r\\n<mat-paginator #paginator\\r\\n               [length]=\\\"dataSource.filteredData.length\\\"\\r\\n               [pageIndex]=\\\"0\\\"\\r\\n               [pageSize]=\\\"10\\\"\\r\\n               [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\">\\r\\n</mat-paginator>\\r\\n\"","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {ApiServiceService} from \"../../services/api-service.service\";\r\nimport {MatPaginator, MatSort, MatTableDataSource} from \"@angular/material\";\r\n\r\n@Component({\r\n  selector: 'app-api-table',\r\n  templateUrl: './api-table.component.html',\r\n  styleUrls: ['./api-table.component.css']\r\n})\r\nexport class ApiTableComponent implements OnInit {\r\n  displayedColumns: string[];\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  dataSource = new MatTableDataSource<any>();\r\n\r\n  constructor(private api: ApiServiceService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.api.getAll().subscribe(res => {\r\n      this.displayedColumns = Object.keys(res[0]);\r\n      this.displayedColumns.push('actions');\r\n      this.dataSource.data = res;\r\n\r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<table mat-table #table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">\\r\\n  <!-- Position Column -->\\r\\n  <ng-container matColumnDef=\\\"id\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> No. </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.id}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Name Column -->\\r\\n  <ng-container matColumnDef=\\\"Category\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Category </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.autoCategory.name}}</td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Weight Column -->\\r\\n  <ng-container matColumnDef=\\\"Marka\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Marka </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.autoMarka.name}}</td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- actions -->\\r\\n  <div class=\\\"actions\\\">\\r\\n    <ng-container matColumnDef=\\\"actions\\\">\\r\\n      <mat-header-cell *matHeaderCellDef>\\r\\n        <button mat-icon-button color=\\\"primary\\\" (click)=\\\"addNew()\\\">\\r\\n          <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">add</mat-icon>\\r\\n        </button>\\r\\n      </mat-header-cell>\\r\\n\\r\\n      <mat-cell *matCellDef=\\\"let row; let i=index;\\\">\\r\\n        <button mat-icon-button color=\\\"primary\\\" (click)=\\\"startEdit(row.id)\\\">\\r\\n          <mat-icon aria-label=\\\"Edit\\\">edit</mat-icon>\\r\\n        </button>\\r\\n\\r\\n        <button mat-icon-button color=\\\"warn\\\" (click)=\\\"deleteItem(row.id)\\\">\\r\\n          <mat-icon aria-label=\\\"Delete\\\">delete</mat-icon>\\r\\n        </button>\\r\\n      </mat-cell>\\r\\n    </ng-container>\\r\\n  </div>\\r\\n\\r\\n\\r\\n  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n  <!--<tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" (click)=\\\"tableClick(row.id)\\\"></tr>-->\\r\\n</table>\\r\\n\"","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {MatDialog, MatPaginator, MatSort, MatTableDataSource} from \"@angular/material\";\r\nimport {DialogService} from \"../../services/dialog.service\";\r\nimport {Router} from \"@angular/router\";\r\nimport {ToastrService} from \"ngx-toastr\";\r\nimport {Auto} from \"../../model/Auto\";\r\nimport {AutoService} from \"../../services/auto.service\";\r\nimport {AddAutoComponent} from \"../../dialogs/add/add-auto/add-auto.component\";\r\nimport {EditAutoComponent} from \"../../dialogs/edit/edit-auto/edit-auto.component\";\r\n\r\n@Component({\r\n  selector: 'app-auto',\r\n  templateUrl: './auto.component.html',\r\n  styleUrls: ['./auto.component.css']\r\n})\r\nexport class AutoComponent implements OnInit {\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  displayedColumns: string[] = ['id', 'Category', 'Marka', 'actions'];\r\n  dataSource = new MatTableDataSource<Auto>();\r\n\r\n  constructor(private _auto: AutoService,\r\n              private _dialog: DialogService,\r\n              private router: Router,\r\n              private toastr: ToastrService,\r\n              private dialog: MatDialog) { }\r\n\r\n  ngOnInit() {\r\n    this.getAll();\r\n\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  getAll() {\r\n    this._auto.getAll().subscribe((res: Auto[]) => {\r\n      this.dataSource.data = res;\r\n    });\r\n  }\r\n\r\n  addNew() {\r\n    const dialogRef = this.dialog.open(AddAutoComponent);\r\n\r\n    dialogRef.afterClosed().subscribe(res => {\r\n      if(res === 1) {\r\n        this._auto.add(this._dialog.dialogData).subscribe(\r\n          (res: Auto) => {\r\n            this.dataSource.data.push(res);\r\n            this.dataSource = new MatTableDataSource<Auto>(this.dataSource.data);\r\n            this.toastr.success('Data saved', 'Success');\r\n          },\r\n          (error) => {\r\n            this.toastr.error('Data do not saved', 'Error');\r\n          })\r\n      }\r\n    })\r\n  }\r\n\r\n  startEdit(id) {\r\n    const dialogRef = this.dialog.open(EditAutoComponent, {\r\n      data: {id: id}\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(res => {\r\n      if(res === 1) {\r\n        this._auto.update(this._dialog.dialogData.id, this._dialog.dialogData).subscribe((res: Auto) => {\r\n            this.toastr.success('Update success', 'Success');\r\n\r\n            const foundIndex = this.dataSource.data.findIndex(x => x.id === res.id);\r\n            this.dataSource.data[foundIndex] = res;\r\n\r\n            this.dataSource = new MatTableDataSource<Auto>(this.dataSource.data)\r\n\r\n          },\r\n          (error) => {this.toastr.error('Updating Error', 'Error')\r\n          });\r\n      }\r\n    })\r\n  }\r\n\r\n  deleteItem(id) {\r\n    this._auto.delete(id).subscribe(\r\n      (res) => {\r\n        this.dataSource.data = this.dataSource.data.filter(data => data.id !== id);\r\n        this.toastr.success('Delete success', 'Success');\r\n      },\r\n      (error) => {\r\n        this.toastr.error('Delete failed', 'Error');\r\n      }\r\n    )\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<table mat-table #table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">\\r\\n  <!-- Position Column -->\\r\\n  <ng-container matColumnDef=\\\"id\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> No. </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.id}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Name Column -->\\r\\n  <ng-container matColumnDef=\\\"Name\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Name </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- actions -->\\r\\n  <div class=\\\"actions\\\">\\r\\n    <ng-container matColumnDef=\\\"actions\\\">\\r\\n      <mat-header-cell *matHeaderCellDef>\\r\\n        <button mat-icon-button color=\\\"primary\\\" (click)=\\\"addNew()\\\">\\r\\n          <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">add</mat-icon>\\r\\n        </button>\\r\\n      </mat-header-cell>\\r\\n\\r\\n      <mat-cell *matCellDef=\\\"let row; let i=index;\\\">\\r\\n        <button mat-icon-button color=\\\"primary\\\" (click)=\\\"startEdit(row.id)\\\">\\r\\n          <mat-icon aria-label=\\\"Edit\\\">edit</mat-icon>\\r\\n        </button>\\r\\n\\r\\n        <button mat-icon-button color=\\\"warn\\\" (click)=\\\"deleteItem(row.id)\\\">\\r\\n          <mat-icon aria-label=\\\"Delete\\\">delete</mat-icon>\\r\\n        </button>\\r\\n      </mat-cell>\\r\\n    </ng-container>\\r\\n  </div>\\r\\n\\r\\n\\r\\n  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n</table>\\r\\n\\r\\n<mat-paginator #paginator\\r\\n               [length]=\\\"dataSource.filteredData.length\\\"\\r\\n               [pageIndex]=\\\"0\\\"\\r\\n               [pageSize]=\\\"10\\\"\\r\\n               [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\">\\r\\n</mat-paginator>\\r\\n\"","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {AutoBrigada} from \"../../model/AutoBrigada\";\r\nimport {MatDialog, MatPaginator, MatSort, MatTableDataSource} from \"@angular/material\";\r\nimport {DialogService} from \"../../services/dialog.service\";\r\nimport {Router} from \"@angular/router\";\r\nimport {ToastrService} from \"ngx-toastr\";\r\nimport {BrigadaService} from \"../../services/brigada.service\";\r\nimport {AddBrigadaComponent} from \"../../dialogs/add/add-brigada/add-brigada.component\";\r\nimport {EditBrigadaComponent} from \"../../dialogs/edit/edit-brigada/edit-brigada.component\";\r\n\r\n@Component({\r\n  selector: 'app-brigada',\r\n  templateUrl: './brigada.component.html',\r\n  styleUrls: ['./brigada.component.css']\r\n})\r\nexport class BrigadaComponent implements OnInit {\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  displayedColumns: string[] = ['id', 'Name', 'actions'];\r\n  dataSource = new MatTableDataSource<any>();\r\n\r\n  constructor(private _brigada: BrigadaService,\r\n              private _dialog: DialogService,\r\n              private router: Router,\r\n              private toastr: ToastrService,\r\n              private dialog: MatDialog) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getAll();\r\n\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  getAll() {\r\n    this._brigada.getAll().subscribe((res: AutoBrigada[]) => {\r\n      this.dataSource.data = res;\r\n    });\r\n  }\r\n\r\n  addNew() {\r\n    const dialogRef = this.dialog.open(AddBrigadaComponent);\r\n\r\n    dialogRef.afterClosed().subscribe(res => {\r\n      if(res === 1) {\r\n        this._brigada.add(this._dialog.dialogData).subscribe(\r\n          (res: AutoBrigada) => {\r\n            this.dataSource.data.push(res);\r\n            this.dataSource = new MatTableDataSource<AutoBrigada>(this.dataSource.data);\r\n            this.toastr.success('Data saved', 'Success');\r\n          },\r\n          (error) => {\r\n            this.toastr.error('Data do not saved', 'Error');\r\n          })\r\n      }\r\n    })\r\n  }\r\n\r\n  startEdit(id) {\r\n    const dialogRef = this.dialog.open(EditBrigadaComponent, {\r\n      data: {id: id}\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(res => {\r\n      if(res === 1) {\r\n        this._brigada.update(this._dialog.dialogData.id, this._dialog.dialogData).subscribe((res: AutoBrigada) => {\r\n            this.toastr.success('Update success', 'Success');\r\n\r\n            const foundIndex = this.dataSource.data.findIndex(x => x.id === res.id);\r\n            this.dataSource.data[foundIndex] = res;\r\n\r\n            this.dataSource = new MatTableDataSource<AutoBrigada>(this.dataSource.data)\r\n\r\n          },\r\n          (error) => {this.toastr.error('Updating Error', 'Error')\r\n          });\r\n      }\r\n    })\r\n  }\r\n\r\n  deleteItem(id) {\r\n    this._brigada.delete(id).subscribe(\r\n      (res) => {\r\n        this.dataSource.data = this.dataSource.data.filter(data => data.id !== id);\r\n        this.toastr.success('Delete success', 'Success');\r\n      },\r\n      (error) => {\r\n        this.toastr.error('Delete failed', 'Error');\r\n      }\r\n    )\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<table mat-table #table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">\\r\\n  <!-- Position Column -->\\r\\n  <ng-container matColumnDef=\\\"id\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> No. </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.id}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Name Column -->\\r\\n  <ng-container matColumnDef=\\\"Name\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Name </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- SurName Column -->\\r\\n  <ng-container matColumnDef=\\\"Surname\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Surname </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.surname}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- actions -->\\r\\n  <div class=\\\"actions\\\">\\r\\n    <ng-container matColumnDef=\\\"actions\\\">\\r\\n      <mat-header-cell *matHeaderCellDef>\\r\\n        <button mat-icon-button color=\\\"primary\\\" (click)=\\\"addNew()\\\">\\r\\n          <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">add</mat-icon>\\r\\n        </button>\\r\\n      </mat-header-cell>\\r\\n\\r\\n      <mat-cell *matCellDef=\\\"let row; let i=index;\\\">\\r\\n        <button mat-icon-button color=\\\"primary\\\" (click)=\\\"startEdit(row.id)\\\">\\r\\n          <mat-icon aria-label=\\\"Edit\\\">edit</mat-icon>\\r\\n        </button>\\r\\n\\r\\n        <button mat-icon-button color=\\\"warn\\\" (click)=\\\"deleteItem(row.id)\\\">\\r\\n          <mat-icon aria-label=\\\"Delete\\\">delete</mat-icon>\\r\\n        </button>\\r\\n      </mat-cell>\\r\\n    </ng-container>\\r\\n  </div>\\r\\n\\r\\n\\r\\n  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n</table>\\r\\n\\r\\n<mat-paginator #paginator\\r\\n               [length]=\\\"dataSource.filteredData.length\\\"\\r\\n               [pageIndex]=\\\"0\\\"\\r\\n               [pageSize]=\\\"10\\\"\\r\\n               [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\">\\r\\n</mat-paginator>\\r\\n\"","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {MatDialog, MatPaginator, MatSort, MatTableDataSource} from \"@angular/material\";\r\nimport {DialogService} from \"../../services/dialog.service\";\r\nimport {Router} from \"@angular/router\";\r\nimport {ToastrService} from \"ngx-toastr\";\r\nimport {BrigadirService} from \"../../services/brigadir.service\";\r\nimport {AutoBrigadir} from \"../../model/AutoBrigadir\";\r\nimport {EditBrigadirComponent} from \"../../dialogs/edit/edit-brigadir/edit-brigadir.component\";\r\nimport {AddBrigadirComponent} from \"../../dialogs/add/add-brigadir/add-brigadir.component\";\r\n\r\n@Component({\r\n  selector: 'app-brigadir',\r\n  templateUrl: './brigadir.component.html',\r\n  styleUrls: ['./brigadir.component.css']\r\n})\r\nexport class BrigadirComponent implements OnInit {\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  displayedColumns: string[] = ['id', 'Name', 'Surname', 'actions'];\r\n  dataSource = new MatTableDataSource<any>();\r\n\r\n  constructor(private _brigadir: BrigadirService,\r\n              private _dialog: DialogService,\r\n              private router: Router,\r\n              private toastr: ToastrService,\r\n              private dialog: MatDialog) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getAll();\r\n\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  getAll() {\r\n    this._brigadir.getAll().subscribe((res: AutoBrigadir[]) => {\r\n      this.dataSource.data = res;\r\n    });\r\n  }\r\n\r\n  addNew() {\r\n    const dialogRef = this.dialog.open(AddBrigadirComponent);\r\n\r\n    dialogRef.afterClosed().subscribe(res => {\r\n      if(res === 1) {\r\n        this._brigadir.add(this._dialog.dialogData).subscribe(\r\n          (res: AutoBrigadir) => {\r\n            this.dataSource.data.push(res);\r\n            this.dataSource = new MatTableDataSource<AutoBrigadir>(this.dataSource.data);\r\n            this.toastr.success('Data saved', 'Success');\r\n          },\r\n          (error) => {\r\n            this.toastr.error('Data do not saved', 'Error');\r\n          })\r\n      }\r\n    })\r\n  }\r\n\r\n  startEdit(id) {\r\n    const dialogRef = this.dialog.open(EditBrigadirComponent, {\r\n      data: {id: id}\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(res => {\r\n      if(res === 1) {\r\n        this._brigadir.update(this._dialog.dialogData.id, this._dialog.dialogData).subscribe((res: AutoBrigadir) => {\r\n            this.toastr.success('Update success', 'Success');\r\n\r\n            const foundIndex = this.dataSource.data.findIndex(x => x.id === res.id);\r\n            this.dataSource.data[foundIndex] = res;\r\n\r\n            this.dataSource = new MatTableDataSource<AutoBrigadir>(this.dataSource.data)\r\n\r\n          },\r\n          (error) => {this.toastr.error('Updating Error', 'Error')\r\n          });\r\n      }\r\n    })\r\n  }\r\n\r\n  deleteItem(id) {\r\n    this._brigadir.delete(id).subscribe(\r\n      (res) => {\r\n        this.dataSource.data = this.dataSource.data.filter(data => data.id !== id);\r\n        this.toastr.success('Delete success', 'Success');\r\n      },\r\n      (error) => {\r\n        this.toastr.error('Delete failed', 'Error');\r\n      }\r\n    )\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<table mat-table #table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">\\r\\n  <!-- Position Column -->\\r\\n  <ng-container matColumnDef=\\\"id\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> No. </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.id}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Name Column -->\\r\\n  <ng-container matColumnDef=\\\"Name\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Name </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- actions -->\\r\\n  <div class=\\\"actions\\\">\\r\\n    <ng-container matColumnDef=\\\"actions\\\">\\r\\n      <mat-header-cell *matHeaderCellDef>\\r\\n        <button mat-icon-button color=\\\"primary\\\" (click)=\\\"addNew()\\\">\\r\\n          <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">add</mat-icon>\\r\\n        </button>\\r\\n      </mat-header-cell>\\r\\n\\r\\n      <mat-cell *matCellDef=\\\"let row; let i=index;\\\">\\r\\n        <button mat-icon-button color=\\\"primary\\\" (click)=\\\"startEdit(row.id)\\\">\\r\\n          <mat-icon aria-label=\\\"Edit\\\">edit</mat-icon>\\r\\n        </button>\\r\\n\\r\\n        <button mat-icon-button color=\\\"warn\\\" (click)=\\\"deleteItem(row.id)\\\">\\r\\n          <mat-icon aria-label=\\\"Delete\\\">delete</mat-icon>\\r\\n        </button>\\r\\n      </mat-cell>\\r\\n    </ng-container>\\r\\n  </div>\\r\\n\\r\\n\\r\\n  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n</table>\\r\\n\\r\\n<mat-paginator #paginator\\r\\n               [length]=\\\"dataSource.filteredData.length\\\"\\r\\n               [pageIndex]=\\\"0\\\"\\r\\n               [pageSize]=\\\"10\\\"\\r\\n               [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\">\\r\\n</mat-paginator>\\r\\n\"","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {MatDialog, MatPaginator, MatSort, MatTableDataSource} from \"@angular/material\";\r\nimport {DialogService} from \"../../services/dialog.service\";\r\nimport {Router} from \"@angular/router\";\r\nimport {ToastrService} from \"ngx-toastr\";\r\nimport {AutoBrigada} from \"../../model/AutoBrigada\";\r\nimport {CategoryPersonalService} from \"../../services/category-personal.service\";\r\nimport {AutoCategoryPersonal} from \"../../model/AutoCategoryPersonal\";\r\nimport {EditCategoryPersonalComponent} from \"../../dialogs/edit/edit-category-personal/edit-category-personal.component\";\r\nimport {AddCategoryPersonalComponent} from \"../../dialogs/add/add-category-personal/add-category-personal.component\";\r\n\r\n@Component({\r\n  selector: 'app-category-personal',\r\n  templateUrl: './category-personal.component.html',\r\n  styleUrls: ['./category-personal.component.css']\r\n})\r\nexport class CategoryPersonalComponent implements OnInit {\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  displayedColumns: string[] = ['id', 'Name', 'actions'];\r\n  dataSource = new MatTableDataSource<any>();\r\n\r\n  constructor(private _personal: CategoryPersonalService,\r\n              private _dialog: DialogService,\r\n              private router: Router,\r\n              private toastr: ToastrService,\r\n              private dialog: MatDialog) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getAll();\r\n\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  getAll() {\r\n    this._personal.getAll().subscribe((res: AutoCategoryPersonal[]) => {\r\n      this.dataSource.data = res;\r\n    });\r\n  }\r\n\r\n  addNew() {\r\n    const dialogRef = this.dialog.open(AddCategoryPersonalComponent);\r\n\r\n    dialogRef.afterClosed().subscribe(res => {\r\n      if(res === 1) {\r\n        this._personal.add(this._dialog.dialogData).subscribe(\r\n          (res: AutoBrigada) => {\r\n            this.dataSource.data.push(res);\r\n            this.dataSource = new MatTableDataSource<AutoBrigada>(this.dataSource.data);\r\n            this.toastr.success('Data saved', 'Success');\r\n          },\r\n          (error) => {\r\n            this.toastr.error('Data do not saved', 'Error');\r\n          })\r\n      }\r\n    })\r\n  }\r\n\r\n  startEdit(id) {\r\n    const dialogRef = this.dialog.open(EditCategoryPersonalComponent, {\r\n      data: {id: id}\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(res => {\r\n      if(res === 1) {\r\n        this._personal.update(this._dialog.dialogData.id, this._dialog.dialogData).subscribe((res: AutoBrigada) => {\r\n            this.toastr.success('Update success', 'Success');\r\n\r\n            const foundIndex = this.dataSource.data.findIndex(x => x.id === res.id);\r\n            this.dataSource.data[foundIndex] = res;\r\n\r\n            this.dataSource = new MatTableDataSource<AutoBrigada>(this.dataSource.data)\r\n\r\n          },\r\n          (error) => {this.toastr.error('Updating Error', 'Error')\r\n          });\r\n      }\r\n    })\r\n  }\r\n\r\n  deleteItem(id) {\r\n    this._personal.delete(id).subscribe(\r\n      (res) => {\r\n        this.dataSource.data = this.dataSource.data.filter(data => data.id !== id);\r\n        this.toastr.success('Delete success', 'Success');\r\n      },\r\n      (error) => {\r\n        this.toastr.error('Delete failed', 'Error');\r\n      }\r\n    )\r\n  }\r\n\r\n}\r\n","module.exports = \"table {\\r\\n  width: 100%;\\r\\n}\\r\\ntr {\\r\\n  background-color: white;\\r\\n  cursor: pointer;\\r\\n}\\r\\n.mat-table .mat-row:hover {\\r\\n  background: rgba(0, 0, 0, 0.04);\\r\\n}\\r\\nbutton:hover {\\r\\n  background-color: #d4d8db;\\r\\n}\\r\\n.before-table {\\r\\n  width: 100%;\\r\\n  display: flex;\\r\\n  justify-content: flex-end;\\r\\n}\\r\\n.mat-cell {\\r\\n  justify-content: flex-end;\\r\\n}\\r\\n.mat-header-cell {\\r\\n  justify-content: flex-end;\\r\\n}\\r\\n\"","module.exports = \"<table mat-table #table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">\\r\\n  <!-- Position Column -->\\r\\n  <ng-container matColumnDef=\\\"id\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> No. </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.id}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Name Column -->\\r\\n  <ng-container matColumnDef=\\\"Name\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Name </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- actions -->\\r\\n  <div class=\\\"actions\\\">\\r\\n    <ng-container matColumnDef=\\\"actions\\\">\\r\\n      <mat-header-cell *matHeaderCellDef>\\r\\n        <button mat-icon-button color=\\\"primary\\\" (click)=\\\"addNew()\\\">\\r\\n          <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">add</mat-icon>\\r\\n        </button>\\r\\n      </mat-header-cell>\\r\\n\\r\\n      <mat-cell *matCellDef=\\\"let row; let i=index;\\\">\\r\\n        <button mat-icon-button color=\\\"primary\\\" (click)=\\\"startEdit(row.id)\\\">\\r\\n          <mat-icon aria-label=\\\"Edit\\\">edit</mat-icon>\\r\\n        </button>\\r\\n\\r\\n        <button mat-icon-button color=\\\"warn\\\" (click)=\\\"deleteItem(row.id)\\\">\\r\\n          <mat-icon aria-label=\\\"Delete\\\">delete</mat-icon>\\r\\n        </button>\\r\\n      </mat-cell>\\r\\n    </ng-container>\\r\\n  </div>\\r\\n\\r\\n\\r\\n  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n  <!--<tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" (click)=\\\"tableClick(row.id)\\\"></tr>-->\\r\\n</table>\\r\\n\\r\\n<mat-paginator #paginator\\r\\n               [length]=\\\"dataSource.filteredData.length\\\"\\r\\n               [pageIndex]=\\\"0\\\"\\r\\n               [pageSize]=\\\"10\\\"\\r\\n               [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\">\\r\\n</mat-paginator>\\r\\n\"","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {EditCategoryComponent} from \"../../dialogs/edit/edit-category/edit-category.component\";\r\nimport {MatDialog, MatPaginator, MatSort, MatTableDataSource} from \"@angular/material\";\r\nimport {DialogService} from \"../../services/dialog.service\";\r\nimport {Router} from \"@angular/router\";\r\nimport {ToastrService} from \"ngx-toastr\";\r\nimport {CategoryService} from \"../../services/category.service\";\r\nimport {AddCategoryComponent} from \"../../dialogs/add/add-category/add-category.component\";\r\nimport {AutoCategory} from \"../../model/AutoCategory\";\r\n\r\n@Component({\r\n  selector: 'app-category',\r\n  templateUrl: './category.component.html',\r\n  styleUrls: ['./category.component.css']\r\n})\r\nexport class CategoryComponent implements OnInit {\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  displayedColumns: string[] = ['id', 'Name', 'actions'];\r\n  dataSource = new MatTableDataSource<any>();\r\n\r\n  constructor(private _category: CategoryService,\r\n              private _dialog: DialogService,\r\n              private router: Router,\r\n              private toastr: ToastrService,\r\n              private dialog: MatDialog) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getAll();\r\n\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  getAll() {\r\n    this._category.getAll().subscribe((res: AutoCategory[]) => {\r\n      this.dataSource.data = res;\r\n    });\r\n  }\r\n\r\n  addNew() {\r\n    const dialogRef = this.dialog.open(AddCategoryComponent);\r\n\r\n    dialogRef.afterClosed().subscribe(res => {\r\n      if(res === 1) {\r\n        this._category.add(this._dialog.dialogData).subscribe(\r\n          (res: AutoCategory) => {\r\n            this.dataSource.data.push(res);\r\n            this.dataSource = new MatTableDataSource<AutoCategory>(this.dataSource.data);\r\n            this.toastr.success('Data saved', 'Success');\r\n          },\r\n          (error) => {\r\n            this.toastr.error('Data do not saved', 'Error');\r\n          })\r\n      }\r\n    })\r\n  }\r\n\r\n  startEdit(id) {\r\n    const dialogRef = this.dialog.open(EditCategoryComponent, {\r\n      data: {id: id}\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(res => {\r\n      if(res === 1) {\r\n        this._category.update(this._dialog.dialogData.id, this._dialog.dialogData).subscribe((res: AutoCategory) => {\r\n            this.toastr.success('Update success', 'Success');\r\n\r\n            const foundIndex = this.dataSource.data.findIndex(x => x.id === res.id);\r\n            this.dataSource.data[foundIndex] = res;\r\n\r\n            this.dataSource = new MatTableDataSource<AutoCategory>(this.dataSource.data)\r\n\r\n          },\r\n          (error) => {this.toastr.error('Updating Error', 'Error')\r\n          });\r\n      }\r\n    })\r\n  }\r\n\r\n  deleteItem(id) {\r\n    this._category.delete(id).subscribe(\r\n      (res) => {\r\n        this.dataSource.data = this.dataSource.data.filter(data => data.id !== id);\r\n        this.toastr.success('Delete success', 'Success');\r\n      },\r\n      (error) => {\r\n        this.toastr.error('Delete failed', 'Error');\r\n      }\r\n    )\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<table mat-table #table [dataSource]=\\\"dataSource\\\" matSort class=\\\"mat-elevation-z8\\\">\\r\\n  <!-- Position Column -->\\r\\n  <ng-container matColumnDef=\\\"id\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> No. </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.id}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Name Column -->\\r\\n  <ng-container matColumnDef=\\\"Name\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Name </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- SurName Column -->\\r\\n  <ng-container matColumnDef=\\\"SurName\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> SurName </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.surname}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Category Column -->\\r\\n  <ng-container matColumnDef=\\\"Category\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Category Name </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.auto.autoCategory.name}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Marka Column -->\\r\\n  <ng-container matColumnDef=\\\"Marka\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Marka Name </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.auto.autoMarka.name}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- actions -->\\r\\n  <ng-container matColumnDef=\\\"actions\\\">\\r\\n    <mat-header-cell *matHeaderCellDef>\\r\\n      <button mat-icon-button color=\\\"primary\\\" (click)=\\\"addNew()\\\">\\r\\n        <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">add</mat-icon>\\r\\n      </button>\\r\\n    </mat-header-cell>\\r\\n\\r\\n    <mat-cell *matCellDef=\\\"let row; let i=index;\\\">\\r\\n      <button mat-icon-button color=\\\"primary\\\" (click)=\\\"startEdit(row.id)\\\">\\r\\n        <mat-icon aria-label=\\\"Edit\\\">edit</mat-icon>\\r\\n      </button>\\r\\n\\r\\n      <button mat-icon-button color=\\\"warn\\\" (click)=\\\"deleteItem(row.id)\\\">\\r\\n        <mat-icon aria-label=\\\"Delete\\\">delete</mat-icon>\\r\\n      </button>\\r\\n    </mat-cell>\\r\\n  </ng-container>\\r\\n\\r\\n  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n</table>\\r\\n\\r\\n<mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" pageSize=\\\"10\\\"></mat-paginator>\\r\\n\\r\\n\"","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {MatDialog, MatPaginator, MatSort, MatTableDataSource} from \"@angular/material\";\r\nimport {Driver} from \"../../model/Driver\";\r\nimport {DriverService} from \"../../services/driver.service\";\r\nimport {Router} from \"@angular/router\";\r\nimport {ToastrService} from \"ngx-toastr\";\r\nimport {DialogService} from \"../../services/dialog.service\";\r\nimport {EditDriverComponent} from \"../../dialogs/edit/edit-driver/edit-driver.component\";\r\nimport {AddDriverComponent} from \"../../dialogs/add/add-driver/add-driver.component\";\r\n\r\n@Component({\r\n  selector: 'app-drivers',\r\n  templateUrl: './drivers.component.html',\r\n  styleUrls: ['./drivers.component.css']\r\n})\r\nexport class DriversComponent implements OnInit {\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  displayedColumns: string[] = ['id', 'Name', 'SurName', 'Category', 'Marka', 'actions'];\r\n  dataSource = new MatTableDataSource<Driver>();\r\n\r\n  constructor(private _driver: DriverService,\r\n              private _dialog: DialogService,\r\n              private router: Router,\r\n              private toastr: ToastrService,\r\n              private dialog: MatDialog) { }\r\n\r\n  ngOnInit() {\r\n    this.getAll();\r\n\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  getAll() {\r\n    this._driver.getAll().subscribe((res: Driver[]) => {\r\n      this.dataSource.data = res;\r\n    });\r\n  }\r\n\r\n  addNew() {\r\n    const dialogRef = this.dialog.open(AddDriverComponent);\r\n\r\n    dialogRef.afterClosed().subscribe(res => {\r\n      if(res === 1) {\r\n        this._driver.add(this._dialog.dialogData).subscribe(\r\n          (res: Driver) => {\r\n            this.dataSource.data.push(res);\r\n            this.dataSource = new MatTableDataSource<Driver>(this.dataSource.data);\r\n            this.toastr.success('Data saved', 'Success');\r\n          },\r\n          (error) => {\r\n            this.toastr.error('Data do not saved', 'Error');\r\n          })\r\n      }\r\n    })\r\n  }\r\n\r\n  startEdit(id) {\r\n    const dialogRef = this.dialog.open(EditDriverComponent, {\r\n      data: {id: id}\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(res => {\r\n      if(res === 1) {\r\n        this._driver.update(this._dialog.dialogData.id, this._dialog.dialogData).subscribe((res: Driver) => {\r\n            this.toastr.success('Update success', 'Success');\r\n\r\n            const foundIndex = this.dataSource.data.findIndex(x => x.id === res.id);\r\n            this.dataSource.data[foundIndex] = res;\r\n\r\n            this.dataSource = new MatTableDataSource<Driver>(this.dataSource.data)\r\n\r\n          },\r\n          (error) => {this.toastr.error('Updating Error', 'Error')\r\n          });\r\n      }\r\n    })\r\n  }\r\n\r\n  deleteItem(id) {\r\n    this._driver.delete(id).subscribe(\r\n      (res) => {\r\n        this.dataSource.data = this.dataSource.data.filter(data => data.id !== id);\r\n        this.toastr.success('Delete success', 'Success');\r\n      },\r\n      (error) => {\r\n        this.toastr.error('Delete failed', 'Error');\r\n      }\r\n    )\r\n  }\r\n\r\n  whoIs() {\r\n    const localLogin = localStorage.getItem('login');\r\n    if(localLogin === 'driver') {\r\n      return true;\r\n    }\r\n    return false;\r\n\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<table mat-table #table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">\\r\\n  <!-- Position Column -->\\r\\n  <ng-container matColumnDef=\\\"id\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> No. </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.id}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- PersonalName Column -->\\r\\n  <ng-container matColumnDef=\\\"PersonalName\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Personal Name </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.autoPersonal.name}} {{element.autoPersonal.surname}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- DriversName Column -->\\r\\n  <ng-container matColumnDef=\\\"DriversName\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Drivers Name </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.autoDrivers.name}} {{element.autoDrivers.surname}}</td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- BrigadaName Column -->\\r\\n  <ng-container matColumnDef=\\\"BrigadaName\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Brigada Name </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.autoBrigada.name}}</td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- BrigadirName Column -->\\r\\n  <ng-container matColumnDef=\\\"BrigadirName\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Brigadir Name </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.autoBrigadir.name}} {{element.autoBrigadir.surname}}</td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- actions -->\\r\\n  <div class=\\\"actions\\\">\\r\\n    <ng-container matColumnDef=\\\"actions\\\">\\r\\n      <mat-header-cell *matHeaderCellDef>\\r\\n        <button mat-icon-button color=\\\"primary\\\" (click)=\\\"addNew()\\\">\\r\\n          <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">add</mat-icon>\\r\\n        </button>\\r\\n      </mat-header-cell>\\r\\n\\r\\n      <mat-cell *matCellDef=\\\"let row; let i=index;\\\">\\r\\n        <button mat-icon-button color=\\\"primary\\\" (click)=\\\"startEdit(row.id)\\\">\\r\\n          <mat-icon aria-label=\\\"Edit\\\">edit</mat-icon>\\r\\n        </button>\\r\\n\\r\\n        <button mat-icon-button color=\\\"warn\\\" (click)=\\\"deleteItem(row.id)\\\">\\r\\n          <mat-icon aria-label=\\\"Delete\\\">delete</mat-icon>\\r\\n        </button>\\r\\n      </mat-cell>\\r\\n    </ng-container>\\r\\n  </div>\\r\\n\\r\\n\\r\\n  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n</table>\\r\\n\\r\\n<mat-paginator #paginator\\r\\n               [length]=\\\"dataSource.filteredData.length\\\"\\r\\n               [pageIndex]=\\\"0\\\"\\r\\n               [pageSize]=\\\"10\\\"\\r\\n               [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\">\\r\\n</mat-paginator>\\r\\n\"","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {AutoGroup} from \"../../model/AutoGroup\";\r\nimport {MatDialog, MatPaginator, MatSort, MatTableDataSource} from \"@angular/material\";\r\nimport {DialogService} from \"../../services/dialog.service\";\r\nimport {Router} from \"@angular/router\";\r\nimport {DatePipe} from \"@angular/common\";\r\nimport {ToastrService} from \"ngx-toastr\";\r\nimport {GroupService} from \"../../services/group.service\";\r\nimport {AddGroupComponent} from \"../../dialogs/add/add-group/add-group.component\";\r\nimport {EditGroupComponent} from \"../../dialogs/edit/edit-group/edit-group.component\";\r\n\r\n@Component({\r\n  selector: 'app-group',\r\n  templateUrl: './group.component.html',\r\n  styleUrls: ['./group.component.css']\r\n})\r\nexport class GroupComponent implements OnInit {\r\n\r\n  displayedColumns: string[] = ['id', 'PersonalName', 'DriversName', 'BrigadaName', 'BrigadirName', 'actions'];\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  dataSource = new MatTableDataSource<any>();\r\n\r\n  constructor(private _group: GroupService,\r\n              private _dialog: DialogService,\r\n              private router: Router,\r\n              private datepipe: DatePipe,\r\n              private toastr: ToastrService,\r\n              private dialog: MatDialog) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getAll();\r\n\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  getAll() {\r\n    this._group.getAll().subscribe((res: AutoGroup[]) => {\r\n      this.dataSource.data = res;\r\n    });\r\n  }\r\n\r\n  addNew() {\r\n    const dialogRef = this.dialog.open(AddGroupComponent);\r\n\r\n    dialogRef.afterClosed().subscribe(res => {\r\n      if(res === 1) {\r\n        this._group.add(this._dialog.dialogData).subscribe(\r\n          (res: AutoGroup) => {\r\n            this.dataSource.data.push(res);\r\n            this.dataSource = new MatTableDataSource<AutoGroup>(this.dataSource.data);\r\n            this.toastr.success('Data saved', 'Success');\r\n          },\r\n          (error) => {\r\n            this.toastr.error('Data do not saved', 'Error');\r\n          })\r\n      }\r\n    })\r\n  }\r\n\r\n  startEdit(id) {\r\n    const dialogRef = this.dialog.open(EditGroupComponent, {\r\n      data: {id: id}\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(res => {\r\n      if(res === 1) {\r\n        this._group.update(this._dialog.dialogData.id, this._dialog.dialogData).subscribe((res: AutoGroup) => {\r\n            this.toastr.success('Update success', 'Success');\r\n\r\n            const foundIndex = this.dataSource.data.findIndex(x => x.id === res.id);\r\n            this.dataSource.data[foundIndex] = res;\r\n\r\n            this.dataSource = new MatTableDataSource<AutoGroup>(this.dataSource.data)\r\n\r\n          },\r\n          (error) => {this.toastr.error('Updating Error', 'Error')\r\n          });\r\n      }\r\n    })\r\n  }\r\n\r\n  deleteItem(id) {\r\n    this._group.delete(id).subscribe(\r\n      (res) => {\r\n        this.dataSource.data = this.dataSource.data.filter(data => data.id !== id);\r\n        this.toastr.success('Delete success', 'Success');\r\n      },\r\n      (error) => {\r\n        this.toastr.error('Delete failed', 'Error');\r\n      }\r\n    )\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<table mat-table #table [dataSource]=\\\"dataSource\\\" matSort class=\\\"mat-elevation-z8\\\">\\r\\n  <!-- Position Column -->\\r\\n  <ng-container matColumnDef=\\\"id\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> No. </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.id}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- PointStart Column -->\\r\\n  <ng-container matColumnDef=\\\"PointStart\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> PointStart </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.point_start}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- PointFinish Column -->\\r\\n  <ng-container matColumnDef=\\\"PointFinish\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> PointFinish </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.point_finish}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- DateStart Column -->\\r\\n  <ng-container matColumnDef=\\\"DateStart\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> DateStart </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.date_start | date: 'dd/MM/yyyy'}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- DateFinish Column -->\\r\\n  <ng-container matColumnDef=\\\"DateFinish\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> DateFinish </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.date_finish | date: 'dd/MM/yyyy'}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Category Column -->\\r\\n  <ng-container matColumnDef=\\\"Category\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Category Name </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.auto.autoCategory.name}}</td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Marka Column -->\\r\\n  <ng-container matColumnDef=\\\"Marka\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Marka Name </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.auto.autoMarka.name}}</td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- actions -->\\r\\n  <ng-container matColumnDef=\\\"actions\\\">\\r\\n    <mat-header-cell *matHeaderCellDef>\\r\\n      <button mat-icon-button color=\\\"primary\\\" (click)=\\\"addNew()\\\">\\r\\n        <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">add</mat-icon>\\r\\n      </button>\\r\\n    </mat-header-cell>\\r\\n\\r\\n    <mat-cell *matCellDef=\\\"let row; let i=index;\\\">\\r\\n      <button mat-icon-button color=\\\"primary\\\">\\r\\n        <mat-icon aria-label=\\\"Done\\\">done</mat-icon>\\r\\n      </button>\\r\\n\\r\\n      <button mat-icon-button color=\\\"primary\\\" (click)=\\\"startEdit(row.id)\\\">\\r\\n        <mat-icon aria-label=\\\"Edit\\\">edit</mat-icon>\\r\\n      </button>\\r\\n\\r\\n      <button mat-icon-button color=\\\"warn\\\" (click)=\\\"deleteItem(row.id)\\\">\\r\\n        <mat-icon aria-label=\\\"Delete\\\">delete</mat-icon>\\r\\n      </button>\\r\\n    </mat-cell>\\r\\n  </ng-container>\\r\\n\\r\\n  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n</table>\\r\\n\\r\\n<mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" pageSize=\\\"10\\\"></mat-paginator>\\r\\n\\r\\n\\r\\n\\r\\n\"","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {AutoHardRoute} from \"../../model/AutoHardRoute\";\r\nimport {MatDialog, MatPaginator, MatSort, MatTableDataSource} from \"@angular/material\";\r\nimport {DialogService} from \"../../services/dialog.service\";\r\nimport {Router} from \"@angular/router\";\r\nimport {ToastrService} from \"ngx-toastr\";\r\nimport {HardRouteService} from \"../../services/hard-route.service\";\r\nimport {EditHardRouteComponent} from \"../../dialogs/edit/edit-hard-route/edit-hard-route.component\";\r\nimport {AddHarRouteComponent} from \"../../dialogs/add/add-har-route/add-har-route.component\";\r\n\r\n@Component({\r\n  selector: 'app-hard-route',\r\n  templateUrl: './hard-route.component.html',\r\n  styleUrls: ['./hard-route.component.css']\r\n})\r\nexport class HardRouteComponent implements OnInit {\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  displayedColumns: string[] = ['id', 'PointStart', 'PointFinish', 'DateStart', 'DateFinish', 'Category', 'Marka', 'actions'];\r\n  dataSource = new MatTableDataSource<any>();\r\n\r\n  constructor(private _hardRoute: HardRouteService,\r\n              private _dialog: DialogService,\r\n              private router: Router,\r\n              private toastr: ToastrService,\r\n              private dialog: MatDialog) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getAll();\r\n\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  getAll() {\r\n    this._hardRoute.getAll().subscribe((res: AutoHardRoute[]) => {\r\n      this.dataSource.data = res;\r\n    });\r\n  }\r\n\r\n  addNew() {\r\n    const dialogRef = this.dialog.open(AddHarRouteComponent);\r\n\r\n    dialogRef.afterClosed().subscribe(res => {\r\n      if(res === 1) {\r\n        this._hardRoute.add(this._dialog.dialogData).subscribe(\r\n          (res: AutoHardRoute) => {\r\n            this.dataSource.data.push(res);\r\n            this.dataSource = new MatTableDataSource<AutoHardRoute>(this.dataSource.data);\r\n            this.toastr.success('Data saved', 'Success');\r\n          },\r\n          (error) => {\r\n            this.toastr.error('Data do not saved', 'Error');\r\n          })\r\n      }\r\n    })\r\n  }\r\n\r\n  startEdit(id) {\r\n    const dialogRef = this.dialog.open(EditHardRouteComponent, {\r\n      data: {id: id}\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(res => {\r\n      if(res === 1) {\r\n        this._hardRoute.update(this._dialog.dialogData.id, this._dialog.dialogData).subscribe((res: AutoHardRoute) => {\r\n            this.toastr.success('Update success', 'Success');\r\n\r\n            const foundIndex = this.dataSource.data.findIndex(x => x.id === res.id);\r\n            this.dataSource.data[foundIndex] = res;\r\n\r\n            this.dataSource = new MatTableDataSource<AutoHardRoute>(this.dataSource.data)\r\n\r\n          },\r\n          (error) => {this.toastr.error('Updating Error', 'Error')\r\n          });\r\n      }\r\n    })\r\n  }\r\n\r\n  deleteItem(id) {\r\n    this._hardRoute.delete(id).subscribe(\r\n      (res) => {\r\n        this.dataSource.data = this.dataSource.data.filter(data => data.id !== id);\r\n        this.toastr.success('Delete success', 'Success');\r\n      },\r\n      (error) => {\r\n        this.toastr.error('Delete failed', 'Error');\r\n      }\r\n    )\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<table mat-table #table [dataSource]=\\\"dataSource\\\" matSort class=\\\"mat-elevation-z8\\\">\\r\\n  <!-- Position Column -->\\r\\n  <ng-container matColumnDef=\\\"id\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> No. </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.id}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Name Column -->\\r\\n  <ng-container matColumnDef=\\\"Name\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Name </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Street Column -->\\r\\n  <ng-container matColumnDef=\\\"Street\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Street </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.street}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Category Column -->\\r\\n  <ng-container matColumnDef=\\\"Category\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Category Name </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.autoCategory.name}}</td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- actions -->\\r\\n  <ng-container matColumnDef=\\\"actions\\\">\\r\\n    <mat-header-cell *matHeaderCellDef>\\r\\n      <button mat-icon-button color=\\\"primary\\\" (click)=\\\"addNew()\\\">\\r\\n        <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">add</mat-icon>\\r\\n      </button>\\r\\n    </mat-header-cell>\\r\\n\\r\\n    <mat-cell *matCellDef=\\\"let row; let i=index;\\\">\\r\\n      <button mat-icon-button color=\\\"primary\\\" (click)=\\\"startEdit(row.id)\\\">\\r\\n        <mat-icon aria-label=\\\"Edit\\\">edit</mat-icon>\\r\\n      </button>\\r\\n\\r\\n      <button mat-icon-button color=\\\"warn\\\" (click)=\\\"deleteItem(row.id)\\\">\\r\\n        <mat-icon aria-label=\\\"Delete\\\">delete</mat-icon>\\r\\n      </button>\\r\\n    </mat-cell>\\r\\n  </ng-container>\\r\\n\\r\\n  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n</table>\\r\\n\\r\\n<mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" pageSize=\\\"10\\\"></mat-paginator>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\"","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {AutoInfrastruct} from \"../../model/AutoInfrastruct\";\r\nimport {MatDialog, MatPaginator, MatSort, MatTableDataSource} from \"@angular/material\";\r\nimport {DialogService} from \"../../services/dialog.service\";\r\nimport {Router} from \"@angular/router\";\r\nimport {ToastrService} from \"ngx-toastr\";\r\nimport {InfrastructService} from \"../../services/infrastruct.service\";\r\nimport {AddInfrastructComponent} from \"../../dialogs/add/add-infrastruct/add-infrastruct.component\";\r\nimport {EditInfrastructComponent} from \"../../dialogs/edit/edit-infrastruct/edit-infrastruct.component\";\r\n\r\n@Component({\r\n  selector: 'app-infrastruct',\r\n  templateUrl: './infrastruct.component.html',\r\n  styleUrls: ['./infrastruct.component.css']\r\n})\r\nexport class InfrastructComponent implements OnInit {\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  displayedColumns: string[] = ['id', 'Name', 'Street', 'Category', 'actions'];\r\n  dataSource = new MatTableDataSource<any>();\r\n\r\n  constructor(private _infrastruct: InfrastructService,\r\n              private _dialog: DialogService,\r\n              private router: Router,\r\n              private toastr: ToastrService,\r\n              private dialog: MatDialog) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getAll();\r\n\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n\r\n  }\r\n\r\n  getAll() {\r\n    this._infrastruct.getAll().subscribe((res: AutoInfrastruct[]) => {\r\n      this.dataSource.data = res;\r\n    });\r\n  }\r\n\r\n  addNew() {\r\n    const dialogRef = this.dialog.open(AddInfrastructComponent);\r\n\r\n    dialogRef.afterClosed().subscribe(res => {\r\n      if(res === 1) {\r\n        this._infrastruct.add(this._dialog.dialogData).subscribe(\r\n          (res: AutoInfrastruct) => {\r\n            this.dataSource.data.push(res);\r\n            this.dataSource = new MatTableDataSource<AutoInfrastruct>(this.dataSource.data);\r\n            this.toastr.success('Data saved', 'Success');\r\n          },\r\n          (error) => {\r\n            this.toastr.error('Data do not saved', 'Error');\r\n          })\r\n      }\r\n    })\r\n  }\r\n\r\n  startEdit(id) {\r\n    const dialogRef = this.dialog.open(EditInfrastructComponent, {\r\n      data: {id: id}\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(res => {\r\n      if(res === 1) {\r\n        this._infrastruct.update(this._dialog.dialogData.id, this._dialog.dialogData).subscribe((res: AutoInfrastruct) => {\r\n            this.toastr.success('Update success', 'Success');\r\n\r\n            const foundIndex = this.dataSource.data.findIndex(x => x.id === res.id);\r\n            this.dataSource.data[foundIndex] = res;\r\n\r\n            this.dataSource = new MatTableDataSource<AutoInfrastruct>(this.dataSource.data)\r\n\r\n          },\r\n          (error) => {this.toastr.error('Updating Error', 'Error')\r\n          });\r\n      }\r\n    })\r\n  }\r\n\r\n  deleteItem(id) {\r\n    this._infrastruct.delete(id).subscribe(\r\n      (res) => {\r\n        this.dataSource.data = this.dataSource.data.filter(data => data.id !== id);\r\n        this.toastr.success('Delete success', 'Success');\r\n      },\r\n      (error) => {\r\n        this.toastr.error('Delete failed', 'Error');\r\n      }\r\n    )\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<table mat-table #table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">\\r\\n  <!-- Position Column -->\\r\\n  <ng-container matColumnDef=\\\"id\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> No. </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.id}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Name Column -->\\r\\n  <ng-container matColumnDef=\\\"Name\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Name </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- actions -->\\r\\n  <div class=\\\"actions\\\">\\r\\n    <ng-container matColumnDef=\\\"actions\\\">\\r\\n      <mat-header-cell *matHeaderCellDef>\\r\\n        <button mat-icon-button color=\\\"primary\\\" (click)=\\\"addNew()\\\">\\r\\n          <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">add</mat-icon>\\r\\n        </button>\\r\\n      </mat-header-cell>\\r\\n\\r\\n      <mat-cell *matCellDef=\\\"let row; let i=index;\\\">\\r\\n        <button mat-icon-button color=\\\"primary\\\" (click)=\\\"startEdit(row.id)\\\">\\r\\n          <mat-icon aria-label=\\\"Edit\\\">edit</mat-icon>\\r\\n        </button>\\r\\n\\r\\n        <button mat-icon-button color=\\\"warn\\\" (click)=\\\"deleteItem(row.id)\\\">\\r\\n          <mat-icon aria-label=\\\"Delete\\\">delete</mat-icon>\\r\\n        </button>\\r\\n      </mat-cell>\\r\\n    </ng-container>\\r\\n  </div>\\r\\n\\r\\n\\r\\n  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n  <!--<tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" (click)=\\\"tableClick(row.id)\\\"></tr>-->\\r\\n</table>\\r\\n\\r\\n<mat-paginator #paginator\\r\\n               [length]=\\\"dataSource.filteredData.length\\\"\\r\\n               [pageIndex]=\\\"0\\\"\\r\\n               [pageSize]=\\\"10\\\"\\r\\n               [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\">\\r\\n</mat-paginator>\\r\\n\"","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {AutoCategory} from \"../../model/AutoCategory\";\r\nimport {MatDialog, MatPaginator, MatSort, MatTableDataSource} from \"@angular/material\";\r\nimport {DialogService} from \"../../services/dialog.service\";\r\nimport {Router} from \"@angular/router\";\r\nimport {ToastrService} from \"ngx-toastr\";\r\nimport {MarkaService} from \"../../services/marka.service\";\r\nimport {AutoMarka} from \"../../model/AutoMarka\";\r\nimport {AddMarkaComponent} from \"../../dialogs/add/add-marka/add-marka.component\";\r\nimport {EditMarkaComponent} from \"../../dialogs/edit/edit-marka/edit-marka.component\";\r\n\r\n@Component({\r\n  selector: 'app-marka',\r\n  templateUrl: './marka.component.html',\r\n  styleUrls: ['./marka.component.css']\r\n})\r\nexport class MarkaComponent implements OnInit {\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  displayedColumns: string[] = ['id', 'Name', 'actions'];\r\n  dataSource = new MatTableDataSource<any>();\r\n\r\n  constructor(private _marka: MarkaService,\r\n              private _dialog: DialogService,\r\n              private router: Router,\r\n              private toastr: ToastrService,\r\n              private dialog: MatDialog) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getAll();\r\n\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  getAll() {\r\n    this._marka.getAll().subscribe((res: AutoCategory[]) => {\r\n      this.dataSource.data = res;\r\n    });\r\n  }\r\n\r\n  addNew() {\r\n    const dialogRef = this.dialog.open(AddMarkaComponent);\r\n\r\n    dialogRef.afterClosed().subscribe(res => {\r\n      if(res === 1) {\r\n        this._marka.add(this._dialog.dialogData).subscribe(\r\n          (res: AutoMarka) => {\r\n            this.dataSource.data.push(res);\r\n            this.dataSource = new MatTableDataSource<AutoMarka>(this.dataSource.data);\r\n            this.toastr.success('Data saved', 'Success');\r\n          },\r\n          (error) => {\r\n            this.toastr.error('Data do not saved', 'Error');\r\n          })\r\n      }\r\n    })\r\n  }\r\n\r\n  startEdit(id) {\r\n    const dialogRef = this.dialog.open(EditMarkaComponent, {\r\n      data: {id: id}\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(res => {\r\n      if(res === 1) {\r\n        this._marka.update(this._dialog.dialogData.id, this._dialog.dialogData).subscribe((res: AutoMarka) => {\r\n            this.toastr.success('Update success', 'Success');\r\n\r\n            const foundIndex = this.dataSource.data.findIndex(x => x.id === res.id);\r\n            this.dataSource.data[foundIndex] = res;\r\n\r\n            this.dataSource = new MatTableDataSource<AutoMarka>(this.dataSource.data)\r\n\r\n          },\r\n          (error) => {this.toastr.error('Updating Error', 'Error')\r\n          });\r\n      }\r\n    })\r\n  }\r\n\r\n  deleteItem(id) {\r\n    this._marka.delete(id).subscribe(\r\n      (res) => {\r\n        this.dataSource.data = this.dataSource.data.filter(data => data.id !== id);\r\n        this.toastr.success('Delete success', 'Success');\r\n      },\r\n      (error) => {\r\n        this.toastr.error('Delete failed', 'Error');\r\n      }\r\n    )\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<table mat-table #table [dataSource]=\\\"dataSource\\\" matSort class=\\\"mat-elevation-z8\\\">\\r\\n  <!-- Position Column -->\\r\\n  <ng-container matColumnDef=\\\"id\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> No. </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.id}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Name Column -->\\r\\n  <ng-container matColumnDef=\\\"Name\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Name </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- SurName Column -->\\r\\n  <ng-container matColumnDef=\\\"SurName\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> SurName </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.surname}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- CategoryPersonalName Column -->\\r\\n  <ng-container matColumnDef=\\\"CategoryPersonalName\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Category Of Personal </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.autoCategoryPersonal.name}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- actions -->\\r\\n  <ng-container matColumnDef=\\\"actions\\\">\\r\\n    <mat-header-cell *matHeaderCellDef>\\r\\n      <button mat-icon-button color=\\\"primary\\\" (click)=\\\"addNew()\\\">\\r\\n        <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">add</mat-icon>\\r\\n      </button>\\r\\n    </mat-header-cell>\\r\\n\\r\\n    <mat-cell *matCellDef=\\\"let row; let i=index;\\\">\\r\\n      <button mat-icon-button color=\\\"primary\\\" (click)=\\\"startEdit(row.id)\\\">\\r\\n        <mat-icon aria-label=\\\"Edit\\\">edit</mat-icon>\\r\\n      </button>\\r\\n\\r\\n      <button mat-icon-button color=\\\"warn\\\" (click)=\\\"deleteItem(row.id)\\\">\\r\\n        <mat-icon aria-label=\\\"Delete\\\">delete</mat-icon>\\r\\n      </button>\\r\\n    </mat-cell>\\r\\n  </ng-container>\\r\\n\\r\\n  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n</table>\\r\\n\\r\\n<mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" pageSize=\\\"10\\\"></mat-paginator>\\r\\n\"","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {MatDialog, MatPaginator, MatSort, MatTableDataSource} from \"@angular/material\";\r\nimport {DialogService} from \"../../services/dialog.service\";\r\nimport {Router} from \"@angular/router\";\r\nimport {ToastrService} from \"ngx-toastr\";\r\nimport {AutoPersonal} from \"../../model/AutoPersonal\";\r\nimport {PersonalService} from \"../../services/personal.service\";\r\nimport {EditPersonalComponent} from \"../../dialogs/edit/edit-personal/edit-personal.component\";\r\nimport {AddPersonalComponent} from \"../../dialogs/add/add-personal/add-personal.component\";\r\n\r\n@Component({\r\n  selector: 'app-personal',\r\n  templateUrl: './personal.component.html',\r\n  styleUrls: ['./personal.component.css']\r\n})\r\nexport class PersonalComponent implements OnInit {\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  displayedColumns: string[] = ['id', 'Name', 'SurName', 'CategoryPersonalName', 'actions'];\r\n  dataSource = new MatTableDataSource<any>();\r\n\r\n  constructor(private _personal: PersonalService,\r\n              private _dialog: DialogService,\r\n              private router: Router,\r\n              private toastr: ToastrService,\r\n              private dialog: MatDialog) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getAll();\r\n\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n\r\n  }\r\n\r\n  getAll() {\r\n    this._personal.getAll().subscribe((res: AutoPersonal[]) => {\r\n      this.dataSource.data = res;\r\n    });\r\n  }\r\n\r\n  addNew() {\r\n    const dialogRef = this.dialog.open(AddPersonalComponent);\r\n\r\n    dialogRef.afterClosed().subscribe(res => {\r\n      if(res === 1) {\r\n        this._personal.add(this._dialog.dialogData).subscribe(\r\n          (res: AutoPersonal) => {\r\n            this.dataSource.data.push(res);\r\n            this.dataSource = new MatTableDataSource<AutoPersonal>(this.dataSource.data);\r\n            this.toastr.success('Data saved', 'Success');\r\n          },\r\n          (error) => {\r\n            this.toastr.error('Data do not saved', 'Error');\r\n          })\r\n      }\r\n    })\r\n  }\r\n\r\n  startEdit(id) {\r\n    const dialogRef = this.dialog.open(EditPersonalComponent, {\r\n      data: {id: id}\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(res => {\r\n      if(res === 1) {\r\n        this._personal.update(this._dialog.dialogData.id, this._dialog.dialogData).subscribe((res: AutoPersonal) => {\r\n            this.toastr.success('Update success', 'Success');\r\n\r\n            const foundIndex = this.dataSource.data.findIndex(x => x.id === res.id);\r\n            this.dataSource.data[foundIndex] = res;\r\n\r\n            this.dataSource = new MatTableDataSource<AutoPersonal>(this.dataSource.data)\r\n\r\n          },\r\n          (error) => {this.toastr.error('Updating Error', 'Error')\r\n          });\r\n      }\r\n    })\r\n  }\r\n\r\n  deleteItem(id) {\r\n    this._personal.delete(id).subscribe(\r\n      (res) => {\r\n        this.dataSource.data = this.dataSource.data.filter(data => data.id !== id);\r\n        this.toastr.success('Delete success', 'Success');\r\n      },\r\n      (error) => {\r\n        this.toastr.error('Delete failed', 'Error');\r\n      }\r\n    )\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<table mat-table #table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">\\r\\n  <!-- Position Column -->\\r\\n  <ng-container matColumnDef=\\\"id\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> No. </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.id}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Name Column -->\\r\\n  <ng-container matColumnDef=\\\"Name\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Name </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- actions -->\\r\\n  <div class=\\\"actions\\\">\\r\\n    <ng-container matColumnDef=\\\"actions\\\">\\r\\n      <mat-header-cell *matHeaderCellDef>\\r\\n        <button mat-icon-button color=\\\"primary\\\" (click)=\\\"addNew()\\\">\\r\\n          <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">add</mat-icon>\\r\\n        </button>\\r\\n      </mat-header-cell>\\r\\n\\r\\n      <mat-cell *matCellDef=\\\"let row; let i=index;\\\">\\r\\n        <button mat-icon-button color=\\\"primary\\\" (click)=\\\"startEdit(row.id)\\\">\\r\\n          <mat-icon aria-label=\\\"Edit\\\">edit</mat-icon>\\r\\n        </button>\\r\\n\\r\\n        <button mat-icon-button color=\\\"warn\\\" (click)=\\\"deleteItem(row.id)\\\">\\r\\n          <mat-icon aria-label=\\\"Delete\\\">delete</mat-icon>\\r\\n        </button>\\r\\n      </mat-cell>\\r\\n    </ng-container>\\r\\n  </div>\\r\\n\\r\\n\\r\\n  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n  <!--<tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" (click)=\\\"tableClick(row.id)\\\"></tr>-->\\r\\n</table>\\r\\n\\r\\n<mat-paginator #paginator\\r\\n               [length]=\\\"dataSource.filteredData.length\\\"\\r\\n               [pageIndex]=\\\"0\\\"\\r\\n               [pageSize]=\\\"10\\\"\\r\\n               [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\">\\r\\n</mat-paginator>\\r\\n\"","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {MatDialog, MatPaginator, MatSort, MatTableDataSource} from \"@angular/material\";\r\nimport {ProblemService} from \"../../services/problem.service\";\r\nimport {Router} from \"@angular/router\";\r\nimport {DialogService} from \"../../services/dialog.service\";\r\nimport {ToastrService} from \"ngx-toastr\";\r\nimport {AutoProblem} from \"../../model/AutoProblem\";\r\nimport {EditProblemComponent} from \"../../dialogs/edit/edit-problem/edit-problem.component\";\r\nimport {AddProblemComponent} from \"../../dialogs/add/add-problem/add-problem.component\";\r\n\r\n@Component({\r\n  selector: 'app-problem',\r\n  templateUrl: './problem.component.html',\r\n  styleUrls: ['./problem.component.css']\r\n})\r\nexport class ProblemComponent implements OnInit {\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  displayedColumns: string[] = ['id', 'Name', 'actions'];\r\n  dataSource = new MatTableDataSource<any>();\r\n\r\n  constructor(private _problem: ProblemService,\r\n              private _dialog: DialogService,\r\n              private router: Router,\r\n              private toastr: ToastrService,\r\n              private dialog: MatDialog) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getAll();\r\n\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  getAll() {\r\n    this._problem.getAll().subscribe((res: AutoProblem[]) => {\r\n      this.dataSource.data = res;\r\n    });\r\n  }\r\n\r\n  addNew() {\r\n    const dialogRef = this.dialog.open(AddProblemComponent);\r\n\r\n    dialogRef.afterClosed().subscribe(res => {\r\n      if(res === 1) {\r\n        this._problem.add(this._dialog.dialogData).subscribe(\r\n          (res: AutoProblem) => {\r\n            this.dataSource.data.push(res);\r\n            this.dataSource = new MatTableDataSource<AutoProblem>(this.dataSource.data);\r\n            this.toastr.success('Data saved', 'Success');\r\n          },\r\n          (error) => {\r\n            this.toastr.error('Data do not saved', 'Error');\r\n          })\r\n      }\r\n    })\r\n  }\r\n\r\n  startEdit(id) {\r\n    const dialogRef = this.dialog.open(EditProblemComponent, {\r\n      data: {id: id}\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(res => {\r\n      if(res === 1) {\r\n        this._problem.update(this._dialog.dialogData.id, this._dialog.dialogData).subscribe((res: AutoProblem) => {\r\n            this.toastr.success('Update success', 'Success');\r\n\r\n            const foundIndex = this.dataSource.data.findIndex(x => x.id === res.id);\r\n            this.dataSource.data[foundIndex] = res;\r\n\r\n            this.dataSource = new MatTableDataSource<AutoProblem>(this.dataSource.data)\r\n\r\n          },\r\n          (error) => {this.toastr.error('Updating Error', 'Error')\r\n          });\r\n      }\r\n    })\r\n  }\r\n\r\n  deleteItem(id) {\r\n    this._problem.delete(id).subscribe(\r\n      (res) => {\r\n        this.dataSource.data = this.dataSource.data.filter(data => data.id !== id);\r\n        this.toastr.success('Delete success', 'Success');\r\n      },\r\n      (error) => {\r\n        this.toastr.error('Delete failed', 'Error');\r\n      }\r\n    )\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\r\\n  <span>Prop Table</span>\\r\\n  <span class=\\\"spacer\\\"></span>\\r\\n  Reload data:\\r\\n  <button mat-icon-button (click)=\\\"refresh()\\\">\\r\\n    <mat-icon>refresh</mat-icon>\\r\\n  </button>\\r\\n</mat-toolbar>\\r\\n\\r\\n<table mat-table #table [dataSource]=\\\"prop\\\" class=\\\"mat-elevation-z8\\\">\\r\\n  <!-- Position Column -->\\r\\n  <ng-container matColumnDef=\\\"id\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> No. </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.id}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Name Column -->\\r\\n  <ng-container matColumnDef=\\\"Name\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Name </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Category Column -->\\r\\n  <ng-container matColumnDef=\\\"Category\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Category </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.autoCategory.name}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- actions -->\\r\\n  <div class=\\\"actions\\\">\\r\\n    <ng-container matColumnDef=\\\"actions\\\">\\r\\n      <mat-header-cell *matHeaderCellDef>\\r\\n        <button mat-icon-button color=\\\"primary\\\" (click)=\\\"addNew()\\\">\\r\\n          <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">add</mat-icon>\\r\\n        </button>\\r\\n      </mat-header-cell>\\r\\n\\r\\n      <mat-cell *matCellDef=\\\"let row; let i=index;\\\">\\r\\n        <button mat-icon-button color=\\\"primary\\\" (click)=\\\"startEdit(row.id)\\\">\\r\\n          <mat-icon aria-label=\\\"Edit\\\">edit</mat-icon>\\r\\n        </button>\\r\\n\\r\\n        <button mat-icon-button color=\\\"warn\\\" (click)=\\\"deleteItem(row.id)\\\">\\r\\n          <mat-icon aria-label=\\\"Delete\\\">delete</mat-icon>\\r\\n        </button>\\r\\n      </mat-cell>\\r\\n    </ng-container>\\r\\n  </div>\\r\\n\\r\\n\\r\\n  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n  <!--<tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" (click)=\\\"tableClick(row.id)\\\"></tr>-->\\r\\n</table>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {AutoProp} from \"../../model/AutoProp\";\r\n\r\n@Component({\r\n  selector: 'app-prop',\r\n  templateUrl: './prop.component.html',\r\n  styleUrls: ['./prop.component.css']\r\n})\r\nexport class PropComponent implements OnInit {\r\n\r\n  displayedColumns: string[] = ['id', 'Name', 'Category', 'actions'];\r\n  prop: AutoProp[];\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<table mat-table #table [dataSource]=\\\"dataSource\\\" matSort class=\\\"mat-elevation-z8\\\">\\r\\n  <!-- Position Column -->\\r\\n  <ng-container matColumnDef=\\\"id\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> No. </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.id}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Name Column -->\\r\\n  <ng-container matColumnDef=\\\"ProblemName\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Problem </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.autoProblem.name}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Auto Column -->\\r\\n  <ng-container matColumnDef=\\\"Auto\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Auto </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.auto.autoMarka.name}}: {{element.auto.autoCategory.name}}</td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Date Column -->\\r\\n  <ng-container matColumnDef=\\\"Date\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Date </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.date | date: 'dd/MM/yyyy'}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- PersonalName Column -->\\r\\n  <ng-container matColumnDef=\\\"PersonalName\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Personal </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.autoPersonal.name}} {{element.autoPersonal.surname}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Price Column -->\\r\\n  <ng-container matColumnDef=\\\"Price\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Price </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.price}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- actions -->\\r\\n  <ng-container matColumnDef=\\\"actions\\\">\\r\\n    <mat-header-cell *matHeaderCellDef>\\r\\n      <button mat-icon-button color=\\\"primary\\\" (click)=\\\"addNew()\\\">\\r\\n        <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">add</mat-icon>\\r\\n      </button>\\r\\n    </mat-header-cell>\\r\\n\\r\\n    <mat-cell *matCellDef=\\\"let row; let i=index;\\\">\\r\\n      <button mat-icon-button color=\\\"primary\\\" (click)=\\\"startEdit(row.id)\\\">\\r\\n        <mat-icon aria-label=\\\"Edit\\\">edit</mat-icon>\\r\\n      </button>\\r\\n\\r\\n      <button mat-icon-button color=\\\"warn\\\" (click)=\\\"deleteItem(row.id)\\\">\\r\\n        <mat-icon aria-label=\\\"Delete\\\">delete</mat-icon>\\r\\n      </button>\\r\\n    </mat-cell>\\r\\n  </ng-container>\\r\\n\\r\\n  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n</table>\\r\\n\\r\\n<mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" pageSize=\\\"10\\\"></mat-paginator>\\r\\n\\r\\n\"","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {AutoRepair} from \"../../model/AutoRepair\";\r\nimport {MatDialog, MatPaginator, MatSort, MatTableDataSource} from \"@angular/material\";\r\nimport {DialogService} from \"../../services/dialog.service\";\r\nimport {Router} from \"@angular/router\";\r\nimport {ToastrService} from \"ngx-toastr\";\r\nimport {RepairService} from \"../../services/repair.service\";\r\nimport {AddRepairComponent} from \"../../dialogs/add/add-repair/add-repair.component\";\r\nimport {EditRepairComponent} from \"../../dialogs/edit/edit-repair/edit-repair.component\";\r\n\r\n@Component({\r\n  selector: 'app-repair',\r\n  templateUrl: './repair.component.html',\r\n  styleUrls: ['./repair.component.css']\r\n})\r\nexport class RepairComponent implements OnInit {\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  displayedColumns: string[] = ['id', 'ProblemName', 'Auto', 'Date', 'PersonalName', 'Price', 'actions'];\r\n  dataSource = new MatTableDataSource<any>();\r\n\r\n  constructor(private _repair: RepairService,\r\n              private _dialog: DialogService,\r\n              private router: Router,\r\n              private toastr: ToastrService,\r\n              private dialog: MatDialog) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getAll();\r\n\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n\r\n  }\r\n\r\n  getAll() {\r\n    this._repair.getAll().subscribe((res: AutoRepair[]) => {\r\n      this.dataSource.data = res;\r\n    });\r\n  }\r\n\r\n  addNew() {\r\n    const dialogRef = this.dialog.open(AddRepairComponent);\r\n\r\n    dialogRef.afterClosed().subscribe(res => {\r\n      if(res === 1) {\r\n        this._repair.add(this._dialog.dialogData).subscribe(\r\n          (res: AutoRepair) => {\r\n            this.dataSource.data.push(res);\r\n            this.dataSource = new MatTableDataSource<AutoRepair>(this.dataSource.data);\r\n            this.toastr.success('Data saved', 'Success');\r\n          },\r\n          (error) => {\r\n            this.toastr.error('Data do not saved', 'Error');\r\n          })\r\n      }\r\n    })\r\n  }\r\n\r\n  startEdit(id) {\r\n    const dialogRef = this.dialog.open(EditRepairComponent, {\r\n      data: {id: id}\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(res => {\r\n      if(res === 1) {\r\n        this._repair.update(this._dialog.dialogData.id, this._dialog.dialogData).subscribe((res: AutoRepair) => {\r\n            this.toastr.success('Update success', 'Success');\r\n\r\n            const foundIndex = this.dataSource.data.findIndex(x => x.id === res.id);\r\n            this.dataSource.data[foundIndex] = res;\r\n\r\n            this.dataSource = new MatTableDataSource<AutoRepair>(this.dataSource.data)\r\n\r\n          },\r\n          (error) => {this.toastr.error('Updating Error', 'Error')\r\n          });\r\n      }\r\n    })\r\n  }\r\n\r\n  deleteItem(id) {\r\n    this._repair.delete(id).subscribe(\r\n      (res) => {\r\n        this.dataSource.data = this.dataSource.data.filter(data => data.id !== id);\r\n        this.toastr.success('Delete success', 'Success');\r\n      },\r\n      (error) => {\r\n        this.toastr.error('Delete failed', 'Error');\r\n      }\r\n    )\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<table mat-table #table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">\\r\\n  <!-- Position Column -->\\r\\n  <ng-container matColumnDef=\\\"id\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> No. </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.id}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Street Column -->\\r\\n  <ng-container matColumnDef=\\\"Street\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Street </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.autoStreet.street_start}} - {{element.autoStreet.street_finish}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Category Column -->\\r\\n  <ng-container matColumnDef=\\\"Auto\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Auto </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.auto.autoCategory.name}} - {{element.auto.autoMarka.name}}</td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- PassangerCount Column -->\\r\\n  <ng-container matColumnDef=\\\"Count\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Number of passengers </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.passanger_count}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- actions -->\\r\\n  <div class=\\\"actions\\\">\\r\\n    <ng-container matColumnDef=\\\"actions\\\">\\r\\n      <mat-header-cell *matHeaderCellDef>\\r\\n        <button mat-icon-button color=\\\"primary\\\" (click)=\\\"addNew()\\\">\\r\\n          <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">add</mat-icon>\\r\\n        </button>\\r\\n      </mat-header-cell>\\r\\n\\r\\n      <mat-cell *matCellDef=\\\"let row; let i=index;\\\">\\r\\n        <button mat-icon-button color=\\\"primary\\\" (click)=\\\"startEdit(row.id)\\\">\\r\\n          <mat-icon aria-label=\\\"Edit\\\">edit</mat-icon>\\r\\n        </button>\\r\\n\\r\\n        <button mat-icon-button color=\\\"warn\\\" (click)=\\\"deleteItem(row.id)\\\">\\r\\n          <mat-icon aria-label=\\\"Delete\\\">delete</mat-icon>\\r\\n        </button>\\r\\n      </mat-cell>\\r\\n    </ng-container>\\r\\n  </div>\\r\\n\\r\\n\\r\\n  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n</table>\\r\\n\\r\\n<mat-paginator #paginator\\r\\n               [length]=\\\"dataSource.filteredData.length\\\"\\r\\n               [pageIndex]=\\\"0\\\"\\r\\n               [pageSize]=\\\"10\\\"\\r\\n               [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\">\\r\\n</mat-paginator>\\r\\n\"","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {AutoRoute} from \"../../model/AutoRoute\";\r\nimport {MatDialog, MatPaginator, MatSort, MatTableDataSource} from \"@angular/material\";\r\nimport {DialogService} from \"../../services/dialog.service\";\r\nimport {Router} from \"@angular/router\";\r\nimport {ToastrService} from \"ngx-toastr\";\r\nimport {RouteService} from \"../../services/route.service\";\r\nimport {DialogsRouteComponent} from \"../../dialogs/dialogs-route/dialogs-route.component\";\r\n\r\n@Component({\r\n  selector: 'app-route',\r\n  templateUrl: './route.component.html',\r\n  styleUrls: ['./route.component.css']\r\n})\r\nexport class RouteComponent implements OnInit {\r\n\r\n  displayedColumns: string[] = ['id', 'Street', 'Auto', 'Count', 'actions'];\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  dataSource = new MatTableDataSource<any>();\r\n\r\n  constructor(private _route: RouteService,\r\n              private _dialog: DialogService,\r\n              private router: Router,\r\n              private toastr: ToastrService,\r\n              private dialog: MatDialog) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getAll();\r\n\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  getAll() {\r\n    this._route.getAll().subscribe((res: AutoRoute[]) => {\r\n      this.dataSource.data = res;\r\n      console.log(res);\r\n    });\r\n  }\r\n\r\n  addNew() {\r\n    const dialogRef = this.dialog.open(DialogsRouteComponent, {\r\n      data: {status: 1}\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(res => {\r\n      if(res === 1) {\r\n        this._route.add(this._dialog.dialogData).subscribe(\r\n          (res: AutoRoute) => {\r\n            this.dataSource.data.push(res);\r\n            this.dataSource = new MatTableDataSource<AutoRoute>(this.dataSource.data);\r\n            this.toastr.success('Data saved', 'Success');\r\n          },\r\n          (error) => {\r\n            this.toastr.error('Data do not saved', 'Error');\r\n          })\r\n      }\r\n    })\r\n  }\r\n\r\n  startEdit(id) {\r\n    const dialogRef = this.dialog.open(DialogsRouteComponent, {\r\n      data: {id: id, status: 0}\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(res => {\r\n      if(res === 1) {\r\n        this._route.update(this._dialog.dialogData.id, this._dialog.dialogData).subscribe((res: AutoRoute) => {\r\n            this.toastr.success('Update success', 'Success');\r\n\r\n            const foundIndex = this.dataSource.data.findIndex(x => x.id === res.id);\r\n            this.dataSource.data[foundIndex] = res;\r\n\r\n            this.dataSource = new MatTableDataSource<AutoRoute>(this.dataSource.data)\r\n\r\n          },\r\n          (error) => {this.toastr.error('Updating Error', 'Error')\r\n          });\r\n      }\r\n    })\r\n  }\r\n\r\n  deleteItem(id) {\r\n    this._route.delete(id).subscribe(\r\n      (res) => {\r\n        this.dataSource.data = this.dataSource.data.filter(data => data.id !== id);\r\n        this.toastr.success('Delete success', 'Success');\r\n      },\r\n      (error) => {\r\n        this.toastr.error('Delete failed', 'Error');\r\n      }\r\n    )\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<table mat-table #table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">\\r\\n  <!-- Position Column -->\\r\\n  <ng-container matColumnDef=\\\"id\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> No. </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.id}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Category Column -->\\r\\n  <ng-container matColumnDef=\\\"Category\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Category </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.auto.autoCategory.name}}</td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Marka Column -->\\r\\n  <ng-container matColumnDef=\\\"Marka\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Marka </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.auto.autoMarka.name}}</td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Date Column -->\\r\\n  <ng-container matColumnDef=\\\"Date\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Date </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.date | date: 'dd/MM/yyyy'}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- saleBuy Column -->\\r\\n  <ng-container matColumnDef=\\\"saleBuy\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Sale / Buy </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.sale_buy ? 'Buy' : 'Sale'}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Price Column -->\\r\\n  <ng-container matColumnDef=\\\"Price\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Price </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.price}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- actions -->\\r\\n  <div class=\\\"actions\\\">\\r\\n    <ng-container matColumnDef=\\\"actions\\\">\\r\\n      <mat-header-cell *matHeaderCellDef>\\r\\n        <button mat-icon-button color=\\\"primary\\\" (click)=\\\"addNew()\\\">\\r\\n          <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">add</mat-icon>\\r\\n        </button>\\r\\n      </mat-header-cell>\\r\\n\\r\\n      <mat-cell *matCellDef=\\\"let row; let i=index;\\\">\\r\\n        <button mat-icon-button color=\\\"primary\\\" (click)=\\\"startEdit(row.id)\\\">\\r\\n          <mat-icon aria-label=\\\"Edit\\\">edit</mat-icon>\\r\\n        </button>\\r\\n\\r\\n        <button mat-icon-button color=\\\"warn\\\" (click)=\\\"deleteItem(row.id)\\\">\\r\\n          <mat-icon aria-label=\\\"Delete\\\">delete</mat-icon>\\r\\n        </button>\\r\\n      </mat-cell>\\r\\n    </ng-container>\\r\\n  </div>\\r\\n\\r\\n\\r\\n  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n</table>\\r\\n\\r\\n<mat-paginator #paginator\\r\\n               [length]=\\\"dataSource.filteredData.length\\\"\\r\\n               [pageIndex]=\\\"0\\\"\\r\\n               [pageSize]=\\\"10\\\"\\r\\n               [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\">\\r\\n</mat-paginator>\\r\\n\"","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {AutoSaleBuy} from \"../../model/AutoSaleBuy\";\r\nimport {MatDialog, MatPaginator, MatSort, MatTableDataSource} from \"@angular/material\";\r\nimport {DialogService} from \"../../services/dialog.service\";\r\nimport {Router} from \"@angular/router\";\r\nimport {ToastrService} from \"ngx-toastr\";\r\nimport {SaleBuyService} from \"../../services/sale-buy.service\";\r\nimport {AutoBrigada} from \"../../model/AutoBrigada\";\r\nimport {AddSaleBuyComponent} from \"../../dialogs/add/add-sale-buy/add-sale-buy.component\";\r\nimport {EditSaleBuyComponent} from \"../../dialogs/edit/edit-sale-buy/edit-sale-buy.component\";\r\nimport {DatePipe} from \"@angular/common\";\r\n\r\n@Component({\r\n  selector: 'app-sale-buy',\r\n  templateUrl: './sale-buy.component.html',\r\n  styleUrls: ['./sale-buy.component.css']\r\n})\r\nexport class SaleBuyComponent implements OnInit {\r\n  displayedColumns: string[] = ['id', 'Category', 'Marka', 'Date', 'saleBuy', 'Price', 'actions'];\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  dataSource = new MatTableDataSource<any>();\r\n\r\n  constructor(private _saleBuy: SaleBuyService,\r\n              private _dialog: DialogService,\r\n              private router: Router,\r\n              private datepipe: DatePipe,\r\n              private toastr: ToastrService,\r\n              private dialog: MatDialog) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getAll();\r\n\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  getAll() {\r\n    this._saleBuy.getAll().subscribe((res: AutoSaleBuy[]) => {\r\n      this.dataSource.data = res;\r\n    });\r\n  }\r\n\r\n  addNew() {\r\n    const dialogRef = this.dialog.open(AddSaleBuyComponent);\r\n\r\n    dialogRef.afterClosed().subscribe(res => {\r\n      if(res === 1) {\r\n        this._saleBuy.add(this._dialog.dialogData).subscribe(\r\n          (res: AutoSaleBuy) => {\r\n            this.dataSource.data.push(res);\r\n            this.dataSource = new MatTableDataSource<AutoBrigada>(this.dataSource.data);\r\n            this.toastr.success('Data saved', 'Success');\r\n          },\r\n          (error) => {\r\n            this.toastr.error('Data do not saved', 'Error');\r\n          })\r\n      }\r\n    })\r\n  }\r\n\r\n  startEdit(id) {\r\n    const dialogRef = this.dialog.open(EditSaleBuyComponent, {\r\n      data: {id: id}\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(res => {\r\n      if(res === 1) {\r\n        this._saleBuy.update(this._dialog.dialogData.id, this._dialog.dialogData).subscribe((res: AutoSaleBuy) => {\r\n            this.toastr.success('Update success', 'Success');\r\n\r\n            const foundIndex = this.dataSource.data.findIndex(x => x.id === res.id);\r\n            this.dataSource.data[foundIndex] = res;\r\n\r\n            this.dataSource = new MatTableDataSource<AutoBrigada>(this.dataSource.data)\r\n\r\n          },\r\n          (error) => {this.toastr.error('Updating Error', 'Error')\r\n          });\r\n      }\r\n    })\r\n  }\r\n\r\n  deleteItem(id) {\r\n    this._saleBuy.delete(id).subscribe(\r\n      (res) => {\r\n        this.dataSource.data = this.dataSource.data.filter(data => data.id !== id);\r\n        this.toastr.success('Delete success', 'Success');\r\n      },\r\n      (error) => {\r\n        this.toastr.error('Delete failed', 'Error');\r\n      }\r\n    )\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<table mat-table #table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">\\r\\n  <!-- Position Column -->\\r\\n  <ng-container matColumnDef=\\\"id\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> No. </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.id}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- StreetStart Column -->\\r\\n  <ng-container matColumnDef=\\\"StreetStart\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> StreetStart </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.street_start}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- StreetFinish Column -->\\r\\n  <ng-container matColumnDef=\\\"StreetFinish\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> StreetFinish </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.street_finish}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Intervall Column -->\\r\\n  <ng-container matColumnDef=\\\"Intervall\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Intervall </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.intervall}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- actions -->\\r\\n  <div class=\\\"actions\\\">\\r\\n    <ng-container matColumnDef=\\\"actions\\\">\\r\\n      <mat-header-cell *matHeaderCellDef>\\r\\n        <button mat-icon-button color=\\\"primary\\\" (click)=\\\"addNew()\\\">\\r\\n          <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">add</mat-icon>\\r\\n        </button>\\r\\n      </mat-header-cell>\\r\\n\\r\\n      <mat-cell *matCellDef=\\\"let row; let i=index;\\\">\\r\\n        <button mat-icon-button color=\\\"primary\\\" (click)=\\\"startEdit(row.id)\\\">\\r\\n          <mat-icon aria-label=\\\"Edit\\\">edit</mat-icon>\\r\\n        </button>\\r\\n\\r\\n        <button mat-icon-button color=\\\"warn\\\" (click)=\\\"deleteItem(row.id)\\\">\\r\\n          <mat-icon aria-label=\\\"Delete\\\">delete</mat-icon>\\r\\n        </button>\\r\\n      </mat-cell>\\r\\n    </ng-container>\\r\\n  </div>\\r\\n\\r\\n\\r\\n  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n</table>\\r\\n\\r\\n<mat-paginator #paginator\\r\\n               [length]=\\\"dataSource.filteredData.length\\\"\\r\\n               [pageIndex]=\\\"0\\\"\\r\\n               [pageSize]=\\\"10\\\"\\r\\n               [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\">\\r\\n</mat-paginator>\\r\\n\"","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {AutoStreet} from \"../../model/AutoStreet\";\r\nimport {MatDialog, MatPaginator, MatSort, MatTableDataSource} from \"@angular/material\";\r\nimport {DialogService} from \"../../services/dialog.service\";\r\nimport {Router} from \"@angular/router\";\r\nimport {ToastrService} from \"ngx-toastr\";\r\nimport {StreetService} from \"../../services/street.service\";\r\nimport {DialogsStreetComponent} from \"../../dialogs/dialogs-street/dialogs-street.component\";\r\n\r\n@Component({\r\n  selector: 'app-street',\r\n  templateUrl: './street.component.html',\r\n  styleUrls: ['./street.component.css']\r\n})\r\nexport class StreetComponent implements OnInit {\r\n\r\n  displayedColumns: string[] = ['id', 'StreetStart', 'StreetFinish', 'Intervall', 'actions'];\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  dataSource = new MatTableDataSource<any>();\r\n\r\n  constructor(private _street: StreetService,\r\n              private _dialog: DialogService,\r\n              private router: Router,\r\n              private toastr: ToastrService,\r\n              private dialog: MatDialog) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getAll();\r\n\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n\r\n  }\r\n\r\n  getAll() {\r\n    this._street.getAll().subscribe((res: AutoStreet[]) => {\r\n      this.dataSource.data = res;\r\n    });\r\n  }\r\n\r\n  addNew() {\r\n    const dialogRef = this.dialog.open(DialogsStreetComponent, {\r\n      data: {status: 1}\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(res => {\r\n      if(res === 1) {\r\n        this._street.add(this._dialog.dialogData).subscribe(\r\n          (res: AutoStreet) => {\r\n            this.dataSource.data.push(res);\r\n            this.dataSource = new MatTableDataSource<AutoStreet>(this.dataSource.data);\r\n            this.toastr.success('Data saved', 'Success');\r\n          },\r\n          (error) => {\r\n            this.toastr.error('Data do not saved', 'Error');\r\n          })\r\n      }\r\n    })\r\n  }\r\n\r\n  startEdit(id) {\r\n    const dialogRef = this.dialog.open(DialogsStreetComponent, {\r\n      data: {id: id, status: 0}\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(res => {\r\n      if(res === 1) {\r\n        this._street.update(this._dialog.dialogData.id, this._dialog.dialogData).subscribe((res: AutoStreet) => {\r\n            this.toastr.success('Update success', 'Success');\r\n\r\n            const foundIndex = this.dataSource.data.findIndex(x => x.id === res.id);\r\n            this.dataSource.data[foundIndex] = res;\r\n\r\n            this.dataSource = new MatTableDataSource<AutoStreet>(this.dataSource.data)\r\n\r\n          },\r\n          (error) => {this.toastr.error('Updating Error', 'Error')\r\n          });\r\n      }\r\n    })\r\n  }\r\n\r\n  deleteItem(id) {\r\n    this._street.delete(id).subscribe(\r\n      (res) => {\r\n        this.dataSource.data = this.dataSource.data.filter(data => data.id !== id);\r\n        this.toastr.success('Delete success', 'Success');\r\n      },\r\n      (error) => {\r\n        this.toastr.error('Delete failed', 'Error');\r\n      }\r\n    )\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<table mat-table #table [dataSource]=\\\"dataSource\\\" matSort class=\\\"mat-elevation-z8\\\">\\r\\n  <!-- Position Column -->\\r\\n  <ng-container matColumnDef=\\\"id\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> No. </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.id}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Name Column -->\\r\\n  <ng-container matColumnDef=\\\"email\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> Email </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.email}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Weight Column -->\\r\\n  <ng-container matColumnDef=\\\"password\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> Password </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.password}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- actions -->\\r\\n  <ng-container matColumnDef=\\\"actions\\\">\\r\\n    <mat-header-cell *matHeaderCellDef>\\r\\n      <button mat-icon-button color=\\\"primary\\\" (click)=\\\"addNew()\\\">\\r\\n        <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">add</mat-icon>\\r\\n      </button>\\r\\n    </mat-header-cell>\\r\\n\\r\\n    <mat-cell *matCellDef=\\\"let row; let i=index;\\\">\\r\\n      <button mat-icon-button color=\\\"primary\\\" (click)=\\\"startEdit(row.id)\\\">\\r\\n        <mat-icon aria-label=\\\"Edit\\\">edit</mat-icon>\\r\\n      </button>\\r\\n\\r\\n      <button mat-icon-button color=\\\"warn\\\" (click)=\\\"deleteItem(row.id)\\\">\\r\\n        <mat-icon aria-label=\\\"Delete\\\">delete</mat-icon>\\r\\n      </button>\\r\\n    </mat-cell>\\r\\n  </ng-container>\\r\\n\\r\\n  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n</table>\\r\\n\\r\\n<mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" pageSize=\\\"10\\\"></mat-paginator>\\r\\n\"","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {User} from \"../../model/User\";\r\nimport {UserService} from \"../../services/user.service\";\r\nimport {ActivatedRoute, Router} from \"@angular/router\";\r\nimport {MatDialog, MatPaginator, MatSort, MatTableDataSource} from \"@angular/material\";\r\nimport {ToastrService} from \"ngx-toastr\";\r\nimport {EditUserComponent} from \"../../dialogs/edit/edit-user/edit-user.component\";\r\nimport {AddUserComponent} from \"../../dialogs/add/add-user/add-user.component\";\r\nimport {pipe} from \"rxjs\";\r\nimport {map} from \"rxjs/operators\";\r\nimport {DialogService} from \"../../services/dialog.service\";\r\n\r\n@Component({\r\n  selector: 'app-user',\r\n  templateUrl: './user.component.html',\r\n  styleUrls: ['./user.component.css']\r\n})\r\nexport class UserComponent implements OnInit {\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  displayedColumns: string[] = ['id', 'email', 'password', 'actions'];\r\n  dataSource = new MatTableDataSource<User>();\r\n\r\n  constructor(private _user: UserService,\r\n              private _dialog: DialogService,\r\n              private router: Router,\r\n              private toastr: ToastrService,\r\n              private dialog: MatDialog) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getAll();\r\n\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  getAll() {\r\n    this._user.getAll().subscribe((res: any) => {\r\n      this.dataSource.data = res;\r\n    });\r\n  }\r\n\r\n\r\n  // ANOTHER FUNCTION\r\n  tableClick(id) {\r\n    this._user.getSingle(id).subscribe((res: User) => {\r\n      this.router.navigate(['user/', id])\r\n    });\r\n  }\r\n\r\n  addNew() {\r\n    const dialogRef = this.dialog.open(AddUserComponent);\r\n\r\n    dialogRef.afterClosed().subscribe(res => {\r\n      if (res === 1) {\r\n        this._user.add(this._dialog.dialogData).subscribe(\r\n          (res: User) => {\r\n            this.dataSource.data.push(res);\r\n            this.dataSource = new MatTableDataSource<User>(this.dataSource.data);\r\n            this.toastr.success('Data saved', 'Success');\r\n          },\r\n          (error) => {\r\n            this.toastr.error('Data do not saved', 'Error');\r\n          })\r\n      }\r\n    })\r\n  }\r\n\r\n  startEdit(id) {\r\n    const dialogRef = this.dialog.open(EditUserComponent, {\r\n      data: {id: id}\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(res => {\r\n      if (res === 1) {\r\n        this._user.update(this._dialog.dialogData.id, this._dialog.dialogData).subscribe((res: User) => {\r\n            this.toastr.success('Update success', 'Success');\r\n\r\n            const foundIndex = this.dataSource.data.findIndex(x => x.id === res.id);\r\n            this.dataSource.data[foundIndex] = res;\r\n\r\n            this.dataSource = new MatTableDataSource<User>(this.dataSource.data)\r\n\r\n          },\r\n          (error) => {\r\n            this.toastr.error('Updating Error', 'Error')\r\n          });\r\n      }\r\n    })\r\n  }\r\n\r\n  deleteItem(id) {\r\n    this._user.delete(id).subscribe(\r\n      (res) => {\r\n        this.dataSource.data = this.dataSource.data.filter(data => data.id !== id);\r\n        this.toastr.success('Delete success', 'Success');\r\n      },\r\n      (error) => {\r\n        this.toastr.error('Delete failed', 'Error');\r\n      }\r\n    )\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<table mat-table #table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">\\r\\n  <!-- Position Column -->\\r\\n  <ng-container matColumnDef=\\\"id\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> No. </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.id}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Name Column -->\\r\\n  <ng-container matColumnDef=\\\"Category\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Category </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.autoCategory.name}}</td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Weight Column -->\\r\\n  <ng-container matColumnDef=\\\"Marka\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Marka </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.autoMarka.name}}</td>\\r\\n  </ng-container>\\r\\n\\r\\n  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n  <!--<tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" (click)=\\\"tableClick(row.id)\\\"></tr>-->\\r\\n</table>\\r\\n\"","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {MatPaginator, MatSort, MatTableDataSource} from \"@angular/material\";\r\nimport {Auto} from \"../../model/Auto\";\r\nimport {QueryService} from \"../../services/query.service\";\r\n\r\n@Component({\r\n  selector: 'app-query1',\r\n  templateUrl: './query1.component.html',\r\n  styleUrls: ['./query1.component.css']\r\n})\r\nexport class Query1Component implements OnInit {\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  displayedColumns: string[] = ['id', 'Category', 'Marka'];\r\n  dataSource = new MatTableDataSource<Auto>();\r\n\r\n  constructor(private query: QueryService) {\r\n    this.executeQuery();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  executeQuery() {\r\n    this.query.query1().subscribe(res => {\r\n      console.log(res);\r\n      this.dataSource.data = res;\r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \".modal {\\r\\n  width: 400px;\\r\\n  height: auto;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"modal\\\">\\r\\n  <mat-grid-list cols=\\\"1\\\" rowHeight=\\\"60px\\\">\\r\\n    <form class=\\\"form\\\" #formControl=\\\"ngForm\\\" [formGroup]=\\\"form\\\">\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <mat-label>Auto</mat-label>\\r\\n          <mat-select (selectionChange)=\\\"selectedAuto($event.value)\\\" formControlName=\\\"auto\\\">\\r\\n            <mat-option>None</mat-option>\\r\\n            <mat-option *ngFor=\\\"let item of auto\\\" [value]=\\\"item.id\\\">\\r\\n              {{item.autoCategory.name}} - {{item.autoMarka.name}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Choose a date\\\" formControlName=\\\"date\\\">\\r\\n          <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n          <mat-datepicker #picker></mat-datepicker>\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <button mat-button\\r\\n                color=\\\"primary\\\"\\r\\n                [disabled]=\\\"!formControl.valid\\\"\\r\\n                [mat-dialog-close]=\\\"1\\\"\\r\\n                (click)=\\\"stop()\\\">\\r\\n          Create\\r\\n        </button>\\r\\n        <button mat-button\\r\\n                color=\\\"warn\\\"\\r\\n                (click)=\\\"onNoClick()\\\"\\r\\n                tabindex=\\\"-1\\\">\\r\\n          Cancel\\r\\n        </button>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n    </form>\\r\\n  </mat-grid-list>\\r\\n</div>\\r\\n\"","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup} from \"@angular/forms\";\r\nimport {Auto} from \"../../../model/Auto\";\r\nimport {DialogService} from \"../../../services/dialog.service\";\r\nimport {RouteService} from \"../../../services/route.service\";\r\nimport {AutoService} from \"../../../services/auto.service\";\r\nimport {QueryService} from \"../../../services/query.service\";\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material\";\r\nimport {DatePipe} from \"@angular/common\";\r\n\r\n@Component({\r\n  selector: 'app-q10d',\r\n  templateUrl: './q10d.component.html',\r\n  styleUrls: ['./q10d.component.css']\r\n})\r\nexport class Q10dComponent implements OnInit {\r\n  form: FormGroup;\r\n  auto: Auto[];\r\n  private selectAuto: number;\r\n\r\n  constructor(private _dialog: DialogService,\r\n              private _route: RouteService,\r\n              private _auto: AutoService,\r\n              private query: QueryService,\r\n              private formBuilder: FormBuilder,\r\n              private datepipe: DatePipe,\r\n              private dialogRef: MatDialogRef<Q10dComponent>,\r\n              @Inject(MAT_DIALOG_DATA) private data: any) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.form = this.formBuilder.group({\r\n      auto: null,\r\n      date: null\r\n    });\r\n    this.getAutos();\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  stop(): void {\r\n    this.form.setValue({auto: this.selectAuto,\r\n      date: this.datepipe.transform(this.form.getRawValue().date, 'yyyy-MM-dd')});\r\n      this.query.dialogsForm = this.form.value;\r\n  }\r\n\r\n  private getAutos() {\r\n    this._auto.getAll().subscribe(res => {\r\n      this.auto = res;\r\n    });\r\n  }\r\n\r\n  selectedAuto(event) {\r\n    if(event !== undefined) {\r\n      this._auto.getSingle(event).subscribe(res => {\r\n        this.selectAuto = res.id;\r\n      });\r\n    } else {\r\n      this.selectAuto = null;\r\n    }\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<table mat-table #table [dataSource]=\\\"dataSource\\\" matSort class=\\\"mat-elevation-z8\\\">\\r\\n  <!-- Position Column -->\\r\\n  <ng-container matColumnDef=\\\"id\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> No. </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.id}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- PointStart Column -->\\r\\n  <ng-container matColumnDef=\\\"PointStart\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> PointStart </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.point_start}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- PointFinish Column -->\\r\\n  <ng-container matColumnDef=\\\"PointFinish\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> PointFinish </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.point_finish}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- DateStart Column -->\\r\\n  <ng-container matColumnDef=\\\"DateStart\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> DateStart </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.date_start | date: 'dd/MM/yyyy'}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- DateFinish Column -->\\r\\n  <ng-container matColumnDef=\\\"DateFinish\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> DateFinish </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.date_finish | date: 'dd/MM/yyyy'}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Category Column -->\\r\\n  <ng-container matColumnDef=\\\"Category\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Category Name </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.auto.autoCategory.name}}</td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Marka Column -->\\r\\n  <ng-container matColumnDef=\\\"Marka\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Marka Name </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.auto.autoMarka.name}}</td>\\r\\n  </ng-container>\\r\\n\\r\\n  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n</table>\\r\\n\\r\\n<mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" pageSize=\\\"10\\\"></mat-paginator>\\r\\n\"","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {MatDialog, MatPaginator, MatSort, MatTableDataSource} from \"@angular/material\";\r\nimport {Auto} from \"../../model/Auto\";\r\nimport {QueryService} from \"../../services/query.service\";\r\nimport {Q10dComponent} from \"./q10d/q10d.component\";\r\n\r\n@Component({\r\n  selector: 'app-query10',\r\n  templateUrl: './query10.component.html',\r\n  styleUrls: ['./query10.component.css']\r\n})\r\nexport class Query10Component implements OnInit {\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  displayedColumns: string[] = ['id', 'PointStart', 'PointFinish', 'DateStart', 'DateFinish', 'Category', 'Marka'];\r\n  dataSource = new MatTableDataSource<Auto>();\r\n\r\n  constructor(private query: QueryService,\r\n              private dialog: MatDialog) {\r\n    this.openDialog();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  openDialog() {\r\n    const dialogRef = this.dialog.open(Q10dComponent);\r\n\r\n    dialogRef.afterClosed().subscribe(res => {\r\n      if (res === 1) {\r\n        this.executeQuery();\r\n      }\r\n    })\r\n  }\r\n\r\n  executeQuery() {\r\n    this.query.query10(this.query.dialogsForm.auto, this.query.dialogsForm.date).subscribe(res => {\r\n      console.log(res);\r\n      this.dataSource.data = res;\r\n    });\r\n  }\r\n}\r\n","module.exports = \".modal {\\r\\n  width: 400px;\\r\\n  height: auto;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"modal\\\">\\n  <mat-grid-list cols=\\\"1\\\" rowHeight=\\\"60px\\\">\\n    <form class=\\\"form\\\" #formControl=\\\"ngForm\\\" [formGroup]=\\\"form\\\">\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <mat-label>Category</mat-label>\\n          <mat-select (selectionChange)=\\\"selectedCategory($event.value)\\\">\\n            <mat-option>None</mat-option>\\n            <mat-option *ngFor=\\\"let item of categorys\\\" [value]=\\\"item.id\\\">\\n              {{item.name}}\\n            </mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <mat-label>Marka</mat-label>\\n          <mat-select (selectionChange)=\\\"selectedDetail($event.value)\\\">\\n            <mat-option>None</mat-option>\\n            <mat-option *ngFor=\\\"let item of details\\\" [value]=\\\"item.id\\\">\\n              {{item.name}}\\n            </mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <button mat-button\\n                color=\\\"primary\\\"\\n                [disabled]=\\\"!formControl.valid\\\"\\n                [mat-dialog-close]=\\\"1\\\"\\n                (click)=\\\"stop()\\\">\\n          Create\\n        </button>\\n        <button mat-button\\n                color=\\\"warn\\\"\\n                (click)=\\\"onNoClick()\\\"\\n                tabindex=\\\"-1\\\">\\n          Cancel\\n        </button>\\n      </mat-grid-tile>\\n    </form>\\n  </mat-grid-list>\\n</div>\\n\"","import {Component, Inject, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup} from \"@angular/forms\";\nimport {Auto} from \"../../../model/Auto\";\nimport {AutoCategory} from \"../../../model/AutoCategory\";\nimport {AutoMarka} from \"../../../model/AutoMarka\";\nimport {DialogService} from \"../../../services/dialog.service\";\nimport {AutoService} from \"../../../services/auto.service\";\nimport {CategoryService} from \"../../../services/category.service\";\nimport {MarkaService} from \"../../../services/marka.service\";\nimport {QueryService} from \"../../../services/query.service\";\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material\";\nimport {ProblemService} from \"../../../services/problem.service\";\nimport {AutoProblem} from \"../../../model/AutoProblem\";\n\n@Component({\n  selector: 'app-q11d',\n  templateUrl: './q11d.component.html',\n  styleUrls: ['./q11d.component.css']\n})\nexport class Q11dComponent implements OnInit {\n  form: FormGroup;\n  categorys: AutoCategory[];\n  details: AutoProblem[];\n\n  constructor(private _dialog: DialogService,\n              private _category: CategoryService,\n              private _problem: ProblemService,\n              private query: QueryService,\n              private formBuilder: FormBuilder,\n              private dialogRef: MatDialogRef<Q11dComponent>,\n              @Inject(MAT_DIALOG_DATA) private data: any) {\n\n  }\n\n  ngOnInit() {\n    this.form = this.formBuilder.group({\n      category: null,\n      detail: null,\n    });\n    this.getCategorys();\n    this.getDetails();\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  stop(): void {\n    this.query.dialogsForm = this.form.value;\n  }\n\n  selectedCategory(event) {\n    this._category.getSingle(event).subscribe(res => {\n      this.form.patchValue({\n        category: res.name\n      });\n    });\n  }\n\n  selectedDetail(event) {\n    this._problem.getSingle(event).subscribe(res => {\n      this.form.patchValue({\n        detail: res.name\n      });\n    });\n  }\n\n  private getCategorys() {\n    this._category.getAll().subscribe(res => {\n      this.categorys = res;\n    });\n  }\n\n  private getDetails() {\n    this._problem.getAll().subscribe(res => {\n      this.details = res;\n    });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<table mat-table #table [dataSource]=\\\"dataSource\\\" matSort class=\\\"mat-elevation-z8\\\">\\n  <!-- Position Column -->\\n  <ng-container matColumnDef=\\\"id\\\">\\n    <th mat-header-cell *matHeaderCellDef> No. </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.id}} </td>\\n  </ng-container>\\n\\n  <!-- Name Column -->\\n  <ng-container matColumnDef=\\\"ProblemName\\\">\\n    <th mat-header-cell *matHeaderCellDef> Problem </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.autoProblem.name}} </td>\\n  </ng-container>\\n\\n  <!-- Auto Column -->\\n  <ng-container matColumnDef=\\\"Auto\\\">\\n    <th mat-header-cell *matHeaderCellDef> Auto </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.auto.autoMarka.name}}: {{element.auto.autoCategory.name}}</td>\\n  </ng-container>\\n\\n  <!-- Date Column -->\\n  <ng-container matColumnDef=\\\"Date\\\">\\n    <th mat-header-cell *matHeaderCellDef> Date </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.date | date: 'dd/MM/yyyy'}} </td>\\n  </ng-container>\\n\\n  <!-- PersonalName Column -->\\n  <ng-container matColumnDef=\\\"PersonalName\\\">\\n    <th mat-header-cell *matHeaderCellDef> Personal </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.autoPersonal.name}} {{element.autoPersonal.surname}} </td>\\n  </ng-container>\\n\\n  <!-- Price Column -->\\n  <ng-container matColumnDef=\\\"Price\\\">\\n    <th mat-header-cell *matHeaderCellDef> Price </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.price}} </td>\\n  </ng-container>\\n\\n  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n</table>\\n\\n<mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" pageSize=\\\"10\\\"></mat-paginator>\\n\\n\"","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {MatDialog, MatPaginator, MatSort, MatTableDataSource} from \"@angular/material\";\nimport {Auto} from \"../../model/Auto\";\nimport {QueryService} from \"../../services/query.service\";\nimport {Q11dComponent} from \"./q11d/q11d.component\";\n\n@Component({\n  selector: 'app-query11',\n  templateUrl: './query11.component.html',\n  styleUrls: ['./query11.component.css']\n})\nexport class Query11Component implements OnInit {\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  displayedColumns: string[] = ['id', 'ProblemName', 'Auto', 'Date', 'PersonalName', 'Price'];\n  dataSource = new MatTableDataSource<Auto>();\n\n  constructor(private query: QueryService,\n              private dialog: MatDialog) {\n    this.openDialog();\n  }\n\n  ngOnInit() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  openDialog() {\n    const dialogRef = this.dialog.open(Q11dComponent);\n\n    dialogRef.afterClosed().subscribe(res => {\n      if (res === 1) {\n        this.executeQuery();\n      }\n    })\n  }\n\n  executeQuery() {\n    this.query.query11(this.query.dialogsForm.category, this.query.dialogsForm.detail).subscribe(res => {\n      console.log(res);\n      this.dataSource.data = res;\n    });\n  }\n\n}\n","module.exports = \".modal {\\r\\n  width: 400px;\\r\\n  height: auto;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"modal\\\">\\n  <mat-grid-list cols=\\\"1\\\" rowHeight=\\\"60px\\\">\\n    <form class=\\\"form\\\" #formControl=\\\"ngForm\\\" [formGroup]=\\\"form\\\">\\n\\n      <mat-grid-tile>\\n        <mat-slide-toggle (toggleChange)=\\\"toggleButton()\\\" formControlName=\\\"status\\\">\\n          <mat-label>{{toggle ? 'Buy' : 'Sale'}}</mat-label>\\n        </mat-slide-toggle>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Choose a start date\\\" formControlName=\\\"date_start\\\">\\n          <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n          <mat-datepicker #picker></mat-datepicker>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput [matDatepicker]=\\\"picker1\\\" placeholder=\\\"Choose a finish date\\\" formControlName=\\\"date_finish\\\">\\n          <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\n          <mat-datepicker #picker1></mat-datepicker>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <button mat-button\\n                color=\\\"primary\\\"\\n                [disabled]=\\\"!formControl.valid\\\"\\n                [mat-dialog-close]=\\\"1\\\"\\n                (click)=\\\"stop()\\\">\\n          Create\\n        </button>\\n        <button mat-button\\n                color=\\\"warn\\\"\\n                (click)=\\\"onNoClick()\\\"\\n                tabindex=\\\"-1\\\">\\n          Cancel\\n        </button>\\n      </mat-grid-tile>\\n\\n    </form>\\n  </mat-grid-list>\\n</div>\\n\"","import {Component, Inject, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup} from \"@angular/forms\";\nimport {DialogService} from \"../../../services/dialog.service\";\nimport {QueryService} from \"../../../services/query.service\";\nimport {DatePipe} from \"@angular/common\";\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material\";\n\n@Component({\n  selector: 'app-q12d',\n  templateUrl: './q12d.component.html',\n  styleUrls: ['./q12d.component.css']\n})\nexport class Q12dComponent implements OnInit {\n  form: FormGroup;\n  toggle: boolean;\n\n  constructor(private _dialog: DialogService,\n              private query: QueryService,\n              private formBuilder: FormBuilder,\n              private datepipe: DatePipe,\n              private dialogRef: MatDialogRef<Q12dComponent>,\n              @Inject(MAT_DIALOG_DATA) private data: any) {\n\n  }\n\n  ngOnInit() {\n    this.form = this.formBuilder.group({\n      status: null,\n      date_start: null,\n      date_finish: null\n    });\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  stop(): void {\n    this.form.setValue({\n      status: this.toggle ? 1 : 0,\n      date_start: this.datepipe.transform(this.form.getRawValue().date_start, 'yyyy-MM-dd'),\n      date_finish: this.datepipe.transform(this.form.getRawValue().date_finish, 'yyyy-MM-dd')\n    });\n    this.query.dialogsForm = this.form.value;\n  }\n\n  toggleButton() {\n    this.toggle = !this.toggle;\n  }\n}\n","module.exports = \"\"","module.exports = \"<table mat-table #table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">\\n  <!-- Position Column -->\\n  <ng-container matColumnDef=\\\"id\\\">\\n    <th mat-header-cell *matHeaderCellDef> No. </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.id}} </td>\\n  </ng-container>\\n\\n  <!-- Category Column -->\\n  <ng-container matColumnDef=\\\"Category\\\">\\n    <th mat-header-cell *matHeaderCellDef> Category </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.auto.autoCategory.name}}</td>\\n  </ng-container>\\n\\n  <!-- Marka Column -->\\n  <ng-container matColumnDef=\\\"Marka\\\">\\n    <th mat-header-cell *matHeaderCellDef> Marka </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.auto.autoMarka.name}}</td>\\n  </ng-container>\\n\\n  <!-- Date Column -->\\n  <ng-container matColumnDef=\\\"Date\\\">\\n    <th mat-header-cell *matHeaderCellDef> Date </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.date | date: 'dd/MM/yyyy'}} </td>\\n  </ng-container>\\n\\n  <!-- saleBuy Column -->\\n  <ng-container matColumnDef=\\\"saleBuy\\\">\\n    <th mat-header-cell *matHeaderCellDef> Sale / Buy </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.sale_buy ? 'Buy' : 'Sale'}} </td>\\n  </ng-container>\\n\\n  <!-- Price Column -->\\n  <ng-container matColumnDef=\\\"Price\\\">\\n    <th mat-header-cell *matHeaderCellDef> Price </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.price}} </td>\\n  </ng-container>\\n\\n  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n</table>\\n\\n<mat-paginator #paginator\\n               [length]=\\\"dataSource.filteredData.length\\\"\\n               [pageIndex]=\\\"0\\\"\\n               [pageSize]=\\\"10\\\"\\n               [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\">\\n</mat-paginator>\\n\"","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {MatDialog, MatPaginator, MatSort, MatTableDataSource} from \"@angular/material\";\nimport {Auto} from \"../../model/Auto\";\nimport {QueryService} from \"../../services/query.service\";\nimport {Q12dComponent} from \"./q12d/q12d.component\";\n\n@Component({\n  selector: 'app-query12',\n  templateUrl: './query12.component.html',\n  styleUrls: ['./query12.component.css']\n})\nexport class Query12Component implements OnInit {\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  displayedColumns: string[] = ['id', 'Category', 'Marka', 'Date', 'saleBuy', 'Price'];\n  dataSource = new MatTableDataSource<Auto>();\n\n  constructor(private query: QueryService,\n              private dialog: MatDialog) {\n    this.openDialog();\n  }\n\n  ngOnInit() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  openDialog() {\n    const dialogRef = this.dialog.open(Q12dComponent);\n\n    dialogRef.afterClosed().subscribe(res => {\n      if (res === 1) {\n        this.executeQuery();\n      }\n    })\n  }\n\n  executeQuery() {\n    this.query.query12(this.query.dialogsForm.status, this.query.dialogsForm.date_start, this.query.dialogsForm.date_finish).subscribe(res => {\n      console.log(res);\n      this.dataSource.data = res;\n    });\n  }\n\n}\n","module.exports = \".modal {\\r\\n  width: 400px;\\r\\n  height: auto;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"modal\\\">\\n  <mat-grid-list cols=\\\"1\\\" rowHeight=\\\"60px\\\">\\n    <form class=\\\"form\\\" #formControl=\\\"ngForm\\\" [formGroup]=\\\"form\\\">\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <mat-label>Brigadir</mat-label>\\n          <mat-select (selectionChange)=\\\"selectedBrigadir($event.value)\\\">\\n            <mat-option>None</mat-option>\\n            <mat-option *ngFor=\\\"let item of brigadirs\\\" [value]=\\\"item.id\\\">\\n              {{item.name}} - {{item.surname}}\\n            </mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <button mat-button\\n                color=\\\"primary\\\"\\n                [disabled]=\\\"!formControl.valid\\\"\\n                [mat-dialog-close]=\\\"1\\\"\\n                (click)=\\\"stop()\\\">\\n          Create\\n        </button>\\n        <button mat-button\\n                color=\\\"warn\\\"\\n                (click)=\\\"onNoClick()\\\"\\n                tabindex=\\\"-1\\\">\\n          Cancel\\n        </button>\\n      </mat-grid-tile>\\n    </form>\\n  </mat-grid-list>\\n</div>\\n\"","import {Component, Inject, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup} from \"@angular/forms\";\nimport {DialogService} from \"../../../services/dialog.service\";\nimport {QueryService} from \"../../../services/query.service\";\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material\";\nimport {BrigadirService} from \"../../../services/brigadir.service\";\nimport {AutoBrigadir} from \"../../../model/AutoBrigadir\";\n\n@Component({\n  selector: 'app-q13d',\n  templateUrl: './q13d.component.html',\n  styleUrls: ['./q13d.component.css']\n})\nexport class Q13dComponent implements OnInit {\n  form: FormGroup;\n  brigadirs: AutoBrigadir[];\n\n  constructor(private _dialog: DialogService,\n              private _brigadir: BrigadirService,\n              private query: QueryService,\n              private formBuilder: FormBuilder,\n              private dialogRef: MatDialogRef<Q13dComponent>,\n              @Inject(MAT_DIALOG_DATA) private data: any) {\n\n  }\n\n  ngOnInit() {\n    this.form = this.formBuilder.group({\n      brigadir: null,\n    });\n    this.getBrigadirs();\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  stop(): void {\n    this.query.dialogsForm = this.form.value;\n  }\n\n  selectedBrigadir(event) {\n    this._brigadir.getSingle(event).subscribe(res => {\n      this.form.patchValue({\n        brigadir: res.id\n      });\n    });\n  }\n\n  private getBrigadirs() {\n    this._brigadir.getAll().subscribe(res => {\n      this.brigadirs = res;\n    });\n  }\n}\n","module.exports = \"\"","module.exports = \"<table mat-table #table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">\\n  <!-- Position Column -->\\n  <ng-container matColumnDef=\\\"id\\\">\\n    <th mat-header-cell *matHeaderCellDef> No. </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.id}} </td>\\n  </ng-container>\\n\\n  <!-- PersonalName Column -->\\n  <ng-container matColumnDef=\\\"PersonalName\\\">\\n    <th mat-header-cell *matHeaderCellDef> Personal Name </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.autoPersonal.name}} {{element.autoPersonal.surname}} </td>\\n  </ng-container>\\n\\n  <!-- DriversName Column -->\\n  <ng-container matColumnDef=\\\"DriversName\\\">\\n    <th mat-header-cell *matHeaderCellDef> Drivers Name </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.autoDrivers.name}} {{element.autoDrivers.surname}}</td>\\n  </ng-container>\\n\\n  <!-- BrigadaName Column -->\\n  <ng-container matColumnDef=\\\"BrigadaName\\\">\\n    <th mat-header-cell *matHeaderCellDef> Brigada Name </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.autoBrigada.name}}</td>\\n  </ng-container>\\n\\n  <!-- BrigadirName Column -->\\n  <ng-container matColumnDef=\\\"BrigadirName\\\">\\n    <th mat-header-cell *matHeaderCellDef> Brigadir Name </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.autoBrigadir.name}} {{element.autoBrigadir.surname}}</td>\\n  </ng-container>\\n\\n  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n</table>\\n\\n<mat-paginator #paginator\\n               [length]=\\\"dataSource.filteredData.length\\\"\\n               [pageIndex]=\\\"0\\\"\\n               [pageSize]=\\\"10\\\"\\n               [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\">\\n</mat-paginator>\\n\"","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {MatDialog, MatPaginator, MatSort, MatTableDataSource} from \"@angular/material\";\nimport {Auto} from \"../../model/Auto\";\nimport {QueryService} from \"../../services/query.service\";\nimport {Q13dComponent} from \"./q13d/q13d.component\";\n\n@Component({\n  selector: 'app-query13',\n  templateUrl: './query13.component.html',\n  styleUrls: ['./query13.component.css']\n})\nexport class Query13Component implements OnInit {\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  displayedColumns: string[] = ['id', 'PersonalName', 'DriversName', 'BrigadaName', 'BrigadirName'];\n\n  dataSource = new MatTableDataSource<Auto>();\n\n  constructor(private query: QueryService,\n              private dialog: MatDialog) {\n    this.openDialog();\n  }\n\n  ngOnInit() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  openDialog() {\n    const dialogRef = this.dialog.open(Q13dComponent);\n\n    dialogRef.afterClosed().subscribe(res => {\n      if (res === 1) {\n        this.executeQuery();\n      }\n    })\n  }\n\n  executeQuery() {\n    this.query.query13(this.query.dialogsForm.brigadir).subscribe(res => {\n      console.log(res);\n      this.dataSource.data = res;\n    });\n  }\n\n}\n","module.exports = \".modal {\\r\\n  width: 400px;\\r\\n  height: auto;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"modal\\\">\\n  <mat-grid-list cols=\\\"1\\\" rowHeight=\\\"60px\\\">\\n    <form class=\\\"form\\\" #formControl=\\\"ngForm\\\" [formGroup]=\\\"form\\\">\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <mat-label>Person</mat-label>\\n          <mat-select (selectionChange)=\\\"selectedPerson($event.value)\\\">\\n            <mat-option>None</mat-option>\\n            <mat-option *ngFor=\\\"let item of persons\\\" [value]=\\\"item.id\\\">\\n              {{item.name}} - {{item.surname}}\\n            </mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <mat-label>Auto</mat-label>\\n          <mat-select (selectionChange)=\\\"selectedAuto($event.value)\\\" formControlName=\\\"auto\\\">\\n            <mat-option>None</mat-option>\\n            <mat-option *ngFor=\\\"let item of auto\\\" [value]=\\\"item.id\\\">\\n              {{item.autoCategory.name}} - {{item.autoMarka.name}}\\n            </mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Choose a start date\\\" formControlName=\\\"date_start\\\">\\n          <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n          <mat-datepicker #picker></mat-datepicker>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput [matDatepicker]=\\\"picker1\\\" placeholder=\\\"Choose a finish date\\\" formControlName=\\\"date_finish\\\">\\n          <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\n          <mat-datepicker #picker1></mat-datepicker>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <button mat-button\\n                color=\\\"primary\\\"\\n                [disabled]=\\\"!formControl.valid\\\"\\n                [mat-dialog-close]=\\\"1\\\"\\n                (click)=\\\"stop()\\\">\\n          Create\\n        </button>\\n        <button mat-button\\n                color=\\\"warn\\\"\\n                (click)=\\\"onNoClick()\\\"\\n                tabindex=\\\"-1\\\">\\n          Cancel\\n        </button>\\n      </mat-grid-tile>\\n\\n    </form>\\n  </mat-grid-list>\\n</div>\\n\"","import {Component, Inject, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup} from \"@angular/forms\";\nimport {DialogService} from \"../../../services/dialog.service\";\nimport {QueryService} from \"../../../services/query.service\";\nimport {DatePipe} from \"@angular/common\";\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material\";\nimport {PersonalService} from \"../../../services/personal.service\";\nimport {AutoPersonal} from \"../../../model/AutoPersonal\";\nimport {AutoService} from \"../../../services/auto.service\";\nimport {Auto} from \"../../../model/Auto\";\n\n@Component({\n  selector: 'app-q14d',\n  templateUrl: './q14d.component.html',\n  styleUrls: ['./q14d.component.css']\n})\nexport class Q14dComponent implements OnInit {\n  form: FormGroup;\n  toggle: boolean;\n  persons: AutoPersonal[];\n  auto: Auto[];\n  person;\n  aut = null;\n\n  constructor(private _dialog: DialogService,\n              private query: QueryService,\n              private _auto: AutoService,\n              private _person: PersonalService,\n              private formBuilder: FormBuilder,\n              private datepipe: DatePipe,\n              private dialogRef: MatDialogRef<Q14dComponent>,\n              @Inject(MAT_DIALOG_DATA) private data: any) {\n\n  }\n\n  ngOnInit() {\n    this.form = this.formBuilder.group({\n      person: null,\n      auto: null,\n      date_start: null,\n      date_finish: null\n    });\n    this.getPersons();\n    this.getAutos();\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  stop(): void {\n    this.form.setValue({\n      person: this.person,\n      auto: this.aut,\n      date_start: this.datepipe.transform(this.form.getRawValue().date_start, 'yyyy-MM-dd'),\n      date_finish: this.datepipe.transform(this.form.getRawValue().date_finish, 'yyyy-MM-dd')\n    });\n    this.query.dialogsForm = this.form.value;\n  }\n\n  selectedPerson(event) {\n    this._person.getSingle(event).subscribe(res => {\n      this.person = res.id;\n    });\n  }\n\n  selectedAuto(event) {\n    this._auto.getSingle(event).subscribe(res => {\n      this.aut = res.id;\n    });\n  }\n\n  private getPersons() {\n    this._person.getAll().subscribe(res => {\n      this.persons = res;\n    });\n  }\n\n  private getAutos() {\n    this._auto.getAll().subscribe(res => {\n      this.auto = res;\n    });\n  }\n}\n","module.exports = \"\"","module.exports = \"<table mat-table #table [dataSource]=\\\"dataSource\\\" matSort class=\\\"mat-elevation-z8\\\">\\n  <!-- Position Column -->\\n  <ng-container matColumnDef=\\\"id\\\">\\n    <th mat-header-cell *matHeaderCellDef> No. </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.id}} </td>\\n  </ng-container>\\n\\n  <!-- Name Column -->\\n  <ng-container matColumnDef=\\\"ProblemName\\\">\\n    <th mat-header-cell *matHeaderCellDef> Problem </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.autoProblem.name}} </td>\\n  </ng-container>\\n\\n  <!-- Auto Column -->\\n  <ng-container matColumnDef=\\\"Auto\\\">\\n    <th mat-header-cell *matHeaderCellDef> Auto </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.auto.autoMarka.name}}: {{element.auto.autoCategory.name}}</td>\\n  </ng-container>\\n\\n  <!-- Date Column -->\\n  <ng-container matColumnDef=\\\"Date\\\">\\n    <th mat-header-cell *matHeaderCellDef> Date </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.date | date: 'dd/MM/yyyy'}} </td>\\n  </ng-container>\\n\\n  <!-- PersonalName Column -->\\n  <ng-container matColumnDef=\\\"PersonalName\\\">\\n    <th mat-header-cell *matHeaderCellDef> Personal </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.autoPersonal.name}} {{element.autoPersonal.surname}} </td>\\n  </ng-container>\\n\\n  <!-- Price Column -->\\n  <ng-container matColumnDef=\\\"Price\\\">\\n    <th mat-header-cell *matHeaderCellDef> Price </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.price}} </td>\\n  </ng-container>\\n\\n  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n</table>\\n\\n<mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" pageSize=\\\"10\\\"></mat-paginator>\\n\\n\"","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {MatDialog, MatPaginator, MatSort, MatTableDataSource} from \"@angular/material\";\nimport {Auto} from \"../../model/Auto\";\nimport {QueryService} from \"../../services/query.service\";\nimport {Q14dComponent} from \"./q14d/q14d.component\";\n\n@Component({\n  selector: 'app-query14',\n  templateUrl: './query14.component.html',\n  styleUrls: ['./query14.component.css']\n})\nexport class Query14Component implements OnInit {\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  displayedColumns: string[] = ['id', 'ProblemName', 'Auto', 'Date', 'PersonalName', 'Price'];\n  dataSource = new MatTableDataSource<Auto>();\n\n  constructor(private query: QueryService,\n              private dialog: MatDialog) {\n    this.openDialog();\n  }\n\n  ngOnInit() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  openDialog() {\n    const dialogRef = this.dialog.open(Q14dComponent);\n\n    dialogRef.afterClosed().subscribe(res => {\n      if (res === 1) {\n        this.executeQuery();\n      }\n    })\n  }\n\n  executeQuery() {\n    if (this.query.dialogsForm.person !== null && this.query.dialogsForm.auto === null) {\n      this.query.query14_1(this.query.dialogsForm.person, this.query.dialogsForm.date_start,\n        this.query.dialogsForm.date_finish).subscribe(res => {\n        console.log(res);\n        this.dataSource.data = res;\n      });\n    } else if (this.query.dialogsForm.person !== null && this.query.dialogsForm.auto !== null) {\n      this.query.query14_2(this.query.dialogsForm.person, this.query.dialogsForm.auto ,\n        this.query.dialogsForm.date_start, this.query.dialogsForm.date_finish).subscribe(res => {\n        console.log(res);\n        this.dataSource.data = res;\n      })\n    } else if (this.query.dialogsForm.auto !== null && (this.query.dialogsForm.category === null && this.query.dialogsForm.marka === null)) {\n      this.query.query6_3(this.query.dialogsForm.auto).subscribe(res => {\n        console.log(res);\n        this.dataSource.data = res;\n      })\n    }\n  }\n\n}\n","module.exports = \".modal {\\r\\n  width: 400px;\\r\\n  height: auto;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"modal\\\">\\r\\n  <mat-grid-list cols=\\\"1\\\" rowHeight=\\\"60px\\\">\\r\\n    <form class=\\\"form\\\" #formControl=\\\"ngForm\\\" [formGroup]=\\\"form\\\">\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <mat-label>Auto</mat-label>\\r\\n          <mat-select (selectionChange)=\\\"selectedAuto($event.value)\\\" formControlName=\\\"auto\\\">\\r\\n            <mat-option>None</mat-option>\\r\\n            <mat-option *ngFor=\\\"let item of auto\\\" [value]=\\\"item.id\\\">\\r\\n              {{item.autoCategory.name}} - {{item.autoMarka.name}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <button mat-button\\r\\n                color=\\\"primary\\\"\\r\\n                [disabled]=\\\"!formControl.valid\\\"\\r\\n                [mat-dialog-close]=\\\"1\\\"\\r\\n                (click)=\\\"stop()\\\">\\r\\n          Create\\r\\n        </button>\\r\\n        <button mat-button\\r\\n                color=\\\"warn\\\"\\r\\n                (click)=\\\"onNoClick()\\\"\\r\\n                tabindex=\\\"-1\\\">\\r\\n          Cancel\\r\\n        </button>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n    </form>\\r\\n  </mat-grid-list>\\r\\n</div>\\r\\n\"","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup} from \"@angular/forms\";\r\nimport {Auto} from \"../../../model/Auto\";\r\nimport {DialogService} from \"../../../services/dialog.service\";\r\nimport {RouteService} from \"../../../services/route.service\";\r\nimport {AutoService} from \"../../../services/auto.service\";\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material\";\r\nimport {QueryService} from \"../../../services/query.service\";\r\n\r\n@Component({\r\n  selector: 'app-q2d',\r\n  templateUrl: './q2d.component.html',\r\n  styleUrls: ['./q2d.component.css']\r\n})\r\nexport class Q2dComponent implements OnInit {\r\n\r\n  form: FormGroup;\r\n  auto: Auto[];\r\n  private selectAuto: number;\r\n\r\n  constructor(private _dialog: DialogService,\r\n              private _route: RouteService,\r\n              private _auto: AutoService,\r\n              private query: QueryService,\r\n              private formBuilder: FormBuilder,\r\n              private dialogRef: MatDialogRef<Q2dComponent>,\r\n              @Inject(MAT_DIALOG_DATA) private data: any) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.form = this.formBuilder.group({\r\n      auto: null\r\n    });\r\n    this.getAutos();\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  stop(): void {\r\n    this.form.setValue({auto: this.selectAuto});\r\n    this.query.dialogsForm = this.form.value;\r\n  }\r\n\r\n  private getAutos() {\r\n    this._auto.getAll().subscribe(res => {\r\n      this.auto = res;\r\n    });\r\n  }\r\n\r\n  selectedAuto(event) {\r\n    if(event !== undefined) {\r\n      this._auto.getSingle(event).subscribe(res => {\r\n        this.selectAuto = res.id;\r\n      });\r\n    } else {\r\n      this.selectAuto = null;\r\n    }\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<table mat-table #table [dataSource]=\\\"dataSource\\\" matSort class=\\\"mat-elevation-z8\\\">\\r\\n  <!-- Position Column -->\\r\\n  <ng-container matColumnDef=\\\"id\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> No. </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.id}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Name Column -->\\r\\n  <ng-container matColumnDef=\\\"Name\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Name </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- SurName Column -->\\r\\n  <ng-container matColumnDef=\\\"SurName\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> SurName </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.surname}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Category Column -->\\r\\n  <ng-container matColumnDef=\\\"Category\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Category Name </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.auto.autoCategory.name}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Marka Column -->\\r\\n  <ng-container matColumnDef=\\\"Marka\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Marka Name </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.auto.autoMarka.name}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n</table>\\r\\n\\r\\n<mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" pageSize=\\\"10\\\"></mat-paginator>\\r\\n\"","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {QueryService} from \"../../services/query.service\";\r\nimport {MatDialog, MatPaginator, MatSort, MatTableDataSource} from \"@angular/material\";\r\nimport {Q2dComponent} from \"./q2d/q2d.component\";\r\nimport {Auto} from \"../../model/Auto\";\r\n\r\n@Component({\r\n  selector: 'app-query2',\r\n  templateUrl: './query2.component.html',\r\n  styleUrls: ['./query2.component.css']\r\n})\r\nexport class Query2Component implements OnInit {\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  displayedColumns: string[] = ['id', 'Name', 'SurName', 'Category', 'Marka'];\r\n  dataSource = new MatTableDataSource<Auto>();\r\n\r\n  constructor(private query: QueryService,\r\n              private dialog: MatDialog) {\r\n    this.openDialog();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  openDialog() {\r\n    const dialogRef = this.dialog.open(Q2dComponent);\r\n\r\n    dialogRef.afterClosed().subscribe(res => {\r\n      if(res === 1) {\r\n        this.executeQuery();\r\n      }\r\n    })\r\n  }\r\n\r\n  executeQuery() {\r\n    if(this.query.dialogsForm.auto !== null) {\r\n      this.query.query2_2(this.query.dialogsForm.auto).subscribe(res => {\r\n        console.log(res);\r\n        this.dataSource.data = res;\r\n      });\r\n    } else {\r\n      this.query.query2_1().subscribe(res => {\r\n        console.log(res);\r\n        this.dataSource.data = res;\r\n      })\r\n    }\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<table mat-table #table [dataSource]=\\\"dataSource\\\" matSort class=\\\"mat-elevation-z8\\\">\\r\\n  <!-- Position Column -->\\r\\n  <ng-container matColumnDef=\\\"id\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> No. </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.id}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Name Column -->\\r\\n  <ng-container matColumnDef=\\\"Name\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Name </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- SurName Column -->\\r\\n  <ng-container matColumnDef=\\\"SurName\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> SurName </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.surname}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Category Column -->\\r\\n  <ng-container matColumnDef=\\\"Category\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Category Name </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.auto.autoCategory.name}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Marka Column -->\\r\\n  <ng-container matColumnDef=\\\"Marka\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Marka Name </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.auto.autoMarka.name}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n</table>\\r\\n\\r\\n<mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" pageSize=\\\"10\\\"></mat-paginator>\\r\\n\\r\\n\"","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {MatPaginator, MatSort, MatTableDataSource} from \"@angular/material\";\r\nimport {Auto} from \"../../model/Auto\";\r\nimport {QueryService} from \"../../services/query.service\";\r\n\r\n@Component({\r\n  selector: 'app-query3',\r\n  templateUrl: './query3.component.html',\r\n  styleUrls: ['./query3.component.css']\r\n})\r\nexport class Query3Component implements OnInit {\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  displayedColumns: string[] = ['id', 'Name', 'SurName', 'Category', 'Marka'];\r\n  dataSource = new MatTableDataSource<Auto>();\r\n\r\n  constructor(private query: QueryService) {\r\n    this.executeQuery();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  executeQuery() {\r\n    this.query.query3().subscribe(res => {\r\n      console.log(res);\r\n      this.dataSource.data = res;\r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<table mat-table #table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">\\r\\n  <!-- Position Column -->\\r\\n  <ng-container matColumnDef=\\\"id\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> No. </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.id}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Street Column -->\\r\\n  <ng-container matColumnDef=\\\"Street\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Street </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.autoStreet.street_start}} - {{element.autoStreet.street_finish}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Category Column -->\\r\\n  <ng-container matColumnDef=\\\"Auto\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Auto </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.auto.autoCategory.name}} - {{element.auto.autoMarka.name}}</td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- PassangerCount Column -->\\r\\n  <ng-container matColumnDef=\\\"Count\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Number of passengers </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.passanger_count}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n\\r\\n  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n</table>\\r\\n\\r\\n<mat-paginator #paginator\\r\\n               [length]=\\\"dataSource.filteredData.length\\\"\\r\\n               [pageIndex]=\\\"0\\\"\\r\\n               [pageSize]=\\\"10\\\"\\r\\n               [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\">\\r\\n</mat-paginator>\\r\\n\"","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {MatPaginator, MatSort, MatTableDataSource} from \"@angular/material\";\r\nimport {Auto} from \"../../model/Auto\";\r\nimport {QueryService} from \"../../services/query.service\";\r\n\r\n@Component({\r\n  selector: 'app-query4',\r\n  templateUrl: './query4.component.html',\r\n  styleUrls: ['./query4.component.css']\r\n})\r\nexport class Query4Component implements OnInit {\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  displayedColumns: string[] = ['id', 'Street', 'Auto', 'Count'];\r\n  dataSource = new MatTableDataSource<Auto>();\r\n\r\n  constructor(private query: QueryService) {\r\n    this.executeQuery();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  executeQuery() {\r\n    this.query.query4().subscribe(res => {\r\n      console.log(res);\r\n      this.dataSource.data = res;\r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \".modal {\\r\\n  width: 400px;\\r\\n  height: auto;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"modal\\\">\\r\\n  <mat-grid-list cols=\\\"1\\\" rowHeight=\\\"60px\\\">\\r\\n    <form class=\\\"form\\\" #formControl=\\\"ngForm\\\" [formGroup]=\\\"form\\\">\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <mat-label>Category</mat-label>\\r\\n          <mat-select (selectionChange)=\\\"selectedCategory($event.value)\\\">\\r\\n            <mat-option>None</mat-option>\\r\\n            <mat-option *ngFor=\\\"let item of categorys\\\" [value]=\\\"item.id\\\">\\r\\n              {{item.name}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <mat-label>Marka</mat-label>\\r\\n          <mat-select (selectionChange)=\\\"selectedMarka($event.value)\\\">\\r\\n            <mat-option>None</mat-option>\\r\\n            <mat-option *ngFor=\\\"let item of markas\\\" [value]=\\\"item.id\\\">\\r\\n              {{item.name}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <mat-label>Auto</mat-label>\\r\\n          <mat-select (selectionChange)=\\\"selectedAuto($event.value)\\\" formControlName=\\\"auto\\\">\\r\\n            <mat-option>None</mat-option>\\r\\n            <mat-option *ngFor=\\\"let item of auto\\\" [value]=\\\"item.id\\\">\\r\\n              {{item.autoCategory.name}} - {{item.autoMarka.name}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <button mat-button\\r\\n                color=\\\"primary\\\"\\r\\n                [disabled]=\\\"!formControl.valid\\\"\\r\\n                [mat-dialog-close]=\\\"1\\\"\\r\\n                (click)=\\\"stop()\\\">\\r\\n          Create\\r\\n        </button>\\r\\n        <button mat-button\\r\\n                color=\\\"warn\\\"\\r\\n                (click)=\\\"onNoClick()\\\"\\r\\n                tabindex=\\\"-1\\\">\\r\\n          Cancel\\r\\n        </button>\\r\\n      </mat-grid-tile>\\r\\n    </form>\\r\\n  </mat-grid-list>\\r\\n</div>\\r\\n\"","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup} from \"@angular/forms\";\r\nimport {Auto} from \"../../../model/Auto\";\r\nimport {DialogService} from \"../../../services/dialog.service\";\r\nimport {RouteService} from \"../../../services/route.service\";\r\nimport {AutoService} from \"../../../services/auto.service\";\r\nimport {QueryService} from \"../../../services/query.service\";\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material\";\r\nimport {CategoryService} from \"../../../services/category.service\";\r\nimport {MarkaService} from \"../../../services/marka.service\";\r\nimport {AutoCategory} from \"../../../model/AutoCategory\";\r\nimport {AutoMarka} from \"../../../model/AutoMarka\";\r\n\r\n@Component({\r\n  selector: 'app-q6d',\r\n  templateUrl: './q6d.component.html',\r\n  styleUrls: ['./q6d.component.css']\r\n})\r\nexport class Q6dComponent implements OnInit {\r\n  form: FormGroup;\r\n  auto: Auto[];\r\n  categorys: AutoCategory[];\r\n  markas: AutoMarka[];\r\n\r\n  constructor(private _dialog: DialogService,\r\n              private _auto: AutoService,\r\n              private _category: CategoryService,\r\n              private _marka: MarkaService,\r\n              private query: QueryService,\r\n              private formBuilder: FormBuilder,\r\n              private dialogRef: MatDialogRef<Q6dComponent>,\r\n              @Inject(MAT_DIALOG_DATA) private data: any) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.form = this.formBuilder.group({\r\n      category: null,\r\n      marka: null,\r\n      auto: null,\r\n    });\r\n    this.getAutos();\r\n    this.getCategorys();\r\n    this.getMarkas();\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  stop(): void {\r\n    this.query.dialogsForm = this.form.value;\r\n  }\r\n\r\n  selectedAuto(event) {\r\n    this._auto.getSingle(event).subscribe(res => {\r\n      this.form.getRawValue().auto = res.id;\r\n    });\r\n  }\r\n\r\n  selectedCategory(event) {\r\n    this._category.getSingle(event).subscribe(res => {\r\n      this.form.patchValue({\r\n        category: res.name\r\n      });\r\n    });\r\n  }\r\n\r\n  selectedMarka(event) {\r\n    this._marka.getSingle(event).subscribe(res => {\r\n      this.form.patchValue({\r\n        marka: res.name\r\n      });\r\n    });\r\n  }\r\n\r\n\r\n  private getAutos() {\r\n    this._auto.getAll().subscribe(res => {\r\n      this.auto = res;\r\n    });\r\n  }\r\n\r\n  private getCategorys() {\r\n    this._category.getAll().subscribe(res => {\r\n      this.categorys = res;\r\n    });\r\n  }\r\n\r\n  private getMarkas() {\r\n    this._marka.getAll().subscribe(res => {\r\n      this.markas = res;\r\n    });\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<table mat-table #table [dataSource]=\\\"dataSource\\\" matSort class=\\\"mat-elevation-z8\\\">\\r\\n  <!-- Position Column -->\\r\\n  <ng-container matColumnDef=\\\"id\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> No. </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.id}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Name Column -->\\r\\n  <ng-container matColumnDef=\\\"ProblemName\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Problem </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.autoProblem.name}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Auto Column -->\\r\\n  <ng-container matColumnDef=\\\"Auto\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Auto </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.auto.autoMarka.name}}: {{element.auto.autoCategory.name}}</td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Date Column -->\\r\\n  <ng-container matColumnDef=\\\"Date\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Date </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.date | date: 'dd/MM/yyyy'}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- PersonalName Column -->\\r\\n  <ng-container matColumnDef=\\\"PersonalName\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Personal </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.autoPersonal.name}} {{element.autoPersonal.surname}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Price Column -->\\r\\n  <ng-container matColumnDef=\\\"Price\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Price </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.price}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n</table>\\r\\n\\r\\n<mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" pageSize=\\\"10\\\"></mat-paginator>\\r\\n\\r\\n\"","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {MatDialog, MatPaginator, MatSort, MatTableDataSource} from \"@angular/material\";\r\nimport {Auto} from \"../../model/Auto\";\r\nimport {QueryService} from \"../../services/query.service\";\r\nimport {Q6dComponent} from \"./q6d/q6d.component\";\r\n\r\n@Component({\r\n  selector: 'app-query6',\r\n  templateUrl: './query6.component.html',\r\n  styleUrls: ['./query6.component.css']\r\n})\r\nexport class Query6Component implements OnInit {\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  displayedColumns: string[] = ['id', 'ProblemName', 'Auto', 'Date', 'PersonalName', 'Price'];\r\n  dataSource = new MatTableDataSource<Auto>();\r\n\r\n  constructor(private query: QueryService,\r\n              private dialog: MatDialog) {\r\n    this.openDialog();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  openDialog() {\r\n    const dialogRef = this.dialog.open(Q6dComponent);\r\n\r\n    dialogRef.afterClosed().subscribe(res => {\r\n      if (res === 1) {\r\n        this.executeQuery();\r\n      }\r\n    })\r\n  }\r\n\r\n  executeQuery() {\r\n    if (this.query.dialogsForm.category !== null && (this.query.dialogsForm.marka === null && this.query.dialogsForm.auto === null)) {\r\n      this.query.query6_1(this.query.dialogsForm.category).subscribe(res => {\r\n        console.log(res);\r\n        this.dataSource.data = res;\r\n      });\r\n    } else if (this.query.dialogsForm.marka !== null && (this.query.dialogsForm.category === null && this.query.dialogsForm.auto === null)) {\r\n      this.query.query6_2(this.query.dialogsForm.marka).subscribe(res => {\r\n        console.log(res);\r\n        this.dataSource.data = res;\r\n      })\r\n    } else if (this.query.dialogsForm.auto !== null && (this.query.dialogsForm.category === null && this.query.dialogsForm.marka === null)) {\r\n      this.query.query6_3(this.query.dialogsForm.auto).subscribe(res => {\r\n        console.log(res);\r\n        this.dataSource.data = res;\r\n      })\r\n    }\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<table mat-table #table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">\\r\\n  <!-- Position Column -->\\r\\n  <ng-container matColumnDef=\\\"id\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> No. </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.id}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- PersonalName Column -->\\r\\n  <ng-container matColumnDef=\\\"PersonalName\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Personal Name </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.autoPersonal.name}} {{element.autoPersonal.surname}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- DriversName Column -->\\r\\n  <ng-container matColumnDef=\\\"DriversName\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Drivers Name </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.autoDrivers.name}} {{element.autoDrivers.surname}}</td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- BrigadaName Column -->\\r\\n  <ng-container matColumnDef=\\\"BrigadaName\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Brigada Name </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.autoBrigada.name}}</td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- BrigadirName Column -->\\r\\n  <ng-container matColumnDef=\\\"BrigadirName\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Brigadir Name </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.autoBrigadir.name}} {{element.autoBrigadir.surname}}</td>\\r\\n  </ng-container>\\r\\n\\r\\n  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n</table>\\r\\n\\r\\n<mat-paginator #paginator\\r\\n               [length]=\\\"dataSource.filteredData.length\\\"\\r\\n               [pageIndex]=\\\"0\\\"\\r\\n               [pageSize]=\\\"10\\\"\\r\\n               [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\">\\r\\n</mat-paginator>\\r\\n\"","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {MatPaginator, MatSort, MatTableDataSource} from \"@angular/material\";\r\nimport {Auto} from \"../../model/Auto\";\r\nimport {QueryService} from \"../../services/query.service\";\r\n\r\n@Component({\r\n  selector: 'app-query7',\r\n  templateUrl: './query7.component.html',\r\n  styleUrls: ['./query7.component.css']\r\n})\r\nexport class Query7Component implements OnInit {\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  displayedColumns: string[] = ['id', 'PersonalName', 'DriversName', 'BrigadaName', 'BrigadirName'];\r\n  dataSource = new MatTableDataSource<Auto>();\r\n\r\n  constructor(private query: QueryService) {\r\n    this.executeQuery();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  executeQuery() {\r\n    this.query.query7().subscribe(res => {\r\n      console.log(res);\r\n      this.dataSource.data = res;\r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \".modal {\\r\\n  width: 400px;\\r\\n  height: auto;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"modal\\\">\\r\\n  <mat-grid-list cols=\\\"1\\\" rowHeight=\\\"60px\\\">\\r\\n    <form class=\\\"form\\\" #formControl=\\\"ngForm\\\" [formGroup]=\\\"form\\\">\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <mat-label>Category</mat-label>\\r\\n          <mat-select (selectionChange)=\\\"selectedCategory($event.value)\\\">\\r\\n            <mat-option>None</mat-option>\\r\\n            <mat-option *ngFor=\\\"let item of categorys\\\" [value]=\\\"item.id\\\">\\r\\n              {{item.name}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <button mat-button\\r\\n                color=\\\"primary\\\"\\r\\n                [disabled]=\\\"!formControl.valid\\\"\\r\\n                [mat-dialog-close]=\\\"1\\\"\\r\\n                (click)=\\\"stop()\\\">\\r\\n          Create\\r\\n        </button>\\r\\n        <button mat-button\\r\\n                color=\\\"warn\\\"\\r\\n                (click)=\\\"onNoClick()\\\"\\r\\n                tabindex=\\\"-1\\\">\\r\\n          Cancel\\r\\n        </button>\\r\\n      </mat-grid-tile>\\r\\n    </form>\\r\\n  </mat-grid-list>\\r\\n</div>\\r\\n\"","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup} from \"@angular/forms\";\r\nimport {AutoCategory} from \"../../../model/AutoCategory\";\r\nimport {DialogService} from \"../../../services/dialog.service\";\r\nimport {CategoryService} from \"../../../services/category.service\";\r\nimport {QueryService} from \"../../../services/query.service\";\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material\";\r\n\r\n@Component({\r\n  selector: 'app-q8d',\r\n  templateUrl: './q8d.component.html',\r\n  styleUrls: ['./q8d.component.css']\r\n})\r\nexport class Q8dComponent implements OnInit {\r\n  form: FormGroup;\r\n  categorys: AutoCategory[];\r\n\r\n  constructor(private _dialog: DialogService,\r\n              private _category: CategoryService,\r\n              private query: QueryService,\r\n              private formBuilder: FormBuilder,\r\n              private dialogRef: MatDialogRef<Q8dComponent>,\r\n              @Inject(MAT_DIALOG_DATA) private data: any) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.form = this.formBuilder.group({\r\n      category: null,\r\n    });\r\n    this.getCategorys();\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  stop(): void {\r\n    this.query.dialogsForm = this.form.value;\r\n  }\r\n\r\n  selectedCategory(event) {\r\n    this._category.getSingle(event).subscribe(res => {\r\n      this.form.patchValue({\r\n        category: res.name\r\n      });\r\n    });\r\n  }\r\n\r\n  private getCategorys() {\r\n    this._category.getAll().subscribe(res => {\r\n      this.categorys = res;\r\n    });\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<table mat-table #table [dataSource]=\\\"dataSource\\\" matSort class=\\\"mat-elevation-z8\\\">\\r\\n  <!-- Position Column -->\\r\\n  <ng-container matColumnDef=\\\"id\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> No. </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.id}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Name Column -->\\r\\n  <ng-container matColumnDef=\\\"Name\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Name </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Street Column -->\\r\\n  <ng-container matColumnDef=\\\"Street\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Street </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.street}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Category Column -->\\r\\n  <ng-container matColumnDef=\\\"Category\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Category Name </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.autoCategory.name}}</td>\\r\\n  </ng-container>\\r\\n\\r\\n  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n</table>\\r\\n\\r\\n<mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" pageSize=\\\"10\\\"></mat-paginator>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\"","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {MatDialog, MatPaginator, MatSort, MatTableDataSource} from \"@angular/material\";\r\nimport {Auto} from \"../../model/Auto\";\r\nimport {QueryService} from \"../../services/query.service\";\r\nimport {Q8dComponent} from \"./q8d/q8d.component\";\r\n\r\n@Component({\r\n  selector: 'app-query8',\r\n  templateUrl: './query8.component.html',\r\n  styleUrls: ['./query8.component.css']\r\n})\r\nexport class Query8Component implements OnInit {\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  displayedColumns: string[] = ['id', 'Name', 'Street', 'Category'];\r\n  dataSource = new MatTableDataSource<Auto>();\r\n\r\n  constructor(private query: QueryService,\r\n              private dialog: MatDialog) {\r\n    this.openDialog();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  openDialog() {\r\n    const dialogRef = this.dialog.open(Q8dComponent);\r\n\r\n    dialogRef.afterClosed().subscribe(res => {\r\n      if (res === 1) {\r\n        this.executeQuery();\r\n      }\r\n    })\r\n  }\r\n\r\n  executeQuery() {\r\n    if (this.query.dialogsForm.category !== null) {\r\n      this.query.query8_2(this.query.dialogsForm.category).subscribe(res => {\r\n        console.log(res);\r\n        this.dataSource.data = res;\r\n      });\r\n    } else {\r\n      this.query.query8_1().subscribe(res => {\r\n        console.log(res);\r\n        this.dataSource.data = res;\r\n      });\r\n    }\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<table mat-table #table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">\\r\\n  <!-- Position Column -->\\r\\n  <ng-container matColumnDef=\\\"id\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> No. </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.id}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Name Column -->\\r\\n  <ng-container matColumnDef=\\\"Category\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Category </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.autoCategory.name}}</td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Weight Column -->\\r\\n  <ng-container matColumnDef=\\\"Marka\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Marka </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.autoMarka.name}}</td>\\r\\n  </ng-container>\\r\\n\\r\\n  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n  <!--<tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" (click)=\\\"tableClick(row.id)\\\"></tr>-->\\r\\n</table>\\r\\n\"","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {MatPaginator, MatSort, MatTableDataSource} from \"@angular/material\";\r\nimport {Auto} from \"../../model/Auto\";\r\nimport {QueryService} from \"../../services/query.service\";\r\n\r\n@Component({\r\n  selector: 'app-query9',\r\n  templateUrl: './query9.component.html',\r\n  styleUrls: ['./query9.component.css']\r\n})\r\nexport class Query9Component implements OnInit {\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  displayedColumns: string[] = ['id', 'Category', 'Marka'];\r\n  dataSource = new MatTableDataSource<Auto>();\r\n\r\n  constructor(private query: QueryService) {\r\n    this.executeQuery();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  executeQuery() {\r\n    this.query.query1().subscribe(res => {\r\n      console.log(res);\r\n      this.dataSource.data = res;\r\n    });\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {ErrorService} from \"./error.service\";\r\nimport {AutoStreet} from \"../model/AutoStreet\";\r\nimport {environment} from \"../../environments/environment\";\r\nimport {catchError, map} from \"rxjs/operators\";\r\nimport {Apis} from \"../model/Apis\";\r\nimport {Observable} from \"rxjs\";\r\nimport {Router} from \"@angular/router\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ApiServiceService {\r\n\r\n  private url: string;\r\n\r\n  constructor(private http: HttpClient,\r\n              private router: Router,\r\n              private _error: ErrorService) {\r\n    this.url = this.router.url;\r\n  }\r\n\r\n  getAll(): Observable<any> {\r\n    return this.http.get<Apis>(environment.apiUrl + this.url + '/all').pipe(\r\n      map(res => {\r\n        return res;\r\n      }),\r\n      catchError(this._error.handleError)\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {Observable} from \"rxjs\";\r\nimport {Driver} from \"../model/Driver\";\r\nimport {environment} from \"../../environments/environment\";\r\nimport {catchError, map} from \"rxjs/operators\";\r\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\r\nimport {ErrorService} from \"./error.service\";\r\nimport {Auto} from \"../model/Auto\";\r\nimport {AutoMarka} from \"../model/AutoMarka\";\r\nimport {AutoCategory} from \"../model/AutoCategory\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AutoService {\r\n\r\n  autos: Auto[];\r\n  auto: Auto;\r\n  editedRow: Auto;\r\n  newRow: Auto;\r\n\r\n  constructor(private http: HttpClient,\r\n              private _error: ErrorService) { }\r\n\r\n  getAll(): Observable<Auto[]> {\r\n    return this.http.get(environment.apiUrl + environment.apiAuto + '/all').pipe(\r\n      map((res: Auto[]) => {\r\n        this.autos = res;\r\n        return this.autos;\r\n      }),\r\n      catchError(this._error.handleError)\r\n    );\r\n  }\r\n\r\n  getSingle(id: number): Observable<Auto> {\r\n    return this.http.get(environment.apiUrl + environment.apiAuto + '/' + id).pipe(\r\n      map((res: Auto) => {\r\n        this.auto = res;\r\n        return this.auto;\r\n      }),\r\n      catchError(this._error.handleError)\r\n    )\r\n  }\r\n\r\n  update(id: number, auto: any): Observable<Auto> {\r\n    let url = environment.apiUrl + environment.apiAuto + '/' + id;\r\n\r\n    let body = JSON.stringify(auto);\r\n\r\n    let headers = new HttpHeaders({ 'Content-Type': 'application/json' });\r\n\r\n    return this.http.put(url, body, {headers: headers}).pipe(\r\n      map((res: Auto) => {\r\n        this.editedRow = res;\r\n        return this.editedRow;\r\n      }),\r\n      catchError(this._error.handleError)\r\n    )\r\n  }\r\n\r\n  delete(id: number): Observable<any> {\r\n    let url = environment.apiUrl + environment.apiAuto + '/' + id;\r\n\r\n    let headers = new HttpHeaders({ 'Content-Type': 'application/json' });\r\n\r\n    return this.http.delete(url, {headers: headers}).pipe(\r\n      map(res => {\r\n        return res;\r\n      }),\r\n      catchError(this._error.handleError)\r\n    )\r\n  }\r\n\r\n  add(auto: any): Observable<Auto> {\r\n    let url = environment.apiUrl + environment.apiAuto + '/add';\r\n\r\n    let body = JSON.stringify(auto);\r\n    console.log(body);\r\n\r\n    let headers = new HttpHeaders({ 'Content-Type': 'application/json' });\r\n\r\n    return this.http.post(url, body, {headers: headers}).pipe(\r\n      map((res: Auto) => {\r\n        this.newRow = res;\r\n        return res;\r\n      }),\r\n      catchError(this._error.handleError)\r\n    )\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\r\nimport {ErrorService} from \"./error.service\";\r\nimport {Observable} from \"rxjs\";\r\nimport {environment} from \"../../environments/environment\";\r\nimport {catchError, map} from \"rxjs/operators\";\r\nimport {AutoBrigada} from \"../model/AutoBrigada\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BrigadaService {\r\n\r\n  private rows: AutoBrigada[];\r\n  private row: AutoBrigada;\r\n  editedRow: AutoBrigada;\r\n  newRow: AutoBrigada;\r\n\r\n  constructor(private http: HttpClient,\r\n              private _error: ErrorService) { }\r\n\r\n  getAll(): Observable<AutoBrigada[]> {\r\n    return this.http.get(environment.apiUrl + environment.apiBrigada + '/all').pipe(\r\n      map((res: AutoBrigada[]) => {\r\n        this.rows = res;\r\n        return this.rows;\r\n      }),\r\n      catchError(this._error.handleError)\r\n    );\r\n  }\r\n\r\n  getSingle(id: number): Observable<AutoBrigada> {\r\n    return this.http.get(environment.apiUrl + environment.apiBrigada + '/' + id).pipe(\r\n      map((res: AutoBrigada) => {\r\n        this.row = res;\r\n        return this.row;\r\n      }),\r\n      catchError(this._error.handleError)\r\n    )\r\n  }\r\n\r\n  update(id: number, item: any): Observable<AutoBrigada> {\r\n    let url = environment.apiUrl + environment.apiCategory + '/' + id;\r\n\r\n    let body = JSON.stringify(item);\r\n\r\n    let headers = new HttpHeaders({ 'Content-Type': 'application/json' });\r\n\r\n    return this.http.put(url, body, {headers: headers}).pipe(\r\n      map((res: AutoBrigada) => {\r\n        this.editedRow = res;\r\n        return this.editedRow;\r\n      }),\r\n      catchError(this._error.handleError)\r\n    )\r\n  }\r\n\r\n  delete(id: number): Observable<any> {\r\n    let url = environment.apiUrl + environment.apiBrigada + '/' + id;\r\n\r\n    let headers = new HttpHeaders({ 'Content-Type': 'application/json' });\r\n\r\n    return this.http.delete(url, {headers: headers}).pipe(\r\n      map(res => {\r\n        return res;\r\n      }),\r\n      catchError(this._error.handleError)\r\n    )\r\n  }\r\n\r\n  add(item: any): Observable<AutoBrigada> {\r\n    let url = environment.apiUrl + environment.apiBrigada + '/add';\r\n\r\n    let body = JSON.stringify(item);\r\n    console.log(body);\r\n\r\n    let headers = new HttpHeaders({ 'Content-Type': 'application/json' });\r\n\r\n    return this.http.post(url, body, {headers: headers}).pipe(\r\n      map((res: AutoBrigada) => {\r\n        this.newRow = res;\r\n        return res;\r\n      }),\r\n      catchError(this._error.handleError)\r\n    )\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\r\nimport {ErrorService} from \"./error.service\";\r\nimport {Observable} from \"rxjs\";\r\nimport {environment} from \"../../environments/environment\";\r\nimport {catchError, map} from \"rxjs/operators\";\r\nimport {AutoBrigadir} from \"../model/AutoBrigadir\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BrigadirService {\r\n\r\n  private rows: AutoBrigadir[];\r\n  private row: AutoBrigadir;\r\n  editedRow: AutoBrigadir;\r\n  newRow: AutoBrigadir;\r\n\r\n  constructor(private http: HttpClient,\r\n              private _error: ErrorService) { }\r\n\r\n  getAll(): Observable<AutoBrigadir[]> {\r\n    return this.http.get(environment.apiUrl + environment.apiBrigadir + '/all').pipe(\r\n      map((res: AutoBrigadir[]) => {\r\n        this.rows = res;\r\n        return this.rows;\r\n      }),\r\n      catchError(this._error.handleError)\r\n    );\r\n  }\r\n\r\n  getSingle(id: number): Observable<AutoBrigadir> {\r\n    return this.http.get(environment.apiUrl + environment.apiBrigadir + '/' + id).pipe(\r\n      map((res: AutoBrigadir) => {\r\n        this.row = res;\r\n        return this.row;\r\n      }),\r\n      catchError(this._error.handleError)\r\n    )\r\n  }\r\n\r\n  update(id: number, item: any): Observable<AutoBrigadir> {\r\n    let url = environment.apiUrl + environment.apiBrigadir + '/' + id;\r\n\r\n    let body = JSON.stringify(item);\r\n\r\n    let headers = new HttpHeaders({ 'Content-Type': 'application/json' });\r\n\r\n    return this.http.put(url, body, {headers: headers}).pipe(\r\n      map((res: AutoBrigadir) => {\r\n        this.editedRow = res;\r\n        return this.editedRow;\r\n      }),\r\n      catchError(this._error.handleError)\r\n    )\r\n  }\r\n\r\n  delete(id: number): Observable<any> {\r\n    let url = environment.apiUrl + environment.apiBrigadir + '/' + id;\r\n\r\n    let headers = new HttpHeaders({ 'Content-Type': 'application/json' });\r\n\r\n    return this.http.delete(url, {headers: headers}).pipe(\r\n      map(res => {\r\n        return res;\r\n      }),\r\n      catchError(this._error.handleError)\r\n    )\r\n  }\r\n\r\n  add(item: any): Observable<AutoBrigadir> {\r\n    let url = environment.apiUrl + environment.apiBrigadir + '/add';\r\n\r\n    let body = JSON.stringify(item);\r\n\r\n    let headers = new HttpHeaders({ 'Content-Type': 'application/json' });\r\n\r\n    return this.http.post(url, body, {headers: headers}).pipe(\r\n      map((res: AutoBrigadir) => {\r\n        this.newRow = res;\r\n        return res;\r\n      }),\r\n      catchError(this._error.handleError)\r\n    )\r\n  }\r\n  \r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\r\nimport {ErrorService} from \"./error.service\";\r\nimport {Observable} from \"rxjs\";\r\nimport {environment} from \"../../environments/environment\";\r\nimport {catchError, map} from \"rxjs/operators\";\r\nimport {AutoCategoryPersonal} from \"../model/AutoCategoryPersonal\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CategoryPersonalService {\r\n\r\n  private rows: AutoCategoryPersonal[];\r\n  private row: AutoCategoryPersonal;\r\n  editedRow: AutoCategoryPersonal;\r\n  newRow: AutoCategoryPersonal;\r\n\r\n  constructor(private http: HttpClient,\r\n              private _error: ErrorService) { }\r\n\r\n  getAll(): Observable<AutoCategoryPersonal[]> {\r\n    return this.http.get(environment.apiUrl + environment.apiCategoryPersonal + '/all').pipe(\r\n      map((res: AutoCategoryPersonal[]) => {\r\n        this.rows = res;\r\n        return this.rows;\r\n      }),\r\n      catchError(this._error.handleError)\r\n    );\r\n  }\r\n\r\n  getSingle(id: number): Observable<AutoCategoryPersonal> {\r\n    return this.http.get(environment.apiUrl + environment.apiCategoryPersonal + '/' + id).pipe(\r\n      map((res: AutoCategoryPersonal) => {\r\n        this.row = res;\r\n        return this.row;\r\n      }),\r\n      catchError(this._error.handleError)\r\n    )\r\n  }\r\n\r\n  update(id: number, item: any): Observable<AutoCategoryPersonal> {\r\n    let url = environment.apiUrl + environment.apiCategoryPersonal + '/' + id;\r\n\r\n    let body = JSON.stringify(item);\r\n\r\n    let headers = new HttpHeaders({ 'Content-Type': 'application/json' });\r\n\r\n    return this.http.put(url, body, {headers: headers}).pipe(\r\n      map((res: AutoCategoryPersonal) => {\r\n        this.editedRow = res;\r\n        return this.editedRow;\r\n      }),\r\n      catchError(this._error.handleError)\r\n    )\r\n  }\r\n\r\n  delete(id: number): Observable<any> {\r\n    let url = environment.apiUrl + environment.apiCategoryPersonal + '/' + id;\r\n\r\n    let headers = new HttpHeaders({ 'Content-Type': 'application/json' });\r\n\r\n    return this.http.delete(url, {headers: headers}).pipe(\r\n      map(res => {\r\n        return res;\r\n      }),\r\n      catchError(this._error.handleError)\r\n    )\r\n  }\r\n\r\n  add(item: any): Observable<AutoCategoryPersonal> {\r\n    let url = environment.apiUrl + environment.apiCategoryPersonal + '/add';\r\n\r\n    let body = JSON.stringify(item);\r\n    console.log(body);\r\n\r\n    let headers = new HttpHeaders({ 'Content-Type': 'application/json' });\r\n\r\n    return this.http.post(url, body, {headers: headers}).pipe(\r\n      map((res: AutoCategoryPersonal) => {\r\n        this.newRow = res;\r\n        return res;\r\n      }),\r\n      catchError(this._error.handleError)\r\n    )\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\r\nimport {ErrorService} from \"./error.service\";\r\nimport {Observable} from \"rxjs\";\r\nimport {environment} from \"../../environments/environment\";\r\nimport {catchError, map} from \"rxjs/operators\";\r\nimport {AutoCategory} from \"../model/AutoCategory\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CategoryService {\r\n  private categorys: AutoCategory[];\r\n  private category: AutoCategory;\r\n  editedRow: AutoCategory;\r\n  newRow: AutoCategory;\r\n\r\n  constructor(private http: HttpClient,\r\n              private _error: ErrorService) { }\r\n\r\n  getAll(): Observable<AutoCategory[]> {\r\n    return this.http.get(environment.apiUrl + environment.apiCategory + '/all').pipe(\r\n      map((res: AutoCategory[]) => {\r\n        this.categorys = res;\r\n        return this.categorys;\r\n      }),\r\n      catchError(this._error.handleError)\r\n    );\r\n  }\r\n\r\n  getSingle(id: number): Observable<AutoCategory> {\r\n    return this.http.get(environment.apiUrl + environment.apiCategory + '/' + id).pipe(\r\n      map((res: AutoCategory) => {\r\n        this.category = res;\r\n        return this.category;\r\n      }),\r\n      catchError(this._error.handleError)\r\n    )\r\n  }\r\n\r\n  update(id: number, category: any): Observable<AutoCategory> {\r\n    let url = environment.apiUrl + environment.apiCategory + '/' + id;\r\n\r\n    let body = JSON.stringify(category);\r\n\r\n    let headers = new HttpHeaders({ 'Content-Type': 'application/json' });\r\n\r\n    return this.http.put(url, body, {headers: headers}).pipe(\r\n      map((res: AutoCategory) => {\r\n        this.editedRow = res;\r\n        return this.editedRow;\r\n      }),\r\n      catchError(this._error.handleError)\r\n    )\r\n  }\r\n\r\n  delete(id: number): Observable<any> {\r\n    let url = environment.apiUrl + environment.apiCategory + '/' + id;\r\n\r\n    let headers = new HttpHeaders({ 'Content-Type': 'application/json' });\r\n\r\n    return this.http.delete(url, {headers: headers}).pipe(\r\n      map(res => {\r\n        return res;\r\n      }),\r\n      catchError(this._error.handleError)\r\n    )\r\n  }\r\n\r\n  add(category: any): Observable<AutoCategory> {\r\n    let url = environment.apiUrl + environment.apiCategory + '/add';\r\n\r\n    let body = JSON.stringify(category);\r\n    console.log(body);\r\n\r\n    let headers = new HttpHeaders({ 'Content-Type': 'application/json' });\r\n\r\n    return this.http.post(url, body, {headers: headers}).pipe(\r\n      map((res: AutoCategory) => {\r\n        this.newRow = res;\r\n        return res;\r\n      }),\r\n      catchError(this._error.handleError)\r\n    )\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DialogService {\r\n  dialogData: any;\r\n\r\n  constructor() { }\r\n\r\n  dialogUpdate(object: any): void {\r\n    this.dialogData = object;\r\n  }\r\n\r\n  dialogAdd(object: any): void {\r\n    this.dialogData = object;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {User} from \"../model/User\";\r\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\r\nimport {ErrorService} from \"./error.service\";\r\nimport {Observable} from \"rxjs\";\r\nimport {environment} from \"../../environments/environment\";\r\nimport {catchError, map} from \"rxjs/operators\";\r\nimport {Driver} from \"../model/Driver\";\r\nimport {AutoDrivers} from \"../model/AutoDrivers\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DriverService {\r\n\r\n  drivers: Driver[];\r\n  driver: Driver;\r\n  editedRow: Driver;\r\n  newRow: Driver;\r\n\r\n  constructor(private http: HttpClient,\r\n              private _error: ErrorService) { }\r\n\r\n  getAll(): Observable<Driver[]> {\r\n    return this.http.get(environment.apiUrl + environment.apiDriver + '/all').pipe(\r\n      map((res: Driver[]) => {\r\n        this.drivers = res;\r\n        return this.drivers;\r\n      }),\r\n      catchError(this._error.handleError)\r\n    );\r\n  }\r\n\r\n  getSingle(id: number): Observable<Driver> {\r\n    return this.http.get(environment.apiUrl + environment.apiDriver + '/' + id).pipe(\r\n      map((res: Driver) => {\r\n        this.driver = res;\r\n        return this.driver;\r\n      }),\r\n      catchError(this._error.handleError)\r\n    )\r\n  }\r\n\r\n  update(id: number, driver: any): Observable<AutoDrivers> {\r\n    let url = environment.apiUrl + environment.apiDriver + '/' + id;\r\n\r\n    let body = JSON.stringify(driver);\r\n\r\n    let headers = new HttpHeaders({ 'Content-Type': 'application/json' });\r\n\r\n    return this.http.put(url, body, {headers: headers}).pipe(\r\n      map((res: AutoDrivers) => {\r\n        this.editedRow = res;\r\n        return this.editedRow;\r\n      }),\r\n      catchError(this._error.handleError)\r\n    )\r\n  }\r\n\r\n  delete(id: number): Observable<any> {\r\n    let url = environment.apiUrl + environment.apiDriver + '/' + id;\r\n\r\n    let headers = new HttpHeaders({ 'Content-Type': 'application/json' });\r\n\r\n    return this.http.delete(url, {headers: headers}).pipe(\r\n      map(res => {\r\n        return res;\r\n      }),\r\n      catchError(this._error.handleError)\r\n    )\r\n  }\r\n\r\n  add(driver: any): Observable<AutoDrivers> {\r\n    let url = environment.apiUrl + environment.apiDriver + '/add';\r\n\r\n    let body = JSON.stringify(driver);\r\n    console.log(body);\r\n\r\n    let headers = new HttpHeaders({ 'Content-Type': 'application/json' });\r\n\r\n    return this.http.post(url, body, {headers: headers}).pipe(\r\n      map((res: AutoDrivers) => {\r\n        this.newRow = res;\r\n        return res;\r\n      }),\r\n      catchError(this._error.handleError)\r\n    )\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpErrorResponse} from \"@angular/common/http\";\r\nimport {BreakpointObserver} from \"@angular/cdk/layout\";\r\nimport {Observable, throwError} from \"rxjs\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ErrorService {\r\n  private isHandset$: Observable<boolean>;\r\n\r\n  constructor(private breakpointObserver: BreakpointObserver) { }\r\n\r\n  handleError(error: HttpErrorResponse) {\r\n    console.log(error);\r\n    return throwError(error);\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\r\nimport {ErrorService} from \"./error.service\";\r\nimport {Observable} from \"rxjs\";\r\nimport {environment} from \"../../environments/environment\";\r\nimport {catchError, map} from \"rxjs/operators\";\r\nimport {AutoGroup} from \"../model/AutoGroup\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GroupService {\r\n\r\n  private rows: AutoGroup[];\r\n  private row: AutoGroup;\r\n  editedRow: AutoGroup;\r\n  newRow: AutoGroup;\r\n\r\n  constructor(private http: HttpClient,\r\n              private _error: ErrorService) { }\r\n\r\n  getAll(): Observable<AutoGroup[]> {\r\n    return this.http.get(environment.apiUrl + environment.apiGroup + '/all').pipe(\r\n      map((res: AutoGroup[]) => {\r\n        this.rows = res;\r\n        return this.rows;\r\n      }),\r\n      catchError(this._error.handleError)\r\n    );\r\n  }\r\n\r\n  getSingle(id: number): Observable<AutoGroup> {\r\n    return this.http.get(environment.apiUrl + environment.apiGroup + '/' + id).pipe(\r\n      map((res: AutoGroup) => {\r\n        this.row = res;\r\n        return this.row;\r\n      }),\r\n      catchError(this._error.handleError)\r\n    )\r\n  }\r\n\r\n  update(id: number, item: any): Observable<AutoGroup> {\r\n    let url = environment.apiUrl + environment.apiGroup + '/' + id;\r\n\r\n    let body = JSON.stringify(item);\r\n\r\n    let headers = new HttpHeaders({ 'Content-Type': 'application/json' });\r\n\r\n    return this.http.put(url, body, {headers: headers}).pipe(\r\n      map((res: AutoGroup) => {\r\n        this.editedRow = res;\r\n        return this.editedRow;\r\n      }),\r\n      catchError(this._error.handleError)\r\n    )\r\n  }\r\n\r\n  delete(id: number): Observable<any> {\r\n    let url = environment.apiUrl + environment.apiGroup + '/' + id;\r\n\r\n    let headers = new HttpHeaders({ 'Content-Type': 'application/json' });\r\n\r\n    return this.http.delete(url, {headers: headers}).pipe(\r\n      map(res => {\r\n        return res;\r\n      }),\r\n      catchError(this._error.handleError)\r\n    )\r\n  }\r\n\r\n  add(item: any): Observable<AutoGroup> {\r\n    let url = environment.apiUrl + environment.apiGroup + '/add';\r\n\r\n    let body = JSON.stringify(item);\r\n    console.log(body);\r\n\r\n    let headers = new HttpHeaders({ 'Content-Type': 'application/json' });\r\n\r\n    return this.http.post(url, body, {headers: headers}).pipe(\r\n      map((res: AutoGroup) => {\r\n        this.newRow = res;\r\n        return res;\r\n      }),\r\n      catchError(this._error.handleError)\r\n    )\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\r\nimport {ErrorService} from \"./error.service\";\r\nimport {Observable} from \"rxjs\";\r\nimport {environment} from \"../../environments/environment\";\r\nimport {catchError, map} from \"rxjs/operators\";\r\nimport {AutoHardRoute} from \"../model/AutoHardRoute\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HardRouteService {\r\n\r\n  private rows: AutoHardRoute[];\r\n  private row: AutoHardRoute;\r\n  editedRow: AutoHardRoute;\r\n  newRow: AutoHardRoute;\r\n\r\n  constructor(private http: HttpClient,\r\n              private _error: ErrorService) { }\r\n\r\n  getAll(): Observable<AutoHardRoute[]> {\r\n    return this.http.get(environment.apiUrl + environment.apiHarRoute + '/all').pipe(\r\n      map((res: AutoHardRoute[]) => {\r\n        this.rows = res;\r\n        return this.rows;\r\n      }),\r\n      catchError(this._error.handleError)\r\n    );\r\n  }\r\n\r\n  getSingle(id: number): Observable<AutoHardRoute> {\r\n    return this.http.get(environment.apiUrl + environment.apiHarRoute + '/' + id).pipe(\r\n      map((res: AutoHardRoute) => {\r\n        this.row = res;\r\n        return this.row;\r\n      }),\r\n      catchError(this._error.handleError)\r\n    )\r\n  }\r\n\r\n  update(id: number, item: any): Observable<AutoHardRoute> {\r\n    let url = environment.apiUrl + environment.apiHarRoute + '/' + id;\r\n\r\n    let body = JSON.stringify(item);\r\n\r\n    let headers = new HttpHeaders({ 'Content-Type': 'application/json' });\r\n\r\n    return this.http.put(url, body, {headers: headers}).pipe(\r\n      map((res: AutoHardRoute) => {\r\n        this.editedRow = res;\r\n        return this.editedRow;\r\n      }),\r\n      catchError(this._error.handleError)\r\n    )\r\n  }\r\n\r\n  delete(id: number): Observable<any> {\r\n    let url = environment.apiUrl + environment.apiHarRoute + '/' + id;\r\n\r\n    let headers = new HttpHeaders({ 'Content-Type': 'application/json' });\r\n\r\n    return this.http.delete(url, {headers: headers}).pipe(\r\n      map(res => {\r\n        return res;\r\n      }),\r\n      catchError(this._error.handleError)\r\n    )\r\n  }\r\n\r\n  add(item: any): Observable<AutoHardRoute> {\r\n    let url = environment.apiUrl + environment.apiHarRoute + '/add';\r\n\r\n    let body = JSON.stringify(item);\r\n    console.log(body);\r\n\r\n    let headers = new HttpHeaders({ 'Content-Type': 'application/json' });\r\n\r\n    return this.http.post(url, body, {headers: headers}).pipe(\r\n      map((res: AutoHardRoute) => {\r\n        this.newRow = res;\r\n        return res;\r\n      }),\r\n      catchError(this._error.handleError)\r\n    )\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {AutoInfrastruct} from \"../model/AutoInfrastruct\";\r\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\r\nimport {ErrorService} from \"./error.service\";\r\nimport {Observable} from \"rxjs\";\r\nimport {environment} from \"../../environments/environment\";\r\nimport {catchError, map} from \"rxjs/operators\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class InfrastructService {\r\n\r\n  private rows: AutoInfrastruct[];\r\n  private row: AutoInfrastruct;\r\n  editedRow: AutoInfrastruct;\r\n  newRow: AutoInfrastruct;\r\n\r\n  constructor(private http: HttpClient,\r\n              private _error: ErrorService) { }\r\n\r\n  getAll(): Observable<AutoInfrastruct[]> {\r\n    return this.http.get(environment.apiUrl + environment.apiInfrastruct + '/all').pipe(\r\n      map((res: AutoInfrastruct[]) => {\r\n        this.rows = res;\r\n        return this.rows;\r\n      }),\r\n      catchError(this._error.handleError)\r\n    );\r\n  }\r\n\r\n  getSingle(id: number): Observable<AutoInfrastruct> {\r\n    return this.http.get(environment.apiUrl + environment.apiInfrastruct + '/' + id).pipe(\r\n      map((res: AutoInfrastruct) => {\r\n        this.row = res;\r\n        return this.row;\r\n      }),\r\n      catchError(this._error.handleError)\r\n    )\r\n  }\r\n\r\n  update(id: number, item: any): Observable<AutoInfrastruct> {\r\n    let url = environment.apiUrl + environment.apiInfrastruct + '/' + id;\r\n\r\n    let body = JSON.stringify(item);\r\n\r\n    let headers = new HttpHeaders({ 'Content-Type': 'application/json' });\r\n\r\n    return this.http.put(url, body, {headers: headers}).pipe(\r\n      map((res: AutoInfrastruct) => {\r\n        this.editedRow = res;\r\n        return this.editedRow;\r\n      }),\r\n      catchError(this._error.handleError)\r\n    )\r\n  }\r\n\r\n  delete(id: number): Observable<any> {\r\n    let url = environment.apiUrl + environment.apiInfrastruct + '/' + id;\r\n\r\n    let headers = new HttpHeaders({ 'Content-Type': 'application/json' });\r\n\r\n    return this.http.delete(url, {headers: headers}).pipe(\r\n      map(res => {\r\n        return res;\r\n      }),\r\n      catchError(this._error.handleError)\r\n    )\r\n  }\r\n\r\n  add(item: any): Observable<AutoInfrastruct> {\r\n    let url = environment.apiUrl + environment.apiInfrastruct + '/add';\r\n\r\n    let body = JSON.stringify(item);\r\n    console.log(body);\r\n\r\n    let headers = new HttpHeaders({ 'Content-Type': 'application/json' });\r\n\r\n    return this.http.post(url, body, {headers: headers}).pipe(\r\n      map((res: AutoInfrastruct) => {\r\n        this.newRow = res;\r\n        return res;\r\n      }),\r\n      catchError(this._error.handleError)\r\n    )\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Observable} from \"rxjs\";\r\nimport {environment} from \"../../environments/environment\";\r\nimport {catchError, map} from \"rxjs/operators\";\r\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\r\nimport {ErrorService} from \"./error.service\";\r\nimport {AutoMarka} from \"../model/AutoMarka\";\r\nimport {AutoCategory} from \"../model/AutoCategory\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MarkaService {\r\n  private markas: AutoMarka[];\r\n  private marka: AutoMarka;\r\n  private editedRow: AutoMarka;\r\n  private newRow: AutoCategory;\r\n\r\n  constructor(private http: HttpClient,\r\n              private _error: ErrorService) { }\r\n\r\n  getAll(): Observable<AutoMarka[]> {\r\n    return this.http.get(environment.apiUrl + environment.apiMarka + '/all').pipe(\r\n      map((res: AutoMarka[]) => {\r\n        this.markas = res;\r\n        return this.markas;\r\n      }),\r\n      catchError(this._error.handleError)\r\n    );\r\n  }\r\n\r\n  getSingle(id: number): Observable<AutoMarka> {\r\n    return this.http.get(environment.apiUrl + environment.apiMarka + '/' + id).pipe(\r\n      map((res: AutoMarka) => {\r\n        this.marka = res;\r\n        return this.marka;\r\n      }),\r\n      catchError(this._error.handleError)\r\n    )\r\n  }\r\n\r\n  update(id: number, marka: any): Observable<AutoMarka> {\r\n    let url = environment.apiUrl + environment.apiMarka + '/' + id;\r\n\r\n    let body = JSON.stringify(marka);\r\n\r\n    let headers = new HttpHeaders({ 'Content-Type': 'application/json' });\r\n\r\n    return this.http.put(url, body, {headers: headers}).pipe(\r\n      map((res: AutoMarka) => {\r\n        this.editedRow = res;\r\n        return this.editedRow;\r\n      }),\r\n      catchError(this._error.handleError)\r\n    )\r\n  }\r\n\r\n  delete(id: number): Observable<any> {\r\n    let url = environment.apiUrl + environment.apiMarka + '/' + id;\r\n\r\n    let headers = new HttpHeaders({ 'Content-Type': 'application/json' });\r\n\r\n    return this.http.delete(url, {headers: headers}).pipe(\r\n      map(res => {\r\n        return res;\r\n      }),\r\n      catchError(this._error.handleError)\r\n    )\r\n  }\r\n\r\n  add(marka: any): Observable<AutoMarka> {\r\n    let url = environment.apiUrl + environment.apiMarka + '/add';\r\n\r\n    let body = JSON.stringify(marka);\r\n    console.log(body);\r\n\r\n    let headers = new HttpHeaders({ 'Content-Type': 'application/json' });\r\n\r\n    return this.http.post(url, body, {headers: headers}).pipe(\r\n      map((res: AutoCategory) => {\r\n        this.newRow = res;\r\n        return res;\r\n      }),\r\n      catchError(this._error.handleError)\r\n    )\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\r\nimport {ErrorService} from \"./error.service\";\r\nimport {Observable} from \"rxjs\";\r\nimport {environment} from \"../../environments/environment\";\r\nimport {catchError, map} from \"rxjs/operators\";\r\nimport {AutoPersonal} from \"../model/AutoPersonal\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PersonalService {\r\n  private rows: AutoPersonal[];\r\n  private row: AutoPersonal;\r\n  editedRow: AutoPersonal;\r\n  newRow: AutoPersonal;\r\n\r\n  constructor(private http: HttpClient,\r\n              private _error: ErrorService) { }\r\n\r\n  getAll(): Observable<AutoPersonal[]> {\r\n    return this.http.get(environment.apiUrl + environment.apiPersonal + '/all').pipe(\r\n      map((res: AutoPersonal[]) => {\r\n        this.rows = res;\r\n        return this.rows;\r\n      }),\r\n      catchError(this._error.handleError)\r\n    );\r\n  }\r\n\r\n  getSingle(id: number): Observable<AutoPersonal> {\r\n    return this.http.get(environment.apiUrl + environment.apiPersonal + '/' + id).pipe(\r\n      map((res: AutoPersonal) => {\r\n        this.row = res;\r\n        return this.row;\r\n      }),\r\n      catchError(this._error.handleError)\r\n    )\r\n  }\r\n\r\n  update(id: number, item: any): Observable<AutoPersonal> {\r\n    let url = environment.apiUrl + environment.apiPersonal + '/' + id;\r\n\r\n    let body = JSON.stringify(item);\r\n\r\n    let headers = new HttpHeaders({ 'Content-Type': 'application/json' });\r\n\r\n    return this.http.put(url, body, {headers: headers}).pipe(\r\n      map((res: AutoPersonal) => {\r\n        this.editedRow = res;\r\n        return this.editedRow;\r\n      }),\r\n      catchError(this._error.handleError)\r\n    )\r\n  }\r\n\r\n  delete(id: number): Observable<any> {\r\n    let url = environment.apiUrl + environment.apiPersonal + '/' + id;\r\n\r\n    let headers = new HttpHeaders({ 'Content-Type': 'application/json' });\r\n\r\n    return this.http.delete(url, {headers: headers}).pipe(\r\n      map(res => {\r\n        return res;\r\n      }),\r\n      catchError(this._error.handleError)\r\n    )\r\n  }\r\n\r\n  add(item: any): Observable<AutoPersonal> {\r\n    let url = environment.apiUrl + environment.apiPersonal + '/add';\r\n\r\n    let body = JSON.stringify(item);\r\n    console.log(body);\r\n\r\n    let headers = new HttpHeaders({ 'Content-Type': 'application/json' });\r\n\r\n    return this.http.post(url, body, {headers: headers}).pipe(\r\n      map((res: AutoPersonal) => {\r\n        this.newRow = res;\r\n        return res;\r\n      }),\r\n      catchError(this._error.handleError)\r\n    )\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\r\nimport {ErrorService} from \"./error.service\";\r\nimport {Observable} from \"rxjs\";\r\nimport {environment} from \"../../environments/environment\";\r\nimport {catchError, map} from \"rxjs/operators\";\r\nimport {AutoProblem} from \"../model/AutoProblem\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProblemService {\r\n\r\n  private rows: AutoProblem[];\r\n  private row: AutoProblem;\r\n  editedRow: AutoProblem;\r\n  newRow: AutoProblem;\r\n\r\n  constructor(private http: HttpClient,\r\n              private _error: ErrorService) { }\r\n\r\n  getAll(): Observable<AutoProblem[]> {\r\n    return this.http.get(environment.apiUrl + environment.apiProblem + '/all').pipe(\r\n      map((res: AutoProblem[]) => {\r\n        this.rows = res;\r\n        return this.rows;\r\n      }),\r\n      catchError(this._error.handleError)\r\n    );\r\n  }\r\n\r\n  getSingle(id: number): Observable<AutoProblem> {\r\n    return this.http.get(environment.apiUrl + environment.apiProblem + '/' + id).pipe(\r\n      map((res: AutoProblem) => {\r\n        this.row = res;\r\n        return this.row;\r\n      }),\r\n      catchError(this._error.handleError)\r\n    )\r\n  }\r\n\r\n  update(id: number, item: any): Observable<AutoProblem> {\r\n    let url = environment.apiUrl + environment.apiProblem + '/' + id;\r\n\r\n    let body = JSON.stringify(item);\r\n\r\n    let headers = new HttpHeaders({ 'Content-Type': 'application/json' });\r\n\r\n    return this.http.put(url, body, {headers: headers}).pipe(\r\n      map((res: AutoProblem) => {\r\n        this.editedRow = res;\r\n        return this.editedRow;\r\n      }),\r\n      catchError(this._error.handleError)\r\n    )\r\n  }\r\n\r\n  delete(id: number): Observable<any> {\r\n    let url = environment.apiUrl + environment.apiProblem + '/' + id;\r\n\r\n    let headers = new HttpHeaders({ 'Content-Type': 'application/json' });\r\n\r\n    return this.http.delete(url, {headers: headers}).pipe(\r\n      map(res => {\r\n        return res;\r\n      }),\r\n      catchError(this._error.handleError)\r\n    )\r\n  }\r\n\r\n  add(item: any): Observable<AutoProblem> {\r\n    let url = environment.apiUrl + environment.apiProblem + '/add';\r\n\r\n    let body = JSON.stringify(item);\r\n    console.log(body);\r\n\r\n    let headers = new HttpHeaders({ 'Content-Type': 'application/json' });\r\n\r\n    return this.http.post(url, body, {headers: headers}).pipe(\r\n      map((res: AutoProblem) => {\r\n        this.newRow = res;\r\n        return res;\r\n      }),\r\n      catchError(this._error.handleError)\r\n    )\r\n  }\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient, HttpHeaders, HttpParams} from \"@angular/common/http\";\r\nimport {ErrorService} from \"./error.service\";\r\nimport {Observable} from \"rxjs\";\r\nimport {environment} from \"../../environments/environment\";\r\nimport {catchError, map} from \"rxjs/operators\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class QueryService {\r\n\r\n  rows;\r\n  dialogsForm;\r\n\r\n  constructor(private http: HttpClient,\r\n              private _error: ErrorService) {\r\n  }\r\n\r\n  query1(): Observable<any[]> {\r\n    return this.http.get(environment.apiUrl + 'auto/getAll').pipe(\r\n      map( res => {\r\n        this.rows = res;\r\n        return this.rows;\r\n      }),\r\n      catchError(this._error.handleError)\r\n    )\r\n  }\r\n\r\n  query2_1(): Observable<any[]> {\r\n    let url = environment.apiUrl + 'drivers/getAll';\r\n\r\n    let headers = new HttpHeaders();\r\n    headers.append('Content-Type', 'application/json');\r\n\r\n    return this.http.get(url, {headers: headers}).pipe(\r\n      map( res => {\r\n        this.rows = res;\r\n        return this.rows;\r\n      }),\r\n      catchError(this._error.handleError)\r\n    )\r\n  }\r\n\r\n  query2_2(auto): Observable<any[]> {\r\n    let url = environment.apiUrl + 'drivers/getAllByAuto';\r\n\r\n    let headers = new HttpHeaders();\r\n    headers.append('Content-Type', 'application/json');\r\n    let params = new HttpParams().set('auto', auto);\r\n\r\n    return this.http.get(url, {headers: headers, params: params}).pipe(\r\n      map( res => {\r\n        this.rows = res;\r\n        return this.rows;\r\n      }),\r\n      catchError(this._error.handleError)\r\n    )\r\n  }\r\n\r\n  query3(): Observable<any[]> {\r\n    let url = environment.apiUrl + 'drivers/getAll';\r\n\r\n    let headers = new HttpHeaders();\r\n    headers.append('Content-Type', 'application/json');\r\n\r\n    return this.http.get(url, {headers: headers}).pipe(\r\n      map( res => {\r\n        this.rows = res;\r\n        return this.rows;\r\n      }),\r\n      catchError(this._error.handleError)\r\n    )\r\n  }\r\n\r\n  query4(): Observable<any[]> {\r\n    let url = environment.apiUrl + 'route/getAll';\r\n\r\n    let headers = new HttpHeaders();\r\n    headers.append('Content-Type', 'application/json');\r\n\r\n    return this.http.get(url, {headers: headers}).pipe(\r\n      map( res => {\r\n        this.rows = res;\r\n        return this.rows;\r\n      }),\r\n      catchError(this._error.handleError)\r\n    )\r\n  }\r\n\r\n  query6_1(category): Observable<any[]> {\r\n    let url = environment.apiUrl + 'repair/getAllByCategory';\r\n\r\n    let headers = new HttpHeaders();\r\n    headers.append('Content-Type', 'application/json');\r\n    let params = new HttpParams().set('category', category);\r\n\r\n    return this.http.get(url, {headers: headers, params: params}).pipe(\r\n      map( res => {\r\n        this.rows = res;\r\n        return this.rows;\r\n      }),\r\n      catchError(this._error.handleError)\r\n    )\r\n  }\r\n\r\n  query6_2(marka): Observable<any[]> {\r\n    let url = environment.apiUrl + 'repair/getAllByMarka';\r\n\r\n    let headers = new HttpHeaders();\r\n    headers.append('Content-Type', 'application/json');\r\n    let params = new HttpParams().set('marka', marka);\r\n\r\n    return this.http.get(url, {headers: headers, params: params}).pipe(\r\n      map( res => {\r\n        this.rows = res;\r\n        return this.rows;\r\n      }),\r\n      catchError(this._error.handleError)\r\n    )\r\n  }\r\n\r\n  query6_3(auto): Observable<any[]> {\r\n    let url = environment.apiUrl + 'repair/getAllByAuto';\r\n\r\n    let headers = new HttpHeaders();\r\n    headers.append('Content-Type', 'application/json');\r\n    let params = new HttpParams().set('auto', auto);\r\n\r\n    return this.http.get(url, {headers: headers, params: params}).pipe(\r\n      map( res => {\r\n        this.rows = res;\r\n        return this.rows;\r\n      }),\r\n      catchError(this._error.handleError)\r\n    )\r\n  }\r\n\r\n  query7(): Observable<any[]> {\r\n    let url = environment.apiUrl + 'group/getAll';\r\n\r\n    let headers = new HttpHeaders();\r\n    headers.append('Content-Type', 'application/json');\r\n\r\n    return this.http.get(url, {headers: headers}).pipe(\r\n      map( res => {\r\n        this.rows = res;\r\n        return this.rows;\r\n      }),\r\n      catchError(this._error.handleError)\r\n    )\r\n  }\r\n\r\n  query8_1(): Observable<any[]> {\r\n    let url = environment.apiUrl + 'infrastruct/getAllGarage';\r\n\r\n    let headers = new HttpHeaders();\r\n    headers.append('Content-Type', 'application/json');\r\n\r\n    return this.http.get(url, {headers: headers}).pipe(\r\n      map( res => {\r\n        this.rows = res;\r\n        return this.rows;\r\n      }),\r\n      catchError(this._error.handleError)\r\n    )\r\n  }\r\n\r\n  query8_2(category): Observable<any[]> {\r\n    let url = environment.apiUrl + 'infrastruct/getAllGarage';\r\n\r\n    let headers = new HttpHeaders();\r\n    headers.append('Content-Type', 'application/json');\r\n    headers.append('Content-Type', 'application/json');\r\n    let params = new HttpParams().set('category', category);\r\n\r\n    return this.http.get(url, {headers: headers, params: params}).pipe(\r\n      map( res => {\r\n        this.rows = res;\r\n        return this.rows;\r\n      }),\r\n      catchError(this._error.handleError)\r\n    )\r\n  }\r\n\r\n  query9(): Observable<any[]> {\r\n    let url = environment.apiUrl + 'auto/getAll';\r\n\r\n    let headers = new HttpHeaders();\r\n    headers.append('Content-Type', 'application/json');\r\n\r\n    return this.http.get(url, {headers: headers}).pipe(\r\n      map( res => {\r\n        this.rows = res;\r\n        return this.rows;\r\n      }),\r\n      catchError(this._error.handleError)\r\n    )\r\n  }\r\n\r\n  query10(auto, date): Observable<any[]> {\r\n    let url = environment.apiUrl + 'hardRoute/findByAutoAndDate';\r\n\r\n    let headers = new HttpHeaders();\r\n    headers.append('Content-Type', 'application/json');\r\n    headers.append('Content-Type', 'application/json');\r\n    let params = new HttpParams().set('auto_id', auto).set('date', date);\r\n\r\n    return this.http.get(url, {headers: headers, params: params}).pipe(\r\n      map( res => {\r\n        this.rows = res;\r\n        return this.rows;\r\n      }),\r\n      catchError(this._error.handleError)\r\n    )\r\n  }\r\n\r\n  query11(category, detail): Observable<any[]> {\r\n    let url = environment.apiUrl + 'repair/getAllByCarTypeAndDetail';\r\n\r\n    let headers = new HttpHeaders();\r\n    headers.append('Content-Type', 'application/json');\r\n    headers.append('Content-Type', 'application/json');\r\n    let params = new HttpParams().set('carType', category).set('detail', detail);\r\n\r\n    return this.http.get(url, {headers: headers, params: params}).pipe(\r\n      map( res => {\r\n        this.rows = res;\r\n        return this.rows;\r\n      }),\r\n      catchError(this._error.handleError)\r\n    )\r\n  }\r\n\r\n  query12(status, date_start, date_finish): Observable<any[]> {\r\n    let url = environment.apiUrl + 'saleBuy/getAllByDate';\r\n\r\n    let headers = new HttpHeaders();\r\n    headers.append('Content-Type', 'application/json');\r\n    headers.append('Content-Type', 'application/json');\r\n    let params = new HttpParams().set('status', status).set('date_start', date_start).set('date_finish', date_finish);\r\n\r\n    return this.http.get(url, {headers: headers, params: params}).pipe(\r\n      map( res => {\r\n        this.rows = res;\r\n        return this.rows;\r\n      }),\r\n      catchError(this._error.handleError)\r\n    )\r\n  }\r\n\r\n  query13(brigadir): Observable<any[]> {\r\n    let url = environment.apiUrl + 'group/getBrigadir';\r\n\r\n    let headers = new HttpHeaders();\r\n    headers.append('Content-Type', 'application/json');\r\n    headers.append('Content-Type', 'application/json');\r\n    let params = new HttpParams().set('id', brigadir);\r\n\r\n    return this.http.get(url, {headers: headers, params: params}).pipe(\r\n      map( res => {\r\n        this.rows = res;\r\n        return this.rows;\r\n      }),\r\n      catchError(this._error.handleError)\r\n    )\r\n  }\r\n\r\n  query14_1(person, date_start, date_finish): Observable<any[]> {\r\n    let url = environment.apiUrl + 'repair/getAllByPersonAndDate';\r\n\r\n    let headers = new HttpHeaders();\r\n    headers.append('Content-Type', 'application/json');\r\n    headers.append('Content-Type', 'application/json');\r\n    let params = new HttpParams().set('person', person).set('date_start', date_start).set('date_finish', date_finish);\r\n\r\n    return this.http.get(url, {headers: headers, params: params}).pipe(\r\n      map( res => {\r\n        this.rows = res;\r\n        return this.rows;\r\n      }),\r\n      catchError(this._error.handleError)\r\n    )\r\n  }\r\n\r\n  query14_2(person, auto, date_start, date_finish): Observable<any[]> {\r\n    let url = environment.apiUrl + 'repair/getAllByPersonAndDate';\r\n\r\n    let headers = new HttpHeaders();\r\n    headers.append('Content-Type', 'application/json');\r\n    headers.append('Content-Type', 'application/json');\r\n    let params = new HttpParams().set('person', person).set('auto', auto).set('date_start', date_start).set('date_finish', date_finish);\r\n\r\n    return this.http.get(url, {headers: headers, params: params}).pipe(\r\n      map( res => {\r\n        this.rows = res;\r\n        return this.rows;\r\n      }),\r\n      catchError(this._error.handleError)\r\n    )\r\n  }\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {AutoRepair} from \"../model/AutoRepair\";\r\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\r\nimport {ErrorService} from \"./error.service\";\r\nimport {Observable} from \"rxjs\";\r\nimport {environment} from \"../../environments/environment\";\r\nimport {catchError, map} from \"rxjs/operators\";\r\nimport {AutoPersonal} from \"../model/AutoPersonal\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RepairService {\r\n\r\n  private rows: AutoRepair[];\r\n  private row: AutoRepair;\r\n  editedRow: AutoRepair;\r\n  newRow: AutoRepair;\r\n\r\n  constructor(private http: HttpClient,\r\n              private _error: ErrorService) { }\r\n\r\n  getAll(): Observable<AutoRepair[]> {\r\n    return this.http.get(environment.apiUrl + environment.apiRepair + '/all').pipe(\r\n      map((res: AutoRepair[]) => {\r\n        this.rows = res;\r\n        return this.rows;\r\n      }),\r\n      catchError(this._error.handleError)\r\n    );\r\n  }\r\n\r\n  getSingle(id: number): Observable<AutoRepair> {\r\n    return this.http.get(environment.apiUrl + environment.apiRepair + '/' + id).pipe(\r\n      map((res: AutoRepair) => {\r\n        this.row = res;\r\n        return this.row;\r\n      }),\r\n      catchError(this._error.handleError)\r\n    )\r\n  }\r\n\r\n  update(id: number, item: any): Observable<AutoRepair> {\r\n    let url = environment.apiUrl + environment.apiRepair + '/' + id;\r\n\r\n    let body = JSON.stringify(item);\r\n\r\n    let headers = new HttpHeaders({ 'Content-Type': 'application/json' });\r\n\r\n    return this.http.put(url, body, {headers: headers}).pipe(\r\n      map((res: AutoRepair) => {\r\n        this.editedRow = res;\r\n        return this.editedRow;\r\n      }),\r\n      catchError(this._error.handleError)\r\n    )\r\n  }\r\n\r\n  delete(id: number): Observable<any> {\r\n    let url = environment.apiUrl + environment.apiRepair + '/' + id;\r\n\r\n    let headers = new HttpHeaders({ 'Content-Type': 'application/json' });\r\n\r\n    return this.http.delete(url, {headers: headers}).pipe(\r\n      map(res => {\r\n        return res;\r\n      }),\r\n      catchError(this._error.handleError)\r\n    )\r\n  }\r\n\r\n  add(item: any): Observable<AutoRepair> {\r\n    let url = environment.apiUrl + environment.apiRepair + '/add';\r\n\r\n    let body = JSON.stringify(item);\r\n    console.log(body);\r\n\r\n    let headers = new HttpHeaders({ 'Content-Type': 'application/json' });\r\n\r\n    return this.http.post(url, body, {headers: headers}).pipe(\r\n      map((res: AutoRepair) => {\r\n        this.newRow = res;\r\n        return res;\r\n      }),\r\n      catchError(this._error.handleError)\r\n    )\r\n  }\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\r\nimport {ErrorService} from \"./error.service\";\r\nimport {Observable} from \"rxjs\";\r\nimport {environment} from \"../../environments/environment\";\r\nimport {catchError, map} from \"rxjs/operators\";\r\nimport {AutoRoute} from \"../model/AutoRoute\";\r\nimport {AutoGroup} from \"../model/AutoGroup\";\r\nimport {AutoStreet} from \"../model/AutoStreet\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RouteService {\r\n\r\n  private rows: AutoRoute[];\r\n  private row: AutoRoute;\r\n  editedRow: AutoRoute;\r\n  newRow: AutoRoute;\r\n\r\n  constructor(private http: HttpClient,\r\n              private _error: ErrorService) { }\r\n\r\n  getAll(): Observable<AutoRoute[]> {\r\n    return this.http.get(environment.apiUrl + environment.apiRoute + '/all').pipe(\r\n      map((res: AutoRoute[]) => {\r\n        this.rows = res;\r\n        return this.rows;\r\n      }),\r\n      catchError(this._error.handleError)\r\n    );\r\n  }\r\n\r\n  getSingle(id: number): Observable<AutoRoute> {\r\n    return this.http.get(environment.apiUrl + environment.apiRoute + '/' + id).pipe(\r\n      map((res: AutoRoute) => {\r\n        this.row = res;\r\n        return this.row;\r\n      }),\r\n      catchError(this._error.handleError)\r\n    )\r\n  }\r\n\r\n  update(id: number, item: any): Observable<AutoRoute> {\r\n    let url = environment.apiUrl + environment.apiRoute + '/' + id;\r\n\r\n    let body = JSON.stringify(item);\r\n\r\n    let headers = new HttpHeaders({ 'Content-Type': 'application/json' });\r\n\r\n    return this.http.put(url, body, {headers: headers}).pipe(\r\n      map((res: AutoRoute) => {\r\n        this.editedRow = res;\r\n        return this.editedRow;\r\n      }),\r\n      catchError(this._error.handleError)\r\n    )\r\n  }\r\n\r\n  delete(id: number): Observable<any> {\r\n    let url = environment.apiUrl + environment.apiRoute + '/' + id;\r\n\r\n    let headers = new HttpHeaders({ 'Content-Type': 'application/json' });\r\n\r\n    return this.http.delete(url, {headers: headers}).pipe(\r\n      map(res => {\r\n        return res;\r\n      }),\r\n      catchError(this._error.handleError)\r\n    )\r\n  }\r\n\r\n  add(item: any): Observable<AutoRoute> {\r\n    let url = environment.apiUrl + environment.apiRoute + '/add';\r\n\r\n    let body = JSON.stringify(item);\r\n    console.log(body);\r\n\r\n    let headers = new HttpHeaders({ 'Content-Type': 'application/json' });\r\n\r\n    return this.http.post(url, body, {headers: headers}).pipe(\r\n      map((res: AutoRoute) => {\r\n        this.newRow = res;\r\n        return res;\r\n      }),\r\n      catchError(this._error.handleError)\r\n    )\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {AutoSaleBuy} from \"../model/AutoSaleBuy\";\r\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\r\nimport {ErrorService} from \"./error.service\";\r\nimport {Observable} from \"rxjs\";\r\nimport {environment} from \"../../environments/environment\";\r\nimport {catchError, map} from \"rxjs/operators\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SaleBuyService {\r\n\r\n  private rows: AutoSaleBuy[];\r\n  private row: AutoSaleBuy;\r\n  editedRow: AutoSaleBuy;\r\n  newRow: AutoSaleBuy;\r\n\r\n  constructor(private http: HttpClient,\r\n              private _error: ErrorService) { }\r\n\r\n  getAll(): Observable<AutoSaleBuy[]> {\r\n    return this.http.get(environment.apiUrl + environment.apiSaleBuy + '/all').pipe(\r\n      map((res: AutoSaleBuy[]) => {\r\n        this.rows = res;\r\n        return this.rows;\r\n      }),\r\n      catchError(this._error.handleError)\r\n    );\r\n  }\r\n\r\n  getSingle(id: number): Observable<AutoSaleBuy> {\r\n    return this.http.get(environment.apiUrl + environment.apiSaleBuy + '/' + id).pipe(\r\n      map((res: AutoSaleBuy) => {\r\n        this.row = res;\r\n        return this.row;\r\n      }),\r\n      catchError(this._error.handleError)\r\n    )\r\n  }\r\n\r\n  update(id: number, item: any): Observable<AutoSaleBuy> {\r\n    let url = environment.apiUrl + environment.apiSaleBuy + '/' + id;\r\n\r\n    let body = JSON.stringify(item);\r\n\r\n    let headers = new HttpHeaders({ 'Content-Type': 'application/json' });\r\n\r\n    return this.http.put(url, body, {headers: headers}).pipe(\r\n      map((res: AutoSaleBuy) => {\r\n        this.editedRow = res;\r\n        return this.editedRow;\r\n      }),\r\n      catchError(this._error.handleError)\r\n    )\r\n  }\r\n\r\n  delete(id: number): Observable<any> {\r\n    let url = environment.apiUrl + environment.apiSaleBuy + '/' + id;\r\n\r\n    let headers = new HttpHeaders({ 'Content-Type': 'application/json' });\r\n\r\n    return this.http.delete(url, {headers: headers}).pipe(\r\n      map(res => {\r\n        return res;\r\n      }),\r\n      catchError(this._error.handleError)\r\n    )\r\n  }\r\n\r\n  add(item: any): Observable<AutoSaleBuy> {\r\n    let url = environment.apiUrl + environment.apiSaleBuy + '/add';\r\n\r\n    let body = JSON.stringify(item);\r\n    console.log(body);\r\n\r\n    let headers = new HttpHeaders({ 'Content-Type': 'application/json' });\r\n\r\n    return this.http.post(url, body, {headers: headers}).pipe(\r\n      map((res: AutoSaleBuy) => {\r\n        this.newRow = res;\r\n        return res;\r\n      }),\r\n      catchError(this._error.handleError)\r\n    )\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {AutoStreet} from \"../model/AutoStreet\";\r\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\r\nimport {ErrorService} from \"./error.service\";\r\nimport {Observable} from \"rxjs\";\r\nimport {environment} from \"../../environments/environment\";\r\nimport {catchError, map} from \"rxjs/operators\";\r\nimport {AutoGroup} from \"../model/AutoGroup\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class StreetService {\r\n\r\n  private rows: AutoStreet[];\r\n  private row: AutoStreet;\r\n  editedRow: AutoStreet;\r\n  newRow: AutoStreet;\r\n\r\n  constructor(private http: HttpClient,\r\n              private _error: ErrorService) { }\r\n\r\n  getAll(): Observable<AutoStreet[]> {\r\n    return this.http.get(environment.apiUrl + environment.apiStreet + '/all').pipe(\r\n      map((res: AutoStreet[]) => {\r\n        this.rows = res;\r\n        return this.rows;\r\n      }),\r\n      catchError(this._error.handleError)\r\n    );\r\n  }\r\n\r\n  getSingle(id: number): Observable<AutoStreet> {\r\n    return this.http.get(environment.apiUrl + environment.apiStreet + '/' + id).pipe(\r\n      map((res: AutoStreet) => {\r\n        this.row = res;\r\n        return this.row;\r\n      }),\r\n      catchError(this._error.handleError)\r\n    )\r\n  }\r\n\r\n  update(id: number, item: any): Observable<AutoStreet> {\r\n    let url = environment.apiUrl + environment.apiStreet + '/' + id;\r\n\r\n    let body = JSON.stringify(item);\r\n\r\n    let headers = new HttpHeaders({ 'Content-Type': 'application/json' });\r\n\r\n    return this.http.put(url, body, {headers: headers}).pipe(\r\n      map((res: AutoStreet) => {\r\n        this.editedRow = res;\r\n        return this.editedRow;\r\n      }),\r\n      catchError(this._error.handleError)\r\n    )\r\n  }\r\n\r\n  delete(id: number): Observable<any> {\r\n    let url = environment.apiUrl + environment.apiStreet + '/' + id;\r\n\r\n    let headers = new HttpHeaders({ 'Content-Type': 'application/json' });\r\n\r\n    return this.http.delete(url, {headers: headers}).pipe(\r\n      map(res => {\r\n        return res;\r\n      }),\r\n      catchError(this._error.handleError)\r\n    )\r\n  }\r\n\r\n  add(item: any): Observable<AutoStreet> {\r\n    let url = environment.apiUrl + environment.apiStreet + '/add';\r\n\r\n    let body = JSON.stringify(item);\r\n    console.log(body);\r\n\r\n    let headers = new HttpHeaders({ 'Content-Type': 'application/json' });\r\n\r\n    return this.http.post(url, body, {headers: headers}).pipe(\r\n      map((res: AutoStreet) => {\r\n        this.newRow = res;\r\n        return res;\r\n      }),\r\n      catchError(this._error.handleError)\r\n    )\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {User} from \"../model/User\";\r\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\r\nimport {ErrorService} from \"./error.service\";\r\nimport {Observable} from \"rxjs\";\r\nimport {environment} from \"../../environments/environment\";\r\nimport {catchError, map} from \"rxjs/operators\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n  users: User[];\r\n  user: User;\r\n  editedUser: User;\r\n  newUser: User;\r\n  // dialogData: User;\r\n\r\n  constructor(private http: HttpClient,\r\n              private _error: ErrorService) { }\r\n\r\n  getAll(): Observable<User[]> {\r\n    return this.http.get(environment.apiUrl + environment.apiUser + '/all').pipe(\r\n      map((res: User[]) => {\r\n        this.users = res;\r\n        return this.users;\r\n    }),\r\n      catchError(this._error.handleError)\r\n    );\r\n  }\r\n\r\n  getSingle(id: number): Observable<User> {\r\n    return this.http.get(environment.apiUrl + environment.apiUser + '/' + id).pipe(\r\n      map((res: User) => {\r\n        this.user = res;\r\n        return this.user;\r\n      }),\r\n      catchError(this._error.handleError)\r\n    )\r\n  }\r\n\r\n  update(id: number, user: any): Observable<User> {\r\n    let url = environment.apiUrl + environment.apiUser + '/' + id;\r\n\r\n    let body = JSON.stringify(user);\r\n\r\n    let headers = new HttpHeaders({ 'Content-Type': 'application/json' });\r\n\r\n    return this.http.put(url, body, {headers: headers}).pipe(\r\n      map((res: User) => {\r\n        this.editedUser = res;\r\n        return this.editedUser;\r\n      }),\r\n      catchError(this._error.handleError)\r\n    )\r\n  }\r\n\r\n  delete(id: number): Observable<any> {\r\n    let url = environment.apiUrl + environment.apiUser + '/' + id;\r\n\r\n    let headers = new HttpHeaders({ 'Content-Type': 'application/json' });\r\n\r\n    return this.http.delete(url, {headers: headers}).pipe(\r\n      map(res => {\r\n        return res;\r\n      }),\r\n      catchError(this._error.handleError)\r\n    )\r\n  }\r\n\r\n  add(user: any): Observable<User> {\r\n    let url = environment.apiUrl + environment.apiUser + '/add';\r\n\r\n    let body = JSON.stringify(user);\r\n\r\n    let headers = new HttpHeaders({ 'Content-Type': 'application/json' });\r\n\r\n    return this.http.post(url, body, {headers: headers}).pipe(\r\n      map((res: User) => {\r\n        this.newUser = res;\r\n        return res;\r\n      }),\r\n      catchError(this._error.handleError)\r\n    )\r\n  }\r\n\r\n  getStorageInfo() {\r\n    return localStorage.getItem('login');\r\n  }\r\n\r\n  setStorageInfo() {\r\n    localStorage.setItem('login', '');\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiUrl: 'https://vkravchik.herokuapp.com/rest/',\r\n  apiUser: '/users',\r\n  apiDriver: '/drivers',\r\n  apiCategory: '/category',\r\n  apiMarka: '/marka',\r\n  apiAuto: '/auto',\r\n  apiBrigada: '/brigada',\r\n  apiBrigadir: '/brigadir',\r\n  apiCategoryPersonal: '/categoryPersonal',\r\n  apiSaleBuy: '/saleBuy',\r\n  apiHarRoute: '/hardRoute',\r\n  apiInfrastruct: '/infrastruct',\r\n  apiPersonal: '/personal',\r\n  apiProblem: '/problem',\r\n  apiRepair: '/repair',\r\n  apiGroup: '/group',\r\n  apiStreet: '/street',\r\n  apiRoute: '/route',\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n\r\n"],"sourceRoot":""}